/* 
 * Tradovate MarketData API
 *
 * Tradovate MarketData API provides an access to the complete set of Tradovate market data functionality.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Tradovate.MarketData.Services.Client;
using Tradovate.MarketData.Services.Api;
using Tradovate.MarketData.Services.Model;

namespace Tradovate.MarketData.Services.Test
{
    /// <summary>
    ///  Class for testing PricesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class PricesApiTests
    {
        private PricesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new PricesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of PricesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' PricesApi
            //Assert.IsInstanceOfType(typeof(PricesApi), instance, "instance is a PricesApi");
        }

        /// <summary>
        /// Test CancelChart
        /// </summary>
        [Test]
        public void CancelChartTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CancelChart body = null;
            //var response = instance.CancelChart(body);
            //Assert.IsInstanceOf<MarketDataSubscriptionResult> (response, "response is MarketDataSubscriptionResult");
        }
        /// <summary>
        /// Test GetChart
        /// </summary>
        [Test]
        public void GetChartTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetChart body = null;
            //var response = instance.GetChart(body);
            //Assert.IsInstanceOf<ChartSubscriptionResult> (response, "response is ChartSubscriptionResult");
        }
        /// <summary>
        /// Test SubscribeDOM
        /// </summary>
        [Test]
        public void SubscribeDOMTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SubscribeDOM body = null;
            //var response = instance.SubscribeDOM(body);
            //Assert.IsInstanceOf<MarketDataSubscriptionResult> (response, "response is MarketDataSubscriptionResult");
        }
        /// <summary>
        /// Test SubscribeHistogram
        /// </summary>
        [Test]
        public void SubscribeHistogramTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SubscribeHistogram body = null;
            //var response = instance.SubscribeHistogram(body);
            //Assert.IsInstanceOf<MarketDataSubscriptionResult> (response, "response is MarketDataSubscriptionResult");
        }
        /// <summary>
        /// Test SubscribeQuote
        /// </summary>
        [Test]
        public void SubscribeQuoteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SubscribeQuote body = null;
            //var response = instance.SubscribeQuote(body);
            //Assert.IsInstanceOf<MarketDataSubscriptionResult> (response, "response is MarketDataSubscriptionResult");
        }
        /// <summary>
        /// Test UnsubscribeDOM
        /// </summary>
        [Test]
        public void UnsubscribeDOMTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UnsubscribeDOM body = null;
            //var response = instance.UnsubscribeDOM(body);
            //Assert.IsInstanceOf<MarketDataSubscriptionResult> (response, "response is MarketDataSubscriptionResult");
        }
        /// <summary>
        /// Test UnsubscribeHistogram
        /// </summary>
        [Test]
        public void UnsubscribeHistogramTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UnsubscribeHistogram body = null;
            //var response = instance.UnsubscribeHistogram(body);
            //Assert.IsInstanceOf<MarketDataSubscriptionResult> (response, "response is MarketDataSubscriptionResult");
        }
        /// <summary>
        /// Test UnsubscribeQuote
        /// </summary>
        [Test]
        public void UnsubscribeQuoteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UnsubscribeQuote body = null;
            //var response = instance.UnsubscribeQuote(body);
            //Assert.IsInstanceOf<MarketDataSubscriptionResult> (response, "response is MarketDataSubscriptionResult");
        }
    }

}
