---
openapi: 3.0.0
info:
  title: Tradovate API
  description: Tradovate API provides an access to the complete set of robust Tradovate
    functionality.
  version: 1.0.0
servers:
- url: https://demo-api-d.tradovate.com/v1
paths:
  "/auth/accesstokenrequest":
    post:
      description: ''
      operationId: accessTokenRequest
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AccessTokenRequest"
      tags:
      - Authentication
      responses:
        '200':
          description: AccessTokenResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccessTokenResponse"
  "/auth/renewaccesstoken":
    get:
      description: ''
      operationId: renewAccessToken
      security:
      - bearer_access_token: []
      tags:
      - Authentication
      responses:
        '200':
          description: AccessTokenResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccessTokenResponse"
  "/contract/deps":
    get:
      description: Retrieves all entities of Contract type related to ContractMaturity
        entity
      operationId: contractDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of ContractMaturity entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - ContractLibrary
      responses:
        '200':
          description: Contract
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Contract"
  "/contract/find":
    get:
      description: Retrieves an entity of Contract type by its name
      operationId: contractFind
      security:
      - bearer_access_token: []
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      tags:
      - ContractLibrary
      responses:
        '200':
          description: Contract
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Contract"
  "/contract/getproductfeeparams":
    post:
      description: ''
      operationId: getProductFeeParams
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GetProductFeeParams"
      tags:
      - ContractLibrary
      responses:
        '200':
          description: ProductFeeParamsResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductFeeParamsResponse"
  "/contract/item":
    get:
      description: Retrieves an entity of Contract type by its id
      operationId: contractItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - ContractLibrary
      responses:
        '200':
          description: Contract
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Contract"
  "/contract/items":
    get:
      description: Retrieves multiple entities of Contract type by its ids
      operationId: contractItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - ContractLibrary
      responses:
        '200':
          description: Contract
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Contract"
  "/contract/ldeps":
    get:
      description: Retrieves all entities of Contract type related to multiple entities
        of ContractMaturity type
      operationId: contractLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of ContractMaturity entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - ContractLibrary
      responses:
        '200':
          description: Contract
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Contract"
  "/contract/rollcontract":
    post:
      description: ''
      operationId: rollContract
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RollContract"
      tags:
      - ContractLibrary
      responses:
        '200':
          description: RollContractResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/RollContractResponse"
  "/contract/suggest":
    get:
      description: Retrieves entities of Contract type filtered by an occurrence of
        a text in one of its fields
      operationId: contractSuggest
      security:
      - bearer_access_token: []
      parameters:
      - name: t
        description: Text
        in: query
        required: true
        schema:
          type: string
      - name: l
        description: Max number of entities
        in: query
        required: true
        schema:
          type: integer
          format: int32
      tags:
      - ContractLibrary
      responses:
        '200':
          description: Contract
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Contract"
  "/contractGroup/find":
    get:
      description: Retrieves an entity of ContractGroup type by its name
      operationId: contractGroupFind
      security:
      - bearer_access_token: []
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      tags:
      - ContractLibrary
      responses:
        '200':
          description: ContractGroup
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContractGroup"
  "/contractGroup/item":
    get:
      description: Retrieves an entity of ContractGroup type by its id
      operationId: contractGroupItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - ContractLibrary
      responses:
        '200':
          description: ContractGroup
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContractGroup"
  "/contractGroup/items":
    get:
      description: Retrieves multiple entities of ContractGroup type by its ids
      operationId: contractGroupItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - ContractLibrary
      responses:
        '200':
          description: ContractGroup
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContractGroup"
  "/contractGroup/list":
    get:
      description: Retrieves all entities of ContractGroup type
      operationId: contractGroupList
      security:
      - bearer_access_token: []
      tags:
      - ContractLibrary
      responses:
        '200':
          description: ContractGroup
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContractGroup"
  "/contractGroup/suggest":
    get:
      description: Retrieves entities of ContractGroup type filtered by an occurrence
        of a text in one of its fields
      operationId: contractGroupSuggest
      security:
      - bearer_access_token: []
      parameters:
      - name: t
        description: Text
        in: query
        required: true
        schema:
          type: string
      - name: l
        description: Max number of entities
        in: query
        required: true
        schema:
          type: integer
          format: int32
      tags:
      - ContractLibrary
      responses:
        '200':
          description: ContractGroup
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContractGroup"
  "/contractMaturity/deps":
    get:
      description: Retrieves all entities of ContractMaturity type related to Product
        entity
      operationId: contractMaturityDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of Product entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - ContractLibrary
      responses:
        '200':
          description: ContractMaturity
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContractMaturity"
  "/contractMaturity/item":
    get:
      description: Retrieves an entity of ContractMaturity type by its id
      operationId: contractMaturityItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - ContractLibrary
      responses:
        '200':
          description: ContractMaturity
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContractMaturity"
  "/contractMaturity/items":
    get:
      description: Retrieves multiple entities of ContractMaturity type by its ids
      operationId: contractMaturityItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - ContractLibrary
      responses:
        '200':
          description: ContractMaturity
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContractMaturity"
  "/contractMaturity/ldeps":
    get:
      description: Retrieves all entities of ContractMaturity type related to multiple
        entities of Product type
      operationId: contractMaturityLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of Product entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - ContractLibrary
      responses:
        '200':
          description: ContractMaturity
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContractMaturity"
  "/currency/find":
    get:
      description: Retrieves an entity of Currency type by its name
      operationId: currencyFind
      security:
      - bearer_access_token: []
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      tags:
      - ContractLibrary
      responses:
        '200':
          description: Currency
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Currency"
  "/currency/item":
    get:
      description: Retrieves an entity of Currency type by its id
      operationId: currencyItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - ContractLibrary
      responses:
        '200':
          description: Currency
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Currency"
  "/currency/items":
    get:
      description: Retrieves multiple entities of Currency type by its ids
      operationId: currencyItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - ContractLibrary
      responses:
        '200':
          description: Currency
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Currency"
  "/currency/list":
    get:
      description: Retrieves all entities of Currency type
      operationId: currencyList
      security:
      - bearer_access_token: []
      tags:
      - ContractLibrary
      responses:
        '200':
          description: Currency
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Currency"
  "/currency/suggest":
    get:
      description: Retrieves entities of Currency type filtered by an occurrence of
        a text in one of its fields
      operationId: currencySuggest
      security:
      - bearer_access_token: []
      parameters:
      - name: t
        description: Text
        in: query
        required: true
        schema:
          type: string
      - name: l
        description: Max number of entities
        in: query
        required: true
        schema:
          type: integer
          format: int32
      tags:
      - ContractLibrary
      responses:
        '200':
          description: Currency
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Currency"
  "/currencyRate/deps":
    get:
      description: Retrieves all entities of CurrencyRate type related to Currency
        entity
      operationId: currencyRateDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of Currency entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - ContractLibrary
      responses:
        '200':
          description: CurrencyRate
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CurrencyRate"
  "/currencyRate/item":
    get:
      description: Retrieves an entity of CurrencyRate type by its id
      operationId: currencyRateItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - ContractLibrary
      responses:
        '200':
          description: CurrencyRate
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CurrencyRate"
  "/currencyRate/items":
    get:
      description: Retrieves multiple entities of CurrencyRate type by its ids
      operationId: currencyRateItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - ContractLibrary
      responses:
        '200':
          description: CurrencyRate
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CurrencyRate"
  "/currencyRate/ldeps":
    get:
      description: Retrieves all entities of CurrencyRate type related to multiple
        entities of Currency type
      operationId: currencyRateLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of Currency entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - ContractLibrary
      responses:
        '200':
          description: CurrencyRate
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CurrencyRate"
  "/currencyRate/list":
    get:
      description: Retrieves all entities of CurrencyRate type
      operationId: currencyRateList
      security:
      - bearer_access_token: []
      tags:
      - ContractLibrary
      responses:
        '200':
          description: CurrencyRate
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CurrencyRate"
  "/exchange/find":
    get:
      description: Retrieves an entity of Exchange type by its name
      operationId: exchangeFind
      security:
      - bearer_access_token: []
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      tags:
      - ContractLibrary
      responses:
        '200':
          description: Exchange
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Exchange"
  "/exchange/item":
    get:
      description: Retrieves an entity of Exchange type by its id
      operationId: exchangeItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - ContractLibrary
      responses:
        '200':
          description: Exchange
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Exchange"
  "/exchange/items":
    get:
      description: Retrieves multiple entities of Exchange type by its ids
      operationId: exchangeItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - ContractLibrary
      responses:
        '200':
          description: Exchange
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Exchange"
  "/exchange/list":
    get:
      description: Retrieves all entities of Exchange type
      operationId: exchangeList
      security:
      - bearer_access_token: []
      tags:
      - ContractLibrary
      responses:
        '200':
          description: Exchange
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Exchange"
  "/exchange/suggest":
    get:
      description: Retrieves entities of Exchange type filtered by an occurrence of
        a text in one of its fields
      operationId: exchangeSuggest
      security:
      - bearer_access_token: []
      parameters:
      - name: t
        description: Text
        in: query
        required: true
        schema:
          type: string
      - name: l
        description: Max number of entities
        in: query
        required: true
        schema:
          type: integer
          format: int32
      tags:
      - ContractLibrary
      responses:
        '200':
          description: Exchange
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Exchange"
  "/product/deps":
    get:
      description: Retrieves all entities of Product type related to Exchange entity
      operationId: productDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of Exchange entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - ContractLibrary
      responses:
        '200':
          description: Product
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Product"
  "/product/find":
    get:
      description: Retrieves an entity of Product type by its name
      operationId: productFind
      security:
      - bearer_access_token: []
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      tags:
      - ContractLibrary
      responses:
        '200':
          description: Product
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Product"
  "/product/item":
    get:
      description: Retrieves an entity of Product type by its id
      operationId: productItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - ContractLibrary
      responses:
        '200':
          description: Product
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Product"
  "/product/items":
    get:
      description: Retrieves multiple entities of Product type by its ids
      operationId: productItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - ContractLibrary
      responses:
        '200':
          description: Product
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Product"
  "/product/ldeps":
    get:
      description: Retrieves all entities of Product type related to multiple entities
        of Exchange type
      operationId: productLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of Exchange entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - ContractLibrary
      responses:
        '200':
          description: Product
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Product"
  "/product/list":
    get:
      description: Retrieves all entities of Product type
      operationId: productList
      security:
      - bearer_access_token: []
      tags:
      - ContractLibrary
      responses:
        '200':
          description: Product
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Product"
  "/product/suggest":
    get:
      description: Retrieves entities of Product type filtered by an occurrence of
        a text in one of its fields
      operationId: productSuggest
      security:
      - bearer_access_token: []
      parameters:
      - name: t
        description: Text
        in: query
        required: true
        schema:
          type: string
      - name: l
        description: Max number of entities
        in: query
        required: true
        schema:
          type: integer
          format: int32
      tags:
      - ContractLibrary
      responses:
        '200':
          description: Product
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Product"
  "/productSession/deps":
    get:
      description: Retrieves all entities of ProductSession type related to Product
        entity
      operationId: productSessionDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of Product entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - ContractLibrary
      responses:
        '200':
          description: ProductSession
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ProductSession"
  "/productSession/item":
    get:
      description: Retrieves an entity of ProductSession type by its id
      operationId: productSessionItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - ContractLibrary
      responses:
        '200':
          description: ProductSession
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductSession"
  "/productSession/items":
    get:
      description: Retrieves multiple entities of ProductSession type by its ids
      operationId: productSessionItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - ContractLibrary
      responses:
        '200':
          description: ProductSession
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ProductSession"
  "/productSession/ldeps":
    get:
      description: Retrieves all entities of ProductSession type related to multiple
        entities of Product type
      operationId: productSessionLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of Product entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - ContractLibrary
      responses:
        '200':
          description: ProductSession
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ProductSession"
  "/spreadDefinition/item":
    get:
      description: Retrieves an entity of SpreadDefinition type by its id
      operationId: spreadDefinitionItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - ContractLibrary
      responses:
        '200':
          description: SpreadDefinition
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SpreadDefinition"
  "/spreadDefinition/items":
    get:
      description: Retrieves multiple entities of SpreadDefinition type by its ids
      operationId: spreadDefinitionItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - ContractLibrary
      responses:
        '200':
          description: SpreadDefinition
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SpreadDefinition"
  "/command/deps":
    get:
      description: Retrieves all entities of Command type related to Order entity
      operationId: commandDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of Order entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Orders
      responses:
        '200':
          description: Command
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Command"
  "/command/item":
    get:
      description: Retrieves an entity of Command type by its id
      operationId: commandItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Orders
      responses:
        '200':
          description: Command
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Command"
  "/command/items":
    get:
      description: Retrieves multiple entities of Command type by its ids
      operationId: commandItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Orders
      responses:
        '200':
          description: Command
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Command"
  "/command/ldeps":
    get:
      description: Retrieves all entities of Command type related to multiple entities
        of Order type
      operationId: commandLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of Order entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Orders
      responses:
        '200':
          description: Command
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Command"
  "/command/list":
    get:
      description: Retrieves all entities of Command type
      operationId: commandList
      security:
      - bearer_access_token: []
      tags:
      - Orders
      responses:
        '200':
          description: Command
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Command"
  "/commandReport/deps":
    get:
      description: Retrieves all entities of CommandReport type related to Command
        entity
      operationId: commandReportDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of Command entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Orders
      responses:
        '200':
          description: CommandReport
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CommandReport"
  "/commandReport/item":
    get:
      description: Retrieves an entity of CommandReport type by its id
      operationId: commandReportItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Orders
      responses:
        '200':
          description: CommandReport
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CommandReport"
  "/commandReport/items":
    get:
      description: Retrieves multiple entities of CommandReport type by its ids
      operationId: commandReportItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Orders
      responses:
        '200':
          description: CommandReport
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CommandReport"
  "/commandReport/ldeps":
    get:
      description: Retrieves all entities of CommandReport type related to multiple
        entities of Command type
      operationId: commandReportLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of Command entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Orders
      responses:
        '200':
          description: CommandReport
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CommandReport"
  "/commandReport/list":
    get:
      description: Retrieves all entities of CommandReport type
      operationId: commandReportList
      security:
      - bearer_access_token: []
      tags:
      - Orders
      responses:
        '200':
          description: CommandReport
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CommandReport"
  "/executionReport/deps":
    get:
      description: Retrieves all entities of ExecutionReport type related to Command
        entity
      operationId: executionReportDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of Command entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Orders
      responses:
        '200':
          description: ExecutionReport
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ExecutionReport"
  "/executionReport/find":
    get:
      description: Retrieves an entity of ExecutionReport type by its name
      operationId: executionReportFind
      security:
      - bearer_access_token: []
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      tags:
      - Orders
      responses:
        '200':
          description: ExecutionReport
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ExecutionReport"
  "/executionReport/item":
    get:
      description: Retrieves an entity of ExecutionReport type by its id
      operationId: executionReportItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Orders
      responses:
        '200':
          description: ExecutionReport
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ExecutionReport"
  "/executionReport/items":
    get:
      description: Retrieves multiple entities of ExecutionReport type by its ids
      operationId: executionReportItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Orders
      responses:
        '200':
          description: ExecutionReport
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ExecutionReport"
  "/executionReport/ldeps":
    get:
      description: Retrieves all entities of ExecutionReport type related to multiple
        entities of Command type
      operationId: executionReportLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of Command entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Orders
      responses:
        '200':
          description: ExecutionReport
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ExecutionReport"
  "/executionReport/list":
    get:
      description: Retrieves all entities of ExecutionReport type
      operationId: executionReportList
      security:
      - bearer_access_token: []
      tags:
      - Orders
      responses:
        '200':
          description: ExecutionReport
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ExecutionReport"
  "/executionReport/suggest":
    get:
      description: Retrieves entities of ExecutionReport type filtered by an occurrence
        of a text in one of its fields
      operationId: executionReportSuggest
      security:
      - bearer_access_token: []
      parameters:
      - name: t
        description: Text
        in: query
        required: true
        schema:
          type: string
      - name: l
        description: Max number of entities
        in: query
        required: true
        schema:
          type: integer
          format: int32
      tags:
      - Orders
      responses:
        '200':
          description: ExecutionReport
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ExecutionReport"
  "/fill/deps":
    get:
      description: Retrieves all entities of Fill type related to Order entity
      operationId: fillDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of Order entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Orders
      responses:
        '200':
          description: Fill
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Fill"
  "/fill/item":
    get:
      description: Retrieves an entity of Fill type by its id
      operationId: fillItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Orders
      responses:
        '200':
          description: Fill
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Fill"
  "/fill/items":
    get:
      description: Retrieves multiple entities of Fill type by its ids
      operationId: fillItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Orders
      responses:
        '200':
          description: Fill
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Fill"
  "/fill/ldeps":
    get:
      description: Retrieves all entities of Fill type related to multiple entities
        of Order type
      operationId: fillLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of Order entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Orders
      responses:
        '200':
          description: Fill
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Fill"
  "/fill/list":
    get:
      description: Retrieves all entities of Fill type
      operationId: fillList
      security:
      - bearer_access_token: []
      tags:
      - Orders
      responses:
        '200':
          description: Fill
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Fill"
  "/fillFee/deps":
    get:
      description: Retrieves all entities of FillFee type related to Fill entity
      operationId: fillFeeDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of Fill entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Orders
      responses:
        '200':
          description: FillFee
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FillFee"
  "/fillFee/item":
    get:
      description: Retrieves an entity of FillFee type by its id
      operationId: fillFeeItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Orders
      responses:
        '200':
          description: FillFee
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FillFee"
  "/fillFee/items":
    get:
      description: Retrieves multiple entities of FillFee type by its ids
      operationId: fillFeeItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Orders
      responses:
        '200':
          description: FillFee
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FillFee"
  "/fillFee/ldeps":
    get:
      description: Retrieves all entities of FillFee type related to multiple entities
        of Fill type
      operationId: fillFeeLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of Fill entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Orders
      responses:
        '200':
          description: FillFee
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FillFee"
  "/fillFee/list":
    get:
      description: Retrieves all entities of FillFee type
      operationId: fillFeeList
      security:
      - bearer_access_token: []
      tags:
      - Orders
      responses:
        '200':
          description: FillFee
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FillFee"
  "/order/cancelorder":
    post:
      description: |2-

        ## Make a request to cancel an order.
      operationId: cancelOrder
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CancelOrder"
      tags:
      - Orders
      responses:
        '200':
          description: CommandResult
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CommandResult"
  "/order/deps":
    get:
      description: Retrieves all entities of Order type related to Account entity
      operationId: orderDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of Account entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Orders
      responses:
        '200':
          description: Order
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Order"
  "/order/item":
    get:
      description: Retrieves an entity of Order type by its id
      operationId: orderItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Orders
      responses:
        '200':
          description: Order
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Order"
  "/order/items":
    get:
      description: Retrieves multiple entities of Order type by its ids
      operationId: orderItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Orders
      responses:
        '200':
          description: Order
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Order"
  "/order/ldeps":
    get:
      description: Retrieves all entities of Order type related to multiple entities
        of Account type
      operationId: orderLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of Account entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Orders
      responses:
        '200':
          description: Order
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Order"
  "/order/liquidateposition":
    post:
      description: ''
      operationId: liquidatePosition
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/LiquidatePosition"
      tags:
      - Orders
      responses:
        '200':
          description: PlaceOrderResult
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlaceOrderResult"
  "/order/list":
    get:
      description: Retrieves all entities of Order type
      operationId: orderList
      security:
      - bearer_access_token: []
      tags:
      - Orders
      responses:
        '200':
          description: Order
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Order"
  "/order/modifyorder":
    post:
      description: ''
      operationId: modifyOrder
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ModifyOrder"
      tags:
      - Orders
      responses:
        '200':
          description: CommandResult
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CommandResult"
  "/order/placeoco":
    post:
      description: ''
      operationId: placeOCO
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlaceOCO"
      tags:
      - Orders
      responses:
        '200':
          description: PlaceOcoResult
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlaceOcoResult"
  "/order/placeorder":
    post:
      description: ''
      operationId: placeOrder
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlaceOrder"
      tags:
      - Orders
      responses:
        '200':
          description: PlaceOrderResult
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlaceOrderResult"
  "/order/placeoso":
    post:
      description: ''
      operationId: placeOSO
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PlaceOSO"
      tags:
      - Orders
      responses:
        '200':
          description: PlaceOsoResult
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/PlaceOsoResult"
  "/orderStrategy/deps":
    get:
      description: Retrieves all entities of OrderStrategy type related to Account
        entity
      operationId: orderStrategyDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of Account entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Orders
      responses:
        '200':
          description: OrderStrategy
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OrderStrategy"
  "/orderStrategy/interruptorderstrategy":
    post:
      description: ''
      operationId: interruptOrderStrategy
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/InterruptOrderStrategy"
      tags:
      - Orders
      responses:
        '200':
          description: OrderStrategyStatusResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrderStrategyStatusResponse"
  "/orderStrategy/item":
    get:
      description: Retrieves an entity of OrderStrategy type by its id
      operationId: orderStrategyItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Orders
      responses:
        '200':
          description: OrderStrategy
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrderStrategy"
  "/orderStrategy/items":
    get:
      description: Retrieves multiple entities of OrderStrategy type by its ids
      operationId: orderStrategyItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Orders
      responses:
        '200':
          description: OrderStrategy
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OrderStrategy"
  "/orderStrategy/ldeps":
    get:
      description: Retrieves all entities of OrderStrategy type related to multiple
        entities of Account type
      operationId: orderStrategyLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of Account entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Orders
      responses:
        '200':
          description: OrderStrategy
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OrderStrategy"
  "/orderStrategy/list":
    get:
      description: Retrieves all entities of OrderStrategy type
      operationId: orderStrategyList
      security:
      - bearer_access_token: []
      tags:
      - Orders
      responses:
        '200':
          description: OrderStrategy
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OrderStrategy"
  "/orderStrategy/modifyorderstrategy":
    post:
      description: ''
      operationId: modifyOrderStrategy
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ModifyOrderStrategy"
      tags:
      - Orders
      responses:
        '200':
          description: OrderStrategyStatusResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrderStrategyStatusResponse"
  "/orderStrategy/startorderstrategy":
    post:
      description: ''
      operationId: startOrderStrategy
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/StartOrderStrategy"
      tags:
      - Orders
      responses:
        '200':
          description: OrderStrategyStatusResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrderStrategyStatusResponse"
  "/orderStrategyLink/deps":
    get:
      description: Retrieves all entities of OrderStrategyLink type related to OrderStrategy
        entity
      operationId: orderStrategyLinkDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of OrderStrategy entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Orders
      responses:
        '200':
          description: OrderStrategyLink
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OrderStrategyLink"
  "/orderStrategyLink/item":
    get:
      description: Retrieves an entity of OrderStrategyLink type by its id
      operationId: orderStrategyLinkItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Orders
      responses:
        '200':
          description: OrderStrategyLink
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrderStrategyLink"
  "/orderStrategyLink/items":
    get:
      description: Retrieves multiple entities of OrderStrategyLink type by its ids
      operationId: orderStrategyLinkItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Orders
      responses:
        '200':
          description: OrderStrategyLink
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OrderStrategyLink"
  "/orderStrategyLink/ldeps":
    get:
      description: Retrieves all entities of OrderStrategyLink type related to multiple
        entities of OrderStrategy type
      operationId: orderStrategyLinkLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of OrderStrategy entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Orders
      responses:
        '200':
          description: OrderStrategyLink
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OrderStrategyLink"
  "/orderStrategyLink/list":
    get:
      description: Retrieves all entities of OrderStrategyLink type
      operationId: orderStrategyLinkList
      security:
      - bearer_access_token: []
      tags:
      - Orders
      responses:
        '200':
          description: OrderStrategyLink
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OrderStrategyLink"
  "/orderVersion/deps":
    get:
      description: Retrieves all entities of OrderVersion type related to Order entity
      operationId: orderVersionDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of Order entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Orders
      responses:
        '200':
          description: OrderVersion
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OrderVersion"
  "/orderVersion/item":
    get:
      description: Retrieves an entity of OrderVersion type by its id
      operationId: orderVersionItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Orders
      responses:
        '200':
          description: OrderVersion
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrderVersion"
  "/orderVersion/items":
    get:
      description: Retrieves multiple entities of OrderVersion type by its ids
      operationId: orderVersionItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Orders
      responses:
        '200':
          description: OrderVersion
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OrderVersion"
  "/orderVersion/ldeps":
    get:
      description: Retrieves all entities of OrderVersion type related to multiple
        entities of Order type
      operationId: orderVersionLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of Order entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Orders
      responses:
        '200':
          description: OrderVersion
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OrderVersion"
  "/orderVersion/list":
    get:
      description: Retrieves all entities of OrderVersion type
      operationId: orderVersionList
      security:
      - bearer_access_token: []
      tags:
      - Orders
      responses:
        '200':
          description: OrderVersion
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OrderVersion"
  "/fillPair/deps":
    get:
      description: Retrieves all entities of FillPair type related to Position entity
      operationId: fillPairDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of Position entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Positions
      responses:
        '200':
          description: FillPair
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FillPair"
  "/fillPair/item":
    get:
      description: Retrieves an entity of FillPair type by its id
      operationId: fillPairItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Positions
      responses:
        '200':
          description: FillPair
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/FillPair"
  "/fillPair/items":
    get:
      description: Retrieves multiple entities of FillPair type by its ids
      operationId: fillPairItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Positions
      responses:
        '200':
          description: FillPair
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FillPair"
  "/fillPair/ldeps":
    get:
      description: Retrieves all entities of FillPair type related to multiple entities
        of Position type
      operationId: fillPairLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of Position entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Positions
      responses:
        '200':
          description: FillPair
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FillPair"
  "/fillPair/list":
    get:
      description: Retrieves all entities of FillPair type
      operationId: fillPairList
      security:
      - bearer_access_token: []
      tags:
      - Positions
      responses:
        '200':
          description: FillPair
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/FillPair"
  "/position/deps":
    get:
      description: Retrieves all entities of Position type related to Account entity
      operationId: positionDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of Account entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Positions
      responses:
        '200':
          description: Position
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Position"
  "/position/find":
    get:
      description: Retrieves an entity of Position type by its name
      operationId: positionFind
      security:
      - bearer_access_token: []
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      tags:
      - Positions
      responses:
        '200':
          description: Position
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Position"
  "/position/item":
    get:
      description: Retrieves an entity of Position type by its id
      operationId: positionItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Positions
      responses:
        '200':
          description: Position
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Position"
  "/position/items":
    get:
      description: Retrieves multiple entities of Position type by its ids
      operationId: positionItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Positions
      responses:
        '200':
          description: Position
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Position"
  "/position/ldeps":
    get:
      description: Retrieves all entities of Position type related to multiple entities
        of Account type
      operationId: positionLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of Account entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Positions
      responses:
        '200':
          description: Position
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Position"
  "/position/list":
    get:
      description: Retrieves all entities of Position type
      operationId: positionList
      security:
      - bearer_access_token: []
      tags:
      - Positions
      responses:
        '200':
          description: Position
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Position"
  "/account/deps":
    get:
      description: Retrieves all entities of Account type related to User entity
      operationId: accountDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of User entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Accounting
      responses:
        '200':
          description: Account
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Account"
  "/account/find":
    get:
      description: Retrieves an entity of Account type by its name
      operationId: accountFind
      security:
      - bearer_access_token: []
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      tags:
      - Accounting
      responses:
        '200':
          description: Account
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Account"
  "/account/item":
    get:
      description: Retrieves an entity of Account type by its id
      operationId: accountItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Accounting
      responses:
        '200':
          description: Account
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Account"
  "/account/items":
    get:
      description: Retrieves multiple entities of Account type by its ids
      operationId: accountItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Accounting
      responses:
        '200':
          description: Account
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Account"
  "/account/ldeps":
    get:
      description: Retrieves all entities of Account type related to multiple entities
        of User type
      operationId: accountLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of User entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Accounting
      responses:
        '200':
          description: Account
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Account"
  "/account/list":
    get:
      description: Retrieves all entities of Account type
      operationId: accountList
      security:
      - bearer_access_token: []
      tags:
      - Accounting
      responses:
        '200':
          description: Account
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Account"
  "/account/suggest":
    get:
      description: Retrieves entities of Account type filtered by an occurrence of
        a text in one of its fields
      operationId: accountSuggest
      security:
      - bearer_access_token: []
      parameters:
      - name: t
        description: Text
        in: query
        required: true
        schema:
          type: string
      - name: l
        description: Max number of entities
        in: query
        required: true
        schema:
          type: integer
          format: int32
      tags:
      - Accounting
      responses:
        '200':
          description: Account
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Account"
  "/cashBalance/deps":
    get:
      description: Retrieves all entities of CashBalance type related to Account entity
      operationId: cashBalanceDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of Account entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Accounting
      responses:
        '200':
          description: CashBalance
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CashBalance"
  "/cashBalance/getcashbalancesnapshot":
    post:
      description: ''
      operationId: getCashBalanceSnapshot
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GetCashBalanceSnapshot"
      tags:
      - Accounting
      responses:
        '200':
          description: CashBalanceSnapshot
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CashBalanceSnapshot"
  "/cashBalance/item":
    get:
      description: Retrieves an entity of CashBalance type by its id
      operationId: cashBalanceItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Accounting
      responses:
        '200':
          description: CashBalance
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CashBalance"
  "/cashBalance/items":
    get:
      description: Retrieves multiple entities of CashBalance type by its ids
      operationId: cashBalanceItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Accounting
      responses:
        '200':
          description: CashBalance
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CashBalance"
  "/cashBalance/ldeps":
    get:
      description: Retrieves all entities of CashBalance type related to multiple
        entities of Account type
      operationId: cashBalanceLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of Account entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Accounting
      responses:
        '200':
          description: CashBalance
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CashBalance"
  "/cashBalance/list":
    get:
      description: Retrieves all entities of CashBalance type
      operationId: cashBalanceList
      security:
      - bearer_access_token: []
      tags:
      - Accounting
      responses:
        '200':
          description: CashBalance
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CashBalance"
  "/cashBalanceLog/deps":
    get:
      description: Retrieves all entities of CashBalanceLog type related to Account
        entity
      operationId: cashBalanceLogDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of Account entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Accounting
      responses:
        '200':
          description: CashBalanceLog
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CashBalanceLog"
  "/cashBalanceLog/item":
    get:
      description: Retrieves an entity of CashBalanceLog type by its id
      operationId: cashBalanceLogItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Accounting
      responses:
        '200':
          description: CashBalanceLog
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CashBalanceLog"
  "/cashBalanceLog/items":
    get:
      description: Retrieves multiple entities of CashBalanceLog type by its ids
      operationId: cashBalanceLogItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Accounting
      responses:
        '200':
          description: CashBalanceLog
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CashBalanceLog"
  "/cashBalanceLog/ldeps":
    get:
      description: Retrieves all entities of CashBalanceLog type related to multiple
        entities of Account type
      operationId: cashBalanceLogLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of Account entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Accounting
      responses:
        '200':
          description: CashBalanceLog
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/CashBalanceLog"
  "/marginSnapshot/deps":
    get:
      description: Retrieves all entities of MarginSnapshot type related to Account
        entity
      operationId: marginSnapshotDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of Account entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Accounting
      responses:
        '200':
          description: MarginSnapshot
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MarginSnapshot"
  "/marginSnapshot/item":
    get:
      description: Retrieves an entity of MarginSnapshot type by its id
      operationId: marginSnapshotItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Accounting
      responses:
        '200':
          description: MarginSnapshot
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MarginSnapshot"
  "/marginSnapshot/items":
    get:
      description: Retrieves multiple entities of MarginSnapshot type by its ids
      operationId: marginSnapshotItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Accounting
      responses:
        '200':
          description: MarginSnapshot
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MarginSnapshot"
  "/marginSnapshot/ldeps":
    get:
      description: Retrieves all entities of MarginSnapshot type related to multiple
        entities of Account type
      operationId: marginSnapshotLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of Account entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Accounting
      responses:
        '200':
          description: MarginSnapshot
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MarginSnapshot"
  "/marginSnapshot/list":
    get:
      description: Retrieves all entities of MarginSnapshot type
      operationId: marginSnapshotList
      security:
      - bearer_access_token: []
      tags:
      - Accounting
      responses:
        '200':
          description: MarginSnapshot
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MarginSnapshot"
  "/tradingPermission/deps":
    get:
      description: Retrieves all entities of TradingPermission type related to User
        entity
      operationId: tradingPermissionDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of User entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Accounting
      responses:
        '200':
          description: TradingPermission
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TradingPermission"
  "/tradingPermission/item":
    get:
      description: Retrieves an entity of TradingPermission type by its id
      operationId: tradingPermissionItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Accounting
      responses:
        '200':
          description: TradingPermission
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TradingPermission"
  "/tradingPermission/items":
    get:
      description: Retrieves multiple entities of TradingPermission type by its ids
      operationId: tradingPermissionItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Accounting
      responses:
        '200':
          description: TradingPermission
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TradingPermission"
  "/tradingPermission/ldeps":
    get:
      description: Retrieves all entities of TradingPermission type related to multiple
        entities of User type
      operationId: tradingPermissionLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of User entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Accounting
      responses:
        '200':
          description: TradingPermission
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TradingPermission"
  "/tradingPermission/list":
    get:
      description: Retrieves all entities of TradingPermission type
      operationId: tradingPermissionList
      security:
      - bearer_access_token: []
      tags:
      - Accounting
      responses:
        '200':
          description: TradingPermission
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TradingPermission"
  "/contractMargin/deps":
    get:
      description: Retrieves all entities of ContractMargin type related to Contract
        entity
      operationId: contractMarginDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of Contract entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Risks
      responses:
        '200':
          description: ContractMargin
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContractMargin"
  "/contractMargin/item":
    get:
      description: Retrieves an entity of ContractMargin type by its id
      operationId: contractMarginItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Risks
      responses:
        '200':
          description: ContractMargin
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContractMargin"
  "/contractMargin/items":
    get:
      description: Retrieves multiple entities of ContractMargin type by its ids
      operationId: contractMarginItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Risks
      responses:
        '200':
          description: ContractMargin
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContractMargin"
  "/contractMargin/ldeps":
    get:
      description: Retrieves all entities of ContractMargin type related to multiple
        entities of Contract type
      operationId: contractMarginLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of Contract entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Risks
      responses:
        '200':
          description: ContractMargin
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContractMargin"
  "/productMargin/deps":
    get:
      description: Retrieves all entities of ProductMargin type related to Product
        entity
      operationId: productMarginDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of Product entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Risks
      responses:
        '200':
          description: ProductMargin
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ProductMargin"
  "/productMargin/item":
    get:
      description: Retrieves an entity of ProductMargin type by its id
      operationId: productMarginItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Risks
      responses:
        '200':
          description: ProductMargin
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ProductMargin"
  "/productMargin/items":
    get:
      description: Retrieves multiple entities of ProductMargin type by its ids
      operationId: productMarginItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Risks
      responses:
        '200':
          description: ProductMargin
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ProductMargin"
  "/productMargin/ldeps":
    get:
      description: Retrieves all entities of ProductMargin type related to multiple
        entities of Product type
      operationId: productMarginLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of Product entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Risks
      responses:
        '200':
          description: ProductMargin
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ProductMargin"
  "/productMargin/list":
    get:
      description: Retrieves all entities of ProductMargin type
      operationId: productMarginList
      security:
      - bearer_access_token: []
      tags:
      - Risks
      responses:
        '200':
          description: ProductMargin
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ProductMargin"
  "/userAccountAutoLiq/create":
    post:
      description: Creates a new entity of UserAccountAutoLiq
      operationId: userAccountAutoLiqCreate
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserAccountAutoLiq"
      tags:
      - Risks
      responses:
        '200':
          description: UserAccountAutoLiq
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserAccountAutoLiq"
  "/userAccountAutoLiq/deps":
    get:
      description: Retrieves all entities of UserAccountAutoLiq type related to Account
        entity
      operationId: userAccountAutoLiqDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of Account entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Risks
      responses:
        '200':
          description: UserAccountAutoLiq
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserAccountAutoLiq"
  "/userAccountAutoLiq/item":
    get:
      description: Retrieves an entity of UserAccountAutoLiq type by its id
      operationId: userAccountAutoLiqItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Risks
      responses:
        '200':
          description: UserAccountAutoLiq
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserAccountAutoLiq"
  "/userAccountAutoLiq/items":
    get:
      description: Retrieves multiple entities of UserAccountAutoLiq type by its ids
      operationId: userAccountAutoLiqItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Risks
      responses:
        '200':
          description: UserAccountAutoLiq
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserAccountAutoLiq"
  "/userAccountAutoLiq/ldeps":
    get:
      description: Retrieves all entities of UserAccountAutoLiq type related to multiple
        entities of Account type
      operationId: userAccountAutoLiqLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of Account entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Risks
      responses:
        '200':
          description: UserAccountAutoLiq
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserAccountAutoLiq"
  "/userAccountAutoLiq/list":
    get:
      description: Retrieves all entities of UserAccountAutoLiq type
      operationId: userAccountAutoLiqList
      security:
      - bearer_access_token: []
      tags:
      - Risks
      responses:
        '200':
          description: UserAccountAutoLiq
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserAccountAutoLiq"
  "/userAccountAutoLiq/update":
    post:
      description: Updates an existing entity of UserAccountAutoLiq
      operationId: userAccountAutoLiqUpdate
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserAccountAutoLiq"
      tags:
      - Risks
      responses:
        '200':
          description: UserAccountAutoLiq
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserAccountAutoLiq"
  "/userAccountPositionLimit/create":
    post:
      description: Creates a new entity of UserAccountPositionLimit
      operationId: userAccountPositionLimitCreate
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserAccountPositionLimit"
      tags:
      - Risks
      responses:
        '200':
          description: UserAccountPositionLimit
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserAccountPositionLimit"
  "/userAccountPositionLimit/deleteuseraccountpositionlimit":
    post:
      description: ''
      operationId: deleteUserAccountPositionLimit
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DeleteUserAccountPositionLimit"
      tags:
      - Risks
      responses:
        '200':
          description: DeleteResultResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DeleteResultResponse"
  "/userAccountPositionLimit/deleteuseraccountriskparameter":
    post:
      description: ''
      operationId: deleteUserAccountRiskParameter
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DeleteUserAccountRiskParameter"
      tags:
      - Risks
      responses:
        '200':
          description: DeleteResultResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/DeleteResultResponse"
  "/userAccountPositionLimit/deps":
    get:
      description: Retrieves all entities of UserAccountPositionLimit type related
        to Account entity
      operationId: userAccountPositionLimitDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of Account entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Risks
      responses:
        '200':
          description: UserAccountPositionLimit
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserAccountPositionLimit"
  "/userAccountPositionLimit/item":
    get:
      description: Retrieves an entity of UserAccountPositionLimit type by its id
      operationId: userAccountPositionLimitItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Risks
      responses:
        '200':
          description: UserAccountPositionLimit
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserAccountPositionLimit"
  "/userAccountPositionLimit/items":
    get:
      description: Retrieves multiple entities of UserAccountPositionLimit type by
        its ids
      operationId: userAccountPositionLimitItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Risks
      responses:
        '200':
          description: UserAccountPositionLimit
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserAccountPositionLimit"
  "/userAccountPositionLimit/ldeps":
    get:
      description: Retrieves all entities of UserAccountPositionLimit type related
        to multiple entities of Account type
      operationId: userAccountPositionLimitLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of Account entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Risks
      responses:
        '200':
          description: UserAccountPositionLimit
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserAccountPositionLimit"
  "/userAccountPositionLimit/update":
    post:
      description: Updates an existing entity of UserAccountPositionLimit
      operationId: userAccountPositionLimitUpdate
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserAccountPositionLimit"
      tags:
      - Risks
      responses:
        '200':
          description: UserAccountPositionLimit
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserAccountPositionLimit"
  "/userAccountRiskParameter/create":
    post:
      description: Creates a new entity of UserAccountRiskParameter
      operationId: userAccountRiskParameterCreate
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserAccountRiskParameter"
      tags:
      - Risks
      responses:
        '200':
          description: UserAccountRiskParameter
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserAccountRiskParameter"
  "/userAccountRiskParameter/deps":
    get:
      description: Retrieves all entities of UserAccountRiskParameter type related
        to UserAccountPositionLimit entity
      operationId: userAccountRiskParameterDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of UserAccountPositionLimit entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Risks
      responses:
        '200':
          description: UserAccountRiskParameter
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserAccountRiskParameter"
  "/userAccountRiskParameter/item":
    get:
      description: Retrieves an entity of UserAccountRiskParameter type by its id
      operationId: userAccountRiskParameterItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Risks
      responses:
        '200':
          description: UserAccountRiskParameter
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserAccountRiskParameter"
  "/userAccountRiskParameter/items":
    get:
      description: Retrieves multiple entities of UserAccountRiskParameter type by
        its ids
      operationId: userAccountRiskParameterItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Risks
      responses:
        '200':
          description: UserAccountRiskParameter
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserAccountRiskParameter"
  "/userAccountRiskParameter/ldeps":
    get:
      description: Retrieves all entities of UserAccountRiskParameter type related
        to multiple entities of UserAccountPositionLimit type
      operationId: userAccountRiskParameterLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of UserAccountPositionLimit entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Risks
      responses:
        '200':
          description: UserAccountRiskParameter
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserAccountRiskParameter"
  "/userAccountRiskParameter/update":
    post:
      description: Updates an existing entity of UserAccountRiskParameter
      operationId: userAccountRiskParameterUpdate
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserAccountRiskParameter"
      tags:
      - Risks
      responses:
        '200':
          description: UserAccountRiskParameter
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserAccountRiskParameter"
  "/marketDataSubscriptionExchangeScope/find":
    get:
      description: Retrieves an entity of MarketDataSubscriptionExchangeScope type
        by its name
      operationId: marketDataSubscriptionExchangeScopeFind
      security:
      - bearer_access_token: []
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      tags:
      - Fees
      responses:
        '200':
          description: MarketDataSubscriptionExchangeScope
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MarketDataSubscriptionExchangeScope"
  "/marketDataSubscriptionExchangeScope/item":
    get:
      description: Retrieves an entity of MarketDataSubscriptionExchangeScope type
        by its id
      operationId: marketDataSubscriptionExchangeScopeItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Fees
      responses:
        '200':
          description: MarketDataSubscriptionExchangeScope
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MarketDataSubscriptionExchangeScope"
  "/marketDataSubscriptionExchangeScope/items":
    get:
      description: Retrieves multiple entities of MarketDataSubscriptionExchangeScope
        type by its ids
      operationId: marketDataSubscriptionExchangeScopeItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Fees
      responses:
        '200':
          description: MarketDataSubscriptionExchangeScope
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MarketDataSubscriptionExchangeScope"
  "/marketDataSubscriptionExchangeScope/list":
    get:
      description: Retrieves all entities of MarketDataSubscriptionExchangeScope type
      operationId: marketDataSubscriptionExchangeScopeList
      security:
      - bearer_access_token: []
      tags:
      - Fees
      responses:
        '200':
          description: MarketDataSubscriptionExchangeScope
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MarketDataSubscriptionExchangeScope"
  "/marketDataSubscriptionExchangeScope/suggest":
    get:
      description: Retrieves entities of MarketDataSubscriptionExchangeScope type
        filtered by an occurrence of a text in one of its fields
      operationId: marketDataSubscriptionExchangeScopeSuggest
      security:
      - bearer_access_token: []
      parameters:
      - name: t
        description: Text
        in: query
        required: true
        schema:
          type: string
      - name: l
        description: Max number of entities
        in: query
        required: true
        schema:
          type: integer
          format: int32
      tags:
      - Fees
      responses:
        '200':
          description: MarketDataSubscriptionExchangeScope
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MarketDataSubscriptionExchangeScope"
  "/marketDataSubscriptionPlan/find":
    get:
      description: Retrieves an entity of MarketDataSubscriptionPlan type by its name
      operationId: marketDataSubscriptionPlanFind
      security:
      - bearer_access_token: []
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      tags:
      - Fees
      responses:
        '200':
          description: MarketDataSubscriptionPlan
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MarketDataSubscriptionPlan"
  "/marketDataSubscriptionPlan/item":
    get:
      description: Retrieves an entity of MarketDataSubscriptionPlan type by its id
      operationId: marketDataSubscriptionPlanItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Fees
      responses:
        '200':
          description: MarketDataSubscriptionPlan
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MarketDataSubscriptionPlan"
  "/marketDataSubscriptionPlan/items":
    get:
      description: Retrieves multiple entities of MarketDataSubscriptionPlan type
        by its ids
      operationId: marketDataSubscriptionPlanItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Fees
      responses:
        '200':
          description: MarketDataSubscriptionPlan
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MarketDataSubscriptionPlan"
  "/marketDataSubscriptionPlan/list":
    get:
      description: Retrieves all entities of MarketDataSubscriptionPlan type
      operationId: marketDataSubscriptionPlanList
      security:
      - bearer_access_token: []
      tags:
      - Fees
      responses:
        '200':
          description: MarketDataSubscriptionPlan
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MarketDataSubscriptionPlan"
  "/marketDataSubscriptionPlan/suggest":
    get:
      description: Retrieves entities of MarketDataSubscriptionPlan type filtered
        by an occurrence of a text in one of its fields
      operationId: marketDataSubscriptionPlanSuggest
      security:
      - bearer_access_token: []
      parameters:
      - name: t
        description: Text
        in: query
        required: true
        schema:
          type: string
      - name: l
        description: Max number of entities
        in: query
        required: true
        schema:
          type: integer
          format: int32
      tags:
      - Fees
      responses:
        '200':
          description: MarketDataSubscriptionPlan
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MarketDataSubscriptionPlan"
  "/tradovateSubscriptionPlan/find":
    get:
      description: Retrieves an entity of TradovateSubscriptionPlan type by its name
      operationId: tradovateSubscriptionPlanFind
      security:
      - bearer_access_token: []
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      tags:
      - Fees
      responses:
        '200':
          description: TradovateSubscriptionPlan
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TradovateSubscriptionPlan"
  "/tradovateSubscriptionPlan/item":
    get:
      description: Retrieves an entity of TradovateSubscriptionPlan type by its id
      operationId: tradovateSubscriptionPlanItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Fees
      responses:
        '200':
          description: TradovateSubscriptionPlan
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TradovateSubscriptionPlan"
  "/tradovateSubscriptionPlan/items":
    get:
      description: Retrieves multiple entities of TradovateSubscriptionPlan type by
        its ids
      operationId: tradovateSubscriptionPlanItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Fees
      responses:
        '200':
          description: TradovateSubscriptionPlan
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TradovateSubscriptionPlan"
  "/tradovateSubscriptionPlan/list":
    get:
      description: Retrieves all entities of TradovateSubscriptionPlan type
      operationId: tradovateSubscriptionPlanList
      security:
      - bearer_access_token: []
      tags:
      - Fees
      responses:
        '200':
          description: TradovateSubscriptionPlan
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TradovateSubscriptionPlan"
  "/tradovateSubscriptionPlan/suggest":
    get:
      description: Retrieves entities of TradovateSubscriptionPlan type filtered by
        an occurrence of a text in one of its fields
      operationId: tradovateSubscriptionPlanSuggest
      security:
      - bearer_access_token: []
      parameters:
      - name: t
        description: Text
        in: query
        required: true
        schema:
          type: string
      - name: l
        description: Max number of entities
        in: query
        required: true
        schema:
          type: integer
          format: int32
      tags:
      - Fees
      responses:
        '200':
          description: TradovateSubscriptionPlan
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TradovateSubscriptionPlan"
  "/replay/changespeed":
    post:
      description: ''
      operationId: changeSpeed
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ChangeSpeed"
      tags:
      - Prices
      responses:
        '200':
          description: SimpleResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SimpleResponse"
  "/replay/checkreplaysession":
    post:
      description: ''
      operationId: checkReplaySession
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CheckReplaySession"
      tags:
      - Prices
      responses:
        '200':
          description: CheckReplaySessionResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/CheckReplaySessionResponse"
  "/replay/initializeclock":
    post:
      description: ''
      operationId: initializeClock
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/InitializeClock"
      tags:
      - Prices
      responses:
        '200':
          description: SimpleResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SimpleResponse"
  "/adminAlertSignal/completealertsignal":
    post:
      description: ''
      operationId: completeAlertSignal
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CompleteAlertSignal"
      tags:
      - Alerts
      responses:
        '200':
          description: AdminAlertSignalResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AdminAlertSignalResponse"
  "/adminAlertSignal/deps":
    get:
      description: Retrieves all entities of AdminAlertSignal type related to AdminAlert
        entity
      operationId: adminAlertSignalDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of AdminAlert entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Alerts
      responses:
        '200':
          description: AdminAlertSignal
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AdminAlertSignal"
  "/adminAlertSignal/item":
    get:
      description: Retrieves an entity of AdminAlertSignal type by its id
      operationId: adminAlertSignalItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Alerts
      responses:
        '200':
          description: AdminAlertSignal
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AdminAlertSignal"
  "/adminAlertSignal/items":
    get:
      description: Retrieves multiple entities of AdminAlertSignal type by its ids
      operationId: adminAlertSignalItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Alerts
      responses:
        '200':
          description: AdminAlertSignal
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AdminAlertSignal"
  "/adminAlertSignal/ldeps":
    get:
      description: Retrieves all entities of AdminAlertSignal type related to multiple
        entities of AdminAlert type
      operationId: adminAlertSignalLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of AdminAlert entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Alerts
      responses:
        '200':
          description: AdminAlertSignal
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AdminAlertSignal"
  "/adminAlertSignal/list":
    get:
      description: Retrieves all entities of AdminAlertSignal type
      operationId: adminAlertSignalList
      security:
      - bearer_access_token: []
      tags:
      - Alerts
      responses:
        '200':
          description: AdminAlertSignal
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AdminAlertSignal"
  "/adminAlertSignal/takealertsignalownership":
    post:
      description: ''
      operationId: takeAlertSignalOwnership
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TakeAlertSignalOwnership"
      tags:
      - Alerts
      responses:
        '200':
          description: AdminAlertSignalResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AdminAlertSignalResponse"
  "/alert/createalert":
    post:
      description: ''
      operationId: createAlert
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CreateAlert"
      tags:
      - Alerts
      responses:
        '200':
          description: AlertResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AlertResponse"
  "/alert/deletealert":
    post:
      description: ''
      operationId: deleteAlert
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DeleteAlert"
      tags:
      - Alerts
      responses:
        '200':
          description: AlertResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AlertResponse"
  "/alert/deps":
    get:
      description: Retrieves all entities of Alert type related to User entity
      operationId: alertDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of User entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Alerts
      responses:
        '200':
          description: Alert
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Alert"
  "/alert/dismissalert":
    post:
      description: ''
      operationId: dismissAlert
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/DismissAlert"
      tags:
      - Alerts
      responses:
        '200':
          description: AlertResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AlertResponse"
  "/alert/item":
    get:
      description: Retrieves an entity of Alert type by its id
      operationId: alertItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Alerts
      responses:
        '200':
          description: Alert
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Alert"
  "/alert/items":
    get:
      description: Retrieves multiple entities of Alert type by its ids
      operationId: alertItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Alerts
      responses:
        '200':
          description: Alert
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Alert"
  "/alert/ldeps":
    get:
      description: Retrieves all entities of Alert type related to multiple entities
        of User type
      operationId: alertLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of User entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Alerts
      responses:
        '200':
          description: Alert
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Alert"
  "/alert/list":
    get:
      description: Retrieves all entities of Alert type
      operationId: alertList
      security:
      - bearer_access_token: []
      tags:
      - Alerts
      responses:
        '200':
          description: Alert
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Alert"
  "/alert/markreadalertsignal":
    post:
      description: ''
      operationId: markReadAlertSignal
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MarkReadAlertSignal"
      tags:
      - Alerts
      responses:
        '200':
          description: AlertResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AlertResponse"
  "/alert/modifyalert":
    post:
      description: ''
      operationId: modifyAlert
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ModifyAlert"
      tags:
      - Alerts
      responses:
        '200':
          description: AlertResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AlertResponse"
  "/alert/resetalert":
    post:
      description: ''
      operationId: resetAlert
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ResetAlert"
      tags:
      - Alerts
      responses:
        '200':
          description: AlertResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AlertResponse"
  "/alertSignal/deps":
    get:
      description: Retrieves all entities of AlertSignal type related to Alert entity
      operationId: alertSignalDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of Alert entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Alerts
      responses:
        '200':
          description: AlertSignal
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AlertSignal"
  "/alertSignal/item":
    get:
      description: Retrieves an entity of AlertSignal type by its id
      operationId: alertSignalItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Alerts
      responses:
        '200':
          description: AlertSignal
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AlertSignal"
  "/alertSignal/items":
    get:
      description: Retrieves multiple entities of AlertSignal type by its ids
      operationId: alertSignalItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Alerts
      responses:
        '200':
          description: AlertSignal
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AlertSignal"
  "/alertSignal/ldeps":
    get:
      description: Retrieves all entities of AlertSignal type related to multiple
        entities of Alert type
      operationId: alertSignalLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of Alert entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Alerts
      responses:
        '200':
          description: AlertSignal
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AlertSignal"
  "/alertSignal/list":
    get:
      description: Retrieves all entities of AlertSignal type
      operationId: alertSignalList
      security:
      - bearer_access_token: []
      tags:
      - Alerts
      responses:
        '200':
          description: AlertSignal
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AlertSignal"
  "/adminAlert/find":
    get:
      description: Retrieves an entity of AdminAlert type by its name
      operationId: adminAlertFind
      security:
      - bearer_access_token: []
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      tags:
      - Configuration
      responses:
        '200':
          description: AdminAlert
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AdminAlert"
  "/adminAlert/item":
    get:
      description: Retrieves an entity of AdminAlert type by its id
      operationId: adminAlertItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Configuration
      responses:
        '200':
          description: AdminAlert
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AdminAlert"
  "/adminAlert/items":
    get:
      description: Retrieves multiple entities of AdminAlert type by its ids
      operationId: adminAlertItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Configuration
      responses:
        '200':
          description: AdminAlert
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AdminAlert"
  "/adminAlert/list":
    get:
      description: Retrieves all entities of AdminAlert type
      operationId: adminAlertList
      security:
      - bearer_access_token: []
      tags:
      - Configuration
      responses:
        '200':
          description: AdminAlert
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AdminAlert"
  "/adminAlert/suggest":
    get:
      description: Retrieves entities of AdminAlert type filtered by an occurrence
        of a text in one of its fields
      operationId: adminAlertSuggest
      security:
      - bearer_access_token: []
      parameters:
      - name: t
        description: Text
        in: query
        required: true
        schema:
          type: string
      - name: l
        description: Max number of entities
        in: query
        required: true
        schema:
          type: integer
          format: int32
      tags:
      - Configuration
      responses:
        '200':
          description: AdminAlert
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/AdminAlert"
  "/clearingHouse/find":
    get:
      description: Retrieves an entity of ClearingHouse type by its name
      operationId: clearingHouseFind
      security:
      - bearer_access_token: []
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      tags:
      - Configuration
      responses:
        '200':
          description: ClearingHouse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ClearingHouse"
  "/clearingHouse/item":
    get:
      description: Retrieves an entity of ClearingHouse type by its id
      operationId: clearingHouseItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Configuration
      responses:
        '200':
          description: ClearingHouse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ClearingHouse"
  "/clearingHouse/items":
    get:
      description: Retrieves multiple entities of ClearingHouse type by its ids
      operationId: clearingHouseItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Configuration
      responses:
        '200':
          description: ClearingHouse
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ClearingHouse"
  "/clearingHouse/list":
    get:
      description: Retrieves all entities of ClearingHouse type
      operationId: clearingHouseList
      security:
      - bearer_access_token: []
      tags:
      - Configuration
      responses:
        '200':
          description: ClearingHouse
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ClearingHouse"
  "/clearingHouse/suggest":
    get:
      description: Retrieves entities of ClearingHouse type filtered by an occurrence
        of a text in one of its fields
      operationId: clearingHouseSuggest
      security:
      - bearer_access_token: []
      parameters:
      - name: t
        description: Text
        in: query
        required: true
        schema:
          type: string
      - name: l
        description: Max number of entities
        in: query
        required: true
        schema:
          type: integer
          format: int32
      tags:
      - Configuration
      responses:
        '200':
          description: ClearingHouse
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ClearingHouse"
  "/entitlement/item":
    get:
      description: Retrieves an entity of Entitlement type by its id
      operationId: entitlementItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Configuration
      responses:
        '200':
          description: Entitlement
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Entitlement"
  "/entitlement/items":
    get:
      description: Retrieves multiple entities of Entitlement type by its ids
      operationId: entitlementItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Configuration
      responses:
        '200':
          description: Entitlement
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Entitlement"
  "/entitlement/list":
    get:
      description: Retrieves all entities of Entitlement type
      operationId: entitlementList
      security:
      - bearer_access_token: []
      tags:
      - Configuration
      responses:
        '200':
          description: Entitlement
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Entitlement"
  "/orderStrategyType/find":
    get:
      description: Retrieves an entity of OrderStrategyType type by its name
      operationId: orderStrategyTypeFind
      security:
      - bearer_access_token: []
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      tags:
      - Configuration
      responses:
        '200':
          description: OrderStrategyType
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrderStrategyType"
  "/orderStrategyType/item":
    get:
      description: Retrieves an entity of OrderStrategyType type by its id
      operationId: orderStrategyTypeItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Configuration
      responses:
        '200':
          description: OrderStrategyType
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OrderStrategyType"
  "/orderStrategyType/items":
    get:
      description: Retrieves multiple entities of OrderStrategyType type by its ids
      operationId: orderStrategyTypeItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Configuration
      responses:
        '200':
          description: OrderStrategyType
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OrderStrategyType"
  "/orderStrategyType/list":
    get:
      description: Retrieves all entities of OrderStrategyType type
      operationId: orderStrategyTypeList
      security:
      - bearer_access_token: []
      tags:
      - Configuration
      responses:
        '200':
          description: OrderStrategyType
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OrderStrategyType"
  "/orderStrategyType/suggest":
    get:
      description: Retrieves entities of OrderStrategyType type filtered by an occurrence
        of a text in one of its fields
      operationId: orderStrategyTypeSuggest
      security:
      - bearer_access_token: []
      parameters:
      - name: t
        description: Text
        in: query
        required: true
        schema:
          type: string
      - name: l
        description: Max number of entities
        in: query
        required: true
        schema:
          type: integer
          format: int32
      tags:
      - Configuration
      responses:
        '200':
          description: OrderStrategyType
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/OrderStrategyType"
  "/property/find":
    get:
      description: Retrieves an entity of Property type by its name
      operationId: propertyFind
      security:
      - bearer_access_token: []
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      tags:
      - Configuration
      responses:
        '200':
          description: Property
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Property"
  "/property/item":
    get:
      description: Retrieves an entity of Property type by its id
      operationId: propertyItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Configuration
      responses:
        '200':
          description: Property
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Property"
  "/property/items":
    get:
      description: Retrieves multiple entities of Property type by its ids
      operationId: propertyItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Configuration
      responses:
        '200':
          description: Property
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Property"
  "/property/list":
    get:
      description: Retrieves all entities of Property type
      operationId: propertyList
      security:
      - bearer_access_token: []
      tags:
      - Configuration
      responses:
        '200':
          description: Property
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Property"
  "/property/suggest":
    get:
      description: Retrieves entities of Property type filtered by an occurrence of
        a text in one of its fields
      operationId: propertySuggest
      security:
      - bearer_access_token: []
      parameters:
      - name: t
        description: Text
        in: query
        required: true
        schema:
          type: string
      - name: l
        description: Max number of entities
        in: query
        required: true
        schema:
          type: integer
          format: int32
      tags:
      - Configuration
      responses:
        '200':
          description: Property
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Property"
  "/contactInfo/deps":
    get:
      description: Retrieves all entities of ContactInfo type related to User entity
      operationId: contactInfoDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of User entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Users
      responses:
        '200':
          description: ContactInfo
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContactInfo"
  "/contactInfo/item":
    get:
      description: Retrieves an entity of ContactInfo type by its id
      operationId: contactInfoItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Users
      responses:
        '200':
          description: ContactInfo
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ContactInfo"
  "/contactInfo/items":
    get:
      description: Retrieves multiple entities of ContactInfo type by its ids
      operationId: contactInfoItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Users
      responses:
        '200':
          description: ContactInfo
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContactInfo"
  "/contactInfo/ldeps":
    get:
      description: Retrieves all entities of ContactInfo type related to multiple
        entities of User type
      operationId: contactInfoLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of User entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Users
      responses:
        '200':
          description: ContactInfo
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ContactInfo"
  "/marketDataSubscription/create":
    post:
      description: Creates a new entity of MarketDataSubscription
      operationId: marketDataSubscriptionCreate
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MarketDataSubscription"
      tags:
      - Users
      responses:
        '200':
          description: MarketDataSubscription
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MarketDataSubscription"
  "/marketDataSubscription/deps":
    get:
      description: Retrieves all entities of MarketDataSubscription type related to
        User entity
      operationId: marketDataSubscriptionDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of User entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Users
      responses:
        '200':
          description: MarketDataSubscription
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MarketDataSubscription"
  "/marketDataSubscription/item":
    get:
      description: Retrieves an entity of MarketDataSubscription type by its id
      operationId: marketDataSubscriptionItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Users
      responses:
        '200':
          description: MarketDataSubscription
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MarketDataSubscription"
  "/marketDataSubscription/items":
    get:
      description: Retrieves multiple entities of MarketDataSubscription type by its
        ids
      operationId: marketDataSubscriptionItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Users
      responses:
        '200':
          description: MarketDataSubscription
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MarketDataSubscription"
  "/marketDataSubscription/ldeps":
    get:
      description: Retrieves all entities of MarketDataSubscription type related to
        multiple entities of User type
      operationId: marketDataSubscriptionLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of User entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Users
      responses:
        '200':
          description: MarketDataSubscription
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MarketDataSubscription"
  "/marketDataSubscription/list":
    get:
      description: Retrieves all entities of MarketDataSubscription type
      operationId: marketDataSubscriptionList
      security:
      - bearer_access_token: []
      tags:
      - Users
      responses:
        '200':
          description: MarketDataSubscription
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/MarketDataSubscription"
  "/marketDataSubscription/update":
    post:
      description: Updates an existing entity of MarketDataSubscription
      operationId: marketDataSubscriptionUpdate
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MarketDataSubscription"
      tags:
      - Users
      responses:
        '200':
          description: MarketDataSubscription
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MarketDataSubscription"
  "/organization/find":
    get:
      description: Retrieves an entity of Organization type by its name
      operationId: organizationFind
      security:
      - bearer_access_token: []
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      tags:
      - Users
      responses:
        '200':
          description: Organization
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Organization"
  "/organization/item":
    get:
      description: Retrieves an entity of Organization type by its id
      operationId: organizationItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Users
      responses:
        '200':
          description: Organization
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Organization"
  "/organization/items":
    get:
      description: Retrieves multiple entities of Organization type by its ids
      operationId: organizationItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Users
      responses:
        '200':
          description: Organization
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Organization"
  "/organization/list":
    get:
      description: Retrieves all entities of Organization type
      operationId: organizationList
      security:
      - bearer_access_token: []
      tags:
      - Users
      responses:
        '200':
          description: Organization
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Organization"
  "/organization/suggest":
    get:
      description: Retrieves entities of Organization type filtered by an occurrence
        of a text in one of its fields
      operationId: organizationSuggest
      security:
      - bearer_access_token: []
      parameters:
      - name: t
        description: Text
        in: query
        required: true
        schema:
          type: string
      - name: l
        description: Max number of entities
        in: query
        required: true
        schema:
          type: integer
          format: int32
      tags:
      - Users
      responses:
        '200':
          description: Organization
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Organization"
  "/secondMarketDataSubscription/deps":
    get:
      description: Retrieves all entities of SecondMarketDataSubscription type related
        to User entity
      operationId: secondMarketDataSubscriptionDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of User entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Users
      responses:
        '200':
          description: SecondMarketDataSubscription
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SecondMarketDataSubscription"
  "/secondMarketDataSubscription/item":
    get:
      description: Retrieves an entity of SecondMarketDataSubscription type by its
        id
      operationId: secondMarketDataSubscriptionItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Users
      responses:
        '200':
          description: SecondMarketDataSubscription
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SecondMarketDataSubscription"
  "/secondMarketDataSubscription/items":
    get:
      description: Retrieves multiple entities of SecondMarketDataSubscription type
        by its ids
      operationId: secondMarketDataSubscriptionItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Users
      responses:
        '200':
          description: SecondMarketDataSubscription
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SecondMarketDataSubscription"
  "/secondMarketDataSubscription/ldeps":
    get:
      description: Retrieves all entities of SecondMarketDataSubscription type related
        to multiple entities of User type
      operationId: secondMarketDataSubscriptionLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of User entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Users
      responses:
        '200':
          description: SecondMarketDataSubscription
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SecondMarketDataSubscription"
  "/secondMarketDataSubscription/list":
    get:
      description: Retrieves all entities of SecondMarketDataSubscription type
      operationId: secondMarketDataSubscriptionList
      security:
      - bearer_access_token: []
      tags:
      - Users
      responses:
        '200':
          description: SecondMarketDataSubscription
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/SecondMarketDataSubscription"
  "/tradovateSubscription/create":
    post:
      description: Creates a new entity of TradovateSubscription
      operationId: tradovateSubscriptionCreate
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TradovateSubscription"
      tags:
      - Users
      responses:
        '200':
          description: TradovateSubscription
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TradovateSubscription"
  "/tradovateSubscription/deps":
    get:
      description: Retrieves all entities of TradovateSubscription type related to
        User entity
      operationId: tradovateSubscriptionDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of User entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Users
      responses:
        '200':
          description: TradovateSubscription
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TradovateSubscription"
  "/tradovateSubscription/item":
    get:
      description: Retrieves an entity of TradovateSubscription type by its id
      operationId: tradovateSubscriptionItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Users
      responses:
        '200':
          description: TradovateSubscription
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TradovateSubscription"
  "/tradovateSubscription/items":
    get:
      description: Retrieves multiple entities of TradovateSubscription type by its
        ids
      operationId: tradovateSubscriptionItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Users
      responses:
        '200':
          description: TradovateSubscription
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TradovateSubscription"
  "/tradovateSubscription/ldeps":
    get:
      description: Retrieves all entities of TradovateSubscription type related to
        multiple entities of User type
      operationId: tradovateSubscriptionLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of User entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Users
      responses:
        '200':
          description: TradovateSubscription
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TradovateSubscription"
  "/tradovateSubscription/list":
    get:
      description: Retrieves all entities of TradovateSubscription type
      operationId: tradovateSubscriptionList
      security:
      - bearer_access_token: []
      tags:
      - Users
      responses:
        '200':
          description: TradovateSubscription
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/TradovateSubscription"
  "/tradovateSubscription/update":
    post:
      description: Updates an existing entity of TradovateSubscription
      operationId: tradovateSubscriptionUpdate
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/TradovateSubscription"
      tags:
      - Users
      responses:
        '200':
          description: TradovateSubscription
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TradovateSubscription"
  "/user/accepttradingpermission":
    post:
      description: ''
      operationId: acceptTradingPermission
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AcceptTradingPermission"
      tags:
      - Users
      responses:
        '200':
          description: TradingPermissionResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TradingPermissionResponse"
  "/user/activatesecondmarketdatasubscriptionrenewal":
    post:
      description: ''
      operationId: activateSecondMarketDataSubscriptionRenewal
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ActivateSecondMarketDataSubscriptionRenewal"
      tags:
      - Users
      responses:
        '200':
          description: SecondMarketDataSubscriptionResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SecondMarketDataSubscriptionResponse"
  "/user/addmarketdatasubscription":
    post:
      description: ''
      operationId: addMarketDataSubscription
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AddMarketDataSubscription"
      tags:
      - Users
      responses:
        '200':
          description: MarketDataSubscriptionResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/MarketDataSubscriptionResponse"
  "/user/addsecondmarketdatasubscription":
    post:
      description: ''
      operationId: addSecondMarketDataSubscription
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AddSecondMarketDataSubscription"
      tags:
      - Users
      responses:
        '200':
          description: SecondMarketDataSubscriptionResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SecondMarketDataSubscriptionResponse"
  "/user/addtradovatesubscription":
    post:
      description: ''
      operationId: addTradovateSubscription
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AddTradovateSubscription"
      tags:
      - Users
      responses:
        '200':
          description: TradovateSubscriptionResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TradovateSubscriptionResponse"
  "/user/cancelsecondmarketdatasubscription":
    post:
      description: ''
      operationId: cancelSecondMarketDataSubscription
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CancelSecondMarketDataSubscription"
      tags:
      - Users
      responses:
        '200':
          description: SecondMarketDataSubscriptionResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SecondMarketDataSubscriptionResponse"
  "/user/cancelsecondmarketdatasubscriptionrenewal":
    post:
      description: ''
      operationId: cancelSecondMarketDataSubscriptionRenewal
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CancelSecondMarketDataSubscriptionRenewal"
      tags:
      - Users
      responses:
        '200':
          description: SecondMarketDataSubscriptionResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SecondMarketDataSubscriptionResponse"
  "/user/canceltradovatesubscription":
    post:
      description: ''
      operationId: cancelTradovateSubscription
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CancelTradovateSubscription"
      tags:
      - Users
      responses:
        '200':
          description: TradovateSubscriptionResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TradovateSubscriptionResponse"
  "/user/find":
    get:
      description: Retrieves an entity of User type by its name
      operationId: userFind
      security:
      - bearer_access_token: []
      parameters:
      - name: name
        in: query
        required: true
        schema:
          type: string
      tags:
      - Users
      responses:
        '200':
          description: User
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"
  "/user/getaccounttradingpermissions":
    post:
      description: ''
      operationId: getAccountTradingPermissions
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GetAccountTradingPermissions"
      tags:
      - Users
      responses:
        '200':
          description: TradingPermissionsResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TradingPermissionsResponse"
  "/user/getsecondmarketdatasubscriptioncost":
    post:
      description: ''
      operationId: getSecondMarketDataSubscriptionCost
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/GetSecondMarketDataSubscriptionCost"
      tags:
      - Users
      responses:
        '200':
          description: SecondMarketDataSubscriptionCostResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SecondMarketDataSubscriptionCostResponse"
  "/user/item":
    get:
      description: Retrieves an entity of User type by its id
      operationId: userItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Users
      responses:
        '200':
          description: User
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"
  "/user/items":
    get:
      description: Retrieves multiple entities of User type by its ids
      operationId: userItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Users
      responses:
        '200':
          description: User
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/User"
  "/user/list":
    get:
      description: Retrieves all entities of User type
      operationId: userList
      security:
      - bearer_access_token: []
      tags:
      - Users
      responses:
        '200':
          description: User
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/User"
  "/user/modifycredentials":
    post:
      description: ''
      operationId: modifyCredentials
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ModifyCredentials"
      tags:
      - Users
      responses:
        '200':
          description: AccessTokenResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccessTokenResponse"
  "/user/modifyemailaddress":
    post:
      description: ''
      operationId: modifyEmailAddress
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ModifyEmailAddress"
      tags:
      - Users
      responses:
        '200':
          description: UserStatusMessage
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserStatusMessage"
  "/user/modifypassword":
    post:
      description: ''
      operationId: modifyPassword
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ModifyPassword"
      tags:
      - Users
      responses:
        '200':
          description: AccessTokenResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/AccessTokenResponse"
  "/user/opendemoaccount":
    post:
      description: ''
      operationId: openDemoAccount
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/OpenDemoAccount"
      tags:
      - Users
      responses:
        '200':
          description: OpenDemoAccountResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/OpenDemoAccountResponse"
  "/user/requesttradingpermission":
    post:
      description: ''
      operationId: requestTradingPermission
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RequestTradingPermission"
      tags:
      - Users
      responses:
        '200':
          description: TradingPermissionResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TradingPermissionResponse"
  "/user/revoketradingpermission":
    post:
      description: ''
      operationId: revokeTradingPermission
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/RevokeTradingPermission"
      tags:
      - Users
      responses:
        '200':
          description: TradingPermissionResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/TradingPermissionResponse"
  "/user/signuporganizationmember":
    post:
      description: ''
      operationId: signUpOrganizationMember
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SignUpOrganizationMember"
      tags:
      - Users
      responses:
        '200':
          description: SignUpResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SignUpResponse"
  "/user/suggest":
    get:
      description: Retrieves entities of User type filtered by an occurrence of a
        text in one of its fields
      operationId: userSuggest
      security:
      - bearer_access_token: []
      parameters:
      - name: t
        description: Text
        in: query
        required: true
        schema:
          type: string
      - name: l
        description: Max number of entities
        in: query
        required: true
        schema:
          type: integer
          format: int32
      tags:
      - Users
      responses:
        '200':
          description: User
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/User"
  "/user/syncrequest":
    post:
      description: ''
      operationId: syncRequest
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/SyncRequest"
      tags:
      - Users
      responses:
        '200':
          description: SyncMessage
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/SyncMessage"
  "/userPlugin/addentitlementsubscription":
    post:
      description: ''
      operationId: addEntitlementSubscription
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/AddEntitlementSubscription"
      tags:
      - Users
      responses:
        '200':
          description: EntitlementSubscriptionResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/EntitlementSubscriptionResponse"
  "/userPlugin/create":
    post:
      description: Creates a new entity of UserPlugin
      operationId: userPluginCreate
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserPlugin"
      tags:
      - Users
      responses:
        '200':
          description: UserPlugin
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserPlugin"
  "/userPlugin/deps":
    get:
      description: Retrieves all entities of UserPlugin type related to User entity
      operationId: userPluginDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of User entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Users
      responses:
        '200':
          description: UserPlugin
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserPlugin"
  "/userPlugin/item":
    get:
      description: Retrieves an entity of UserPlugin type by its id
      operationId: userPluginItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Users
      responses:
        '200':
          description: UserPlugin
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserPlugin"
  "/userPlugin/items":
    get:
      description: Retrieves multiple entities of UserPlugin type by its ids
      operationId: userPluginItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Users
      responses:
        '200':
          description: UserPlugin
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserPlugin"
  "/userPlugin/ldeps":
    get:
      description: Retrieves all entities of UserPlugin type related to multiple entities
        of User type
      operationId: userPluginLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of User entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Users
      responses:
        '200':
          description: UserPlugin
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserPlugin"
  "/userPlugin/list":
    get:
      description: Retrieves all entities of UserPlugin type
      operationId: userPluginList
      security:
      - bearer_access_token: []
      tags:
      - Users
      responses:
        '200':
          description: UserPlugin
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserPlugin"
  "/userPlugin/update":
    post:
      description: Updates an existing entity of UserPlugin
      operationId: userPluginUpdate
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/UserPlugin"
      tags:
      - Users
      responses:
        '200':
          description: UserPlugin
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserPlugin"
  "/userProperty/deps":
    get:
      description: Retrieves all entities of UserProperty type related to User entity
      operationId: userPropertyDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of User entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Users
      responses:
        '200':
          description: UserProperty
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserProperty"
  "/userProperty/item":
    get:
      description: Retrieves an entity of UserProperty type by its id
      operationId: userPropertyItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Users
      responses:
        '200':
          description: UserProperty
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserProperty"
  "/userProperty/items":
    get:
      description: Retrieves multiple entities of UserProperty type by its ids
      operationId: userPropertyItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Users
      responses:
        '200':
          description: UserProperty
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserProperty"
  "/userProperty/ldeps":
    get:
      description: Retrieves all entities of UserProperty type related to multiple
        entities of User type
      operationId: userPropertyLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of User entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Users
      responses:
        '200':
          description: UserProperty
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserProperty"
  "/userSession/item":
    get:
      description: Retrieves an entity of UserSession type by its id
      operationId: userSessionItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Users
      responses:
        '200':
          description: UserSession
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserSession"
  "/userSession/items":
    get:
      description: Retrieves multiple entities of UserSession type by its ids
      operationId: userSessionItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Users
      responses:
        '200':
          description: UserSession
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserSession"
  "/userSessionStats/deps":
    get:
      description: Retrieves all entities of UserSessionStats type related to User
        entity
      operationId: userSessionStatsDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of User entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Users
      responses:
        '200':
          description: UserSessionStats
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserSessionStats"
  "/userSessionStats/item":
    get:
      description: Retrieves an entity of UserSessionStats type by its id
      operationId: userSessionStatsItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Users
      responses:
        '200':
          description: UserSessionStats
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/UserSessionStats"
  "/userSessionStats/items":
    get:
      description: Retrieves multiple entities of UserSessionStats type by its ids
      operationId: userSessionStatsItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Users
      responses:
        '200':
          description: UserSessionStats
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserSessionStats"
  "/userSessionStats/ldeps":
    get:
      description: Retrieves all entities of UserSessionStats type related to multiple
        entities of User type
      operationId: userSessionStatsLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of User entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Users
      responses:
        '200':
          description: UserSessionStats
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserSessionStats"
  "/userSessionStats/list":
    get:
      description: Retrieves all entities of UserSessionStats type
      operationId: userSessionStatsList
      security:
      - bearer_access_token: []
      tags:
      - Users
      responses:
        '200':
          description: UserSessionStats
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/UserSessionStats"
  "/chat/closechat":
    post:
      description: ''
      operationId: closeChat
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/CloseChat"
      tags:
      - Chat
      responses:
        '200':
          description: ChatResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ChatResponse"
  "/chat/deps":
    get:
      description: Retrieves all entities of Chat type related to User entity
      operationId: chatDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of User entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Chat
      responses:
        '200':
          description: Chat
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Chat"
  "/chat/item":
    get:
      description: Retrieves an entity of Chat type by its id
      operationId: chatItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Chat
      responses:
        '200':
          description: Chat
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Chat"
  "/chat/items":
    get:
      description: Retrieves multiple entities of Chat type by its ids
      operationId: chatItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Chat
      responses:
        '200':
          description: Chat
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Chat"
  "/chat/ldeps":
    get:
      description: Retrieves all entities of Chat type related to multiple entities
        of User type
      operationId: chatLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of User entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Chat
      responses:
        '200':
          description: Chat
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Chat"
  "/chat/list":
    get:
      description: Retrieves all entities of Chat type
      operationId: chatList
      security:
      - bearer_access_token: []
      tags:
      - Chat
      responses:
        '200':
          description: Chat
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Chat"
  "/chat/markasreadchatmessage":
    post:
      description: ''
      operationId: markAsReadChatMessage
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/MarkAsReadChatMessage"
      tags:
      - Chat
      responses:
        '200':
          description: ChatMessageResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ChatMessageResponse"
  "/chat/postchatmessage":
    post:
      description: ''
      operationId: postChatMessage
      security:
      - bearer_access_token: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/PostChatMessage"
      tags:
      - Chat
      responses:
        '200':
          description: ChatMessageResponse
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ChatMessageResponse"
  "/chatMessage/deps":
    get:
      description: Retrieves all entities of ChatMessage type related to Chat entity
      operationId: chatMessageDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterid
        description: id of Chat entity
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Chat
      responses:
        '200':
          description: ChatMessage
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ChatMessage"
  "/chatMessage/item":
    get:
      description: Retrieves an entity of ChatMessage type by its id
      operationId: chatMessageItem
      security:
      - bearer_access_token: []
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: integer
          format: int64
      tags:
      - Chat
      responses:
        '200':
          description: ChatMessage
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ChatMessage"
  "/chatMessage/items":
    get:
      description: Retrieves multiple entities of ChatMessage type by its ids
      operationId: chatMessageItems
      security:
      - bearer_access_token: []
      parameters:
      - name: ids
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Chat
      responses:
        '200':
          description: ChatMessage
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ChatMessage"
  "/chatMessage/ldeps":
    get:
      description: Retrieves all entities of ChatMessage type related to multiple
        entities of Chat type
      operationId: chatMessageLDependents
      security:
      - bearer_access_token: []
      parameters:
      - name: masterids
        description: ids of Chat entities
        in: query
        required: true
        style: form
        explode: false
        schema:
          type: array
          items:
            type: integer
      tags:
      - Chat
      responses:
        '200':
          description: ChatMessage
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/ChatMessage"
components:
  securitySchemes:
    bearer_access_token:
      type: http
      scheme: bearer
  schemas:
    TradeTime:
      type: object
      required:
      - hour
      - minute
      properties:
        hour:
          type: integer
        minute:
          type: integer
    TradeDate:
      type: object
      required:
      - year
      - month
      - day
      properties:
        year:
          type: integer
        month:
          type: integer
        day:
          type: integer
    AcceptTradingPermission:
      type: object
      required:
      - tradingPermissionId
      properties:
        tradingPermissionId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    AccessTokenRequest:
      type: object
      required:
      - name
      - password
      properties:
        name:
          type: string
          maxLength: 64
        password:
          type: string
          maxLength: 64
        appId:
          type: string
          maxLength: 64
        appVersion:
          type: string
          maxLength: 64
        deviceId:
          type: string
          maxLength: 64
        cid:
          type: string
          maxLength: 64
        sec:
          type: string
          maxLength: 8192
    AccessTokenResponse:
      type: object
      properties:
        errorText:
          type: string
          description: Non-empty if the request failed
          maxLength: 8192
        accessToken:
          type: string
          maxLength: 8192
        expirationTime:
          type: string
          format: date-time
        passwordExpirationTime:
          type: string
          format: date-time
        userStatus:
          type: string
          description: Active, Closed, Initiated, TemporaryLocked, UnconfirmedEmail
          enum:
          - Active
          - Closed
          - Initiated
          - TemporaryLocked
          - UnconfirmedEmail
        userId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        name:
          type: string
          maxLength: 64
        hasLive:
          type: boolean
    Account:
      type: object
      required:
      - name
      - userId
      - accountType
      - active
      - clearingHouseId
      - riskCategoryId
      - autoLiqProfileId
      - marginAccountType
      - legalStatus
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 64
        userId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        accountType:
          type: string
          description: Customer, Giveup, House, Omnibus, Wash
          enum:
          - Customer
          - Giveup
          - House
          - Omnibus
          - Wash
        active:
          type: boolean
        clearingHouseId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        riskCategoryId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        autoLiqProfileId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        marginAccountType:
          type: string
          description: Hedger, Speculator
          enum:
          - Hedger
          - Speculator
        legalStatus:
          type: string
          description: Corporation, GP, IRA, Individual, Joint, LLC, LLP, LP, Trust
          enum:
          - Corporation
          - GP
          - IRA
          - Individual
          - Joint
          - LLC
          - LLP
          - LP
          - Trust
        readonly:
          type: boolean
    ActivateSecondMarketDataSubscriptionRenewal:
      type: object
      required:
      - secondMarketDataSubscriptionId
      properties:
        secondMarketDataSubscriptionId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    AddEntitlementSubscription:
      type: object
      required:
      - entitlementId
      properties:
        entitlementId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        creditCardId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        accountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        userId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    AddMarketDataSubscription:
      type: object
      required:
      - marketDataSubscriptionPlanIds
      - year
      - month
      properties:
        marketDataSubscriptionPlanIds:
          type: array
          items:
            type: integer
        year:
          type: integer
          format: int32
          minimum: 2015
          maximum: 2030
        month:
          type: integer
          format: int32
          minimum: 1
          maximum: 12
        creditCardId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        accountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        userId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    AddSecondMarketDataSubscription:
      type: object
      required:
      - year
      - month
      properties:
        year:
          type: integer
          format: int32
          minimum: 2015
          maximum: 2030
        month:
          type: integer
          format: int32
          minimum: 1
          maximum: 12
        creditCardId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        accountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        userId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    AddTradovateSubscription:
      type: object
      required:
      - tradovateSubscriptionPlanId
      properties:
        tradovateSubscriptionPlanId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        creditCardId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        accountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        userId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    AdminAlert:
      type: object
      required:
      - name
      - timestamp
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 64
        timestamp:
          type: string
          format: date-time
    AdminAlertSignal:
      type: object
      required:
      - timestamp
      - adminAlertId
      - text
      - emailSent
      - subjectId
      properties:
        id:
          type: integer
          format: int64
        timestamp:
          type: string
          format: date-time
        adminAlertId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        relatedToAccountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        relatedToUserId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        ownedByAdminId:
          type: integer
          format: int64
          description: Owned By...
          minimum: 0
          exclusiveMinimum: true
        completed:
          type: string
          format: date-time
        text:
          type: string
          maxLength: 8192
        emailSent:
          type: boolean
        subjectId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    AdminAlertSignalResponse:
      type: object
      properties:
        errorText:
          type: string
          description: Non-empty if the request failed
          maxLength: 8192
        adminAlertSignal:
          "$ref": "#/components/schemas/AdminAlertSignal"
    Alert:
      type: object
      required:
      - timestamp
      - userId
      - status
      - expression
      properties:
        id:
          type: integer
          format: int64
        timestamp:
          type: string
          format: date-time
        userId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        status:
          type: string
          description: Active, Expired, Failed, Inactive, TriggeredOut
          enum:
          - Active
          - Expired
          - Failed
          - Inactive
          - TriggeredOut
        expression:
          type: string
          maxLength: 4096
        validUntil:
          type: string
          format: date-time
        triggerLimits:
          type: integer
          format: int32
          minimum: 0
          maximum: 10
        triggeredCounter:
          type: integer
          format: int32
          minimum: 0
        failure:
          type: string
          maxLength: 64
        message:
          type: string
          maxLength: 256
    AlertResponse:
      type: object
      properties:
        errorText:
          type: string
          description: Non-empty if the request failed
          maxLength: 8192
        alert:
          "$ref": "#/components/schemas/Alert"
    AlertSignal:
      type: object
      required:
      - timestamp
      - alertId
      - isRead
      - text
      properties:
        id:
          type: integer
          format: int64
        timestamp:
          type: string
          format: date-time
        alertId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        isRead:
          type: boolean
        text:
          type: string
          maxLength: 8192
    CancelOrder:
      type: object
      required:
      - orderId
      properties:
        orderId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        clOrdId:
          type: string
          maxLength: 64
        activationTime:
          type: string
          format: date-time
        customTag50:
          type: string
          maxLength: 64
        isAutomated:
          type: boolean
    CancelSecondMarketDataSubscription:
      type: object
      required:
      - secondMarketDataSubscriptionId
      properties:
        secondMarketDataSubscriptionId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    CancelSecondMarketDataSubscriptionRenewal:
      type: object
      required:
      - secondMarketDataSubscriptionId
      properties:
        secondMarketDataSubscriptionId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    CancelTradovateSubscription:
      type: object
      required:
      - tradovateSubscriptionId
      properties:
        tradovateSubscriptionId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        cancelReason:
          type: string
          maxLength: 8192
    CashBalance:
      type: object
      required:
      - accountId
      - timestamp
      - tradeDate
      - currencyId
      - amount
      properties:
        id:
          type: integer
          format: int64
        accountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        timestamp:
          type: string
          format: date-time
        tradeDate:
          "$ref": "#/components/schemas/TradeDate"
        currencyId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        amount:
          type: number
          format: double
        realizedPnL:
          type: number
          format: double
        weekRealizedPnL:
          type: number
          format: double
    CashBalanceLog:
      type: object
      required:
      - accountId
      - timestamp
      - tradeDate
      - currencyId
      - amount
      - cashChangeType
      - delta
      properties:
        id:
          type: integer
          format: int64
        accountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        timestamp:
          type: string
          format: date-time
        tradeDate:
          "$ref": "#/components/schemas/TradeDate"
        currencyId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        amount:
          type: number
          format: double
        realizedPnL:
          type: number
          format: double
        weekRealizedPnL:
          type: number
          format: double
        cashChangeType:
          type: string
          description: AutomaticReconciliation, BrokerageFee, CancelledPairedTrade,
            ClearingFee, Commission, DeskFee, EntitlementSubscription, ExchangeFee,
            FundTransaction, FundTransactionFee, IPFee, LiquidationFee, ManualAdjustment,
            MarketDataSubscription, NewSession, NfaFee, OptionsTrade, OrderRoutingFee,
            TradePaired, TradovateSubscription
          enum:
          - AutomaticReconciliation
          - BrokerageFee
          - CancelledPairedTrade
          - ClearingFee
          - Commission
          - DeskFee
          - EntitlementSubscription
          - ExchangeFee
          - FundTransaction
          - FundTransactionFee
          - IPFee
          - LiquidationFee
          - ManualAdjustment
          - MarketDataSubscription
          - NewSession
          - NfaFee
          - OptionsTrade
          - OrderRoutingFee
          - TradePaired
          - TradovateSubscription
        fillPairId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        fillId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        fundTransactionId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        comment:
          type: string
          maxLength: 64
        delta:
          type: number
          format: double
    CashBalanceSnapshot:
      type: object
      properties:
        errorText:
          type: string
          description: Non-empty if the request failed
          maxLength: 8192
        totalCashValue:
          type: number
          format: double
        totalPnL:
          type: number
          format: double
        initialMargin:
          type: number
          format: double
        maintenanceMargin:
          type: number
          format: double
        netLiq:
          type: number
          format: double
        openPnL:
          type: number
          format: double
        realizedPnL:
          type: number
          format: double
        weekRealizedPnL:
          type: number
          format: double
    ChangeSpeed:
      type: object
      required:
      - speed
      properties:
        speed:
          type: integer
          format: int32
          minimum: 0
          maximum: 400
    Chat:
      type: object
      required:
      - userId
      - timestamp
      - category
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        timestamp:
          type: string
          format: date-time
        category:
          type: string
          description: Support, TradeDesk
          enum:
          - Support
          - TradeDesk
        assignedSupportId:
          type: integer
          format: int64
          description: Assigned To
          minimum: 0
          exclusiveMinimum: true
        closedById:
          type: integer
          format: int64
          description: Closed By
          minimum: 0
          exclusiveMinimum: true
        closeTimestamp:
          type: string
          format: date-time
    ChatMessage:
      type: object
      required:
      - timestamp
      - chatId
      - senderId
      - text
      - readStatus
      properties:
        id:
          type: integer
          format: int64
        timestamp:
          type: string
          format: date-time
        chatId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        senderId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        senderName:
          type: string
          maxLength: 64
        text:
          type: string
          maxLength: 1024
        readStatus:
          type: boolean
    ChatMessageResponse:
      type: object
      properties:
        errorText:
          type: string
          description: Non-empty if the request failed
          maxLength: 8192
        chatMessage:
          "$ref": "#/components/schemas/ChatMessage"
    ChatResponse:
      type: object
      properties:
        errorText:
          type: string
          description: Non-empty if the request failed
          maxLength: 8192
        chat:
          "$ref": "#/components/schemas/Chat"
    CheckReplaySession:
      type: object
      required:
      - startTimestamp
      properties:
        startTimestamp:
          type: string
          format: date-time
    CheckReplaySessionResponse:
      type: object
      required:
      - checkStatus
      properties:
        checkStatus:
          type: string
          description: Ineligible, OK, StartTimestampAdjusted
          enum:
          - Ineligible
          - OK
          - StartTimestampAdjusted
        startTimestamp:
          type: string
          format: date-time
    ClearingHouse:
      type: object
      required:
      - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 64
    CloseChat:
      type: object
      required:
      - chatId
      properties:
        chatId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    Command:
      type: object
      required:
      - orderId
      - timestamp
      - commandType
      - commandStatus
      properties:
        id:
          type: integer
          format: int64
        orderId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        timestamp:
          type: string
          format: date-time
        clOrdId:
          type: string
          maxLength: 64
        commandType:
          type: string
          description: Cancel, Modify, New
          enum:
          - Cancel
          - Modify
          - New
        commandStatus:
          type: string
          description: AtExecution, ExecutionRejected, ExecutionStopped, ExecutionSuspended,
            OnHold, Pending, PendingExecution, Replaced, RiskPassed, RiskRejected
          enum:
          - AtExecution
          - ExecutionRejected
          - ExecutionStopped
          - ExecutionSuspended
          - OnHold
          - Pending
          - PendingExecution
          - Replaced
          - RiskPassed
          - RiskRejected
        senderId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        userSessionId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        activationTime:
          type: string
          format: date-time
        customTag50:
          type: string
          maxLength: 64
        isAutomated:
          type: boolean
    CommandReport:
      type: object
      required:
      - commandId
      - timestamp
      - commandStatus
      properties:
        id:
          type: integer
          format: int64
        commandId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        timestamp:
          type: string
          format: date-time
        commandStatus:
          type: string
          description: AtExecution, ExecutionRejected, ExecutionStopped, ExecutionSuspended,
            OnHold, Pending, PendingExecution, Replaced, RiskPassed, RiskRejected
          enum:
          - AtExecution
          - ExecutionRejected
          - ExecutionStopped
          - ExecutionSuspended
          - OnHold
          - Pending
          - PendingExecution
          - Replaced
          - RiskPassed
          - RiskRejected
        rejectReason:
          type: string
          description: AccountClosed, AdvancedTrailingStopUnsupported, AnotherCommandPending,
            BackMonthProhibited, ExecutionProviderNotConfigured, ExecutionProviderUnavailable,
            InvalidContract, InvalidPrice, LiquidationOnly, LiquidationOnlyBeforeExpiration,
            MaxOrderQtyIsNotSpecified, MaxOrderQtyLimitReached, MaxPosLimitMisconfigured,
            MaxPosLimitReached, MaxTotalPosLimitReached, MultipleAccountPlanRequired,
            NoQuote, NotEnoughLiquidity, OtherExecutionRelated, ParentRejected, RiskCheckTimeout,
            SessionClosed, Success, TooLate, TradingLocked, TrailingStopNonOrderQtyModify,
            Unauthorized, UnknownReason, Unsupported
          enum:
          - AccountClosed
          - AdvancedTrailingStopUnsupported
          - AnotherCommandPending
          - BackMonthProhibited
          - ExecutionProviderNotConfigured
          - ExecutionProviderUnavailable
          - InvalidContract
          - InvalidPrice
          - LiquidationOnly
          - LiquidationOnlyBeforeExpiration
          - MaxOrderQtyIsNotSpecified
          - MaxOrderQtyLimitReached
          - MaxPosLimitMisconfigured
          - MaxPosLimitReached
          - MaxTotalPosLimitReached
          - MultipleAccountPlanRequired
          - NoQuote
          - NotEnoughLiquidity
          - OtherExecutionRelated
          - ParentRejected
          - RiskCheckTimeout
          - SessionClosed
          - Success
          - TooLate
          - TradingLocked
          - TrailingStopNonOrderQtyModify
          - Unauthorized
          - UnknownReason
          - Unsupported
        text:
          type: string
          maxLength: 8192
        ordStatus:
          type: string
          description: Canceled, Completed, Expired, Filled, PendingCancel, PendingNew,
            PendingReplace, Rejected, Suspended, Unknown, Working
          enum:
          - Canceled
          - Completed
          - Expired
          - Filled
          - PendingCancel
          - PendingNew
          - PendingReplace
          - Rejected
          - Suspended
          - Unknown
          - Working
    CommandResult:
      type: object
      properties:
        failureReason:
          type: string
          description: AccountClosed, AdvancedTrailingStopUnsupported, AnotherCommandPending,
            BackMonthProhibited, ExecutionProviderNotConfigured, ExecutionProviderUnavailable,
            InvalidContract, InvalidPrice, LiquidationOnly, LiquidationOnlyBeforeExpiration,
            MaxOrderQtyIsNotSpecified, MaxOrderQtyLimitReached, MaxPosLimitMisconfigured,
            MaxPosLimitReached, MaxTotalPosLimitReached, MultipleAccountPlanRequired,
            NoQuote, NotEnoughLiquidity, OtherExecutionRelated, ParentRejected, RiskCheckTimeout,
            SessionClosed, Success, TooLate, TradingLocked, TrailingStopNonOrderQtyModify,
            Unauthorized, UnknownReason, Unsupported
          enum:
          - AccountClosed
          - AdvancedTrailingStopUnsupported
          - AnotherCommandPending
          - BackMonthProhibited
          - ExecutionProviderNotConfigured
          - ExecutionProviderUnavailable
          - InvalidContract
          - InvalidPrice
          - LiquidationOnly
          - LiquidationOnlyBeforeExpiration
          - MaxOrderQtyIsNotSpecified
          - MaxOrderQtyLimitReached
          - MaxPosLimitMisconfigured
          - MaxPosLimitReached
          - MaxTotalPosLimitReached
          - MultipleAccountPlanRequired
          - NoQuote
          - NotEnoughLiquidity
          - OtherExecutionRelated
          - ParentRejected
          - RiskCheckTimeout
          - SessionClosed
          - Success
          - TooLate
          - TradingLocked
          - TrailingStopNonOrderQtyModify
          - Unauthorized
          - UnknownReason
          - Unsupported
        failureText:
          type: string
          maxLength: 8192
        commandId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    CompleteAlertSignal:
      type: object
      required:
      - adminAlertSignalId
      properties:
        adminAlertSignalId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    ContactInfo:
      type: object
      required:
      - userId
      - firstName
      - lastName
      - streetAddress1
      - city
      - country
      - phone
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        firstName:
          type: string
          maxLength: 64
        lastName:
          type: string
          minLength: 2
          maxLength: 64
        streetAddress1:
          type: string
          minLength: 3
          maxLength: 8192
        streetAddress2:
          type: string
          maxLength: 8192
        city:
          type: string
          minLength: 2
          maxLength: 64
        state:
          type: string
          minLength: 2
          maxLength: 64
        postCode:
          type: string
          minLength: 4
          maxLength: 64
        country:
          type: string
          minLength: 2
          maxLength: 2
        phone:
          type: string
          minLength: 10
          maxLength: 64
        mailingIsDifferent:
          type: boolean
        mailingStreetAddress1:
          type: string
          maxLength: 8192
        mailingStreetAddress2:
          type: string
          maxLength: 8192
        mailingCity:
          type: string
          maxLength: 64
        mailingState:
          type: string
          maxLength: 64
        mailingPostCode:
          type: string
          maxLength: 64
        mailingCountry:
          type: string
          maxLength: 2
    Contract:
      type: object
      required:
      - name
      - contractMaturityId
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 64
        contractMaturityId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    ContractGroup:
      type: object
      required:
      - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 64
    ContractMargin:
      type: object
      required:
      - initialMargin
      - maintenanceMargin
      - timestamp
      properties:
        id:
          type: integer
          format: int64
        initialMargin:
          type: number
          format: double
        maintenanceMargin:
          type: number
          format: double
        timestamp:
          type: string
          format: date-time
    ContractMaturity:
      type: object
      required:
      - productId
      - expirationMonth
      - expirationDate
      - isFront
      properties:
        id:
          type: integer
          format: int64
        productId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        expirationMonth:
          type: integer
          format: int32
          minimum: 1401
          exclusiveMinimum: true
        expirationDate:
          type: string
          format: date-time
        firstIntentDate:
          type: string
          format: date-time
        underlyingId:
          type: integer
          format: int64
          description: Underlying
          minimum: 0
          exclusiveMinimum: true
        isFront:
          type: boolean
    CreateAlert:
      type: object
      required:
      - expression
      properties:
        expression:
          type: string
          maxLength: 4096
        validUntil:
          type: string
          format: date-time
        triggerLimits:
          type: integer
          format: int32
          minimum: 0
          maximum: 10
        message:
          type: string
          maxLength: 256
    Currency:
      type: object
      required:
      - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 64
        symbol:
          type: string
          maxLength: 64
    CurrencyRate:
      type: object
      required:
      - timestamp
      - rate
      properties:
        id:
          type: integer
          format: int64
        timestamp:
          type: string
          format: date-time
        rate:
          type: number
          format: double
    DeleteAlert:
      type: object
      required:
      - alertId
      properties:
        alertId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    DeleteResultResponse:
      type: object
      properties:
        errorText:
          type: string
          description: Non-empty if the request failed
          maxLength: 8192
        success:
          type: boolean
    DeleteUserAccountPositionLimit:
      type: object
      required:
      - userAccountPositionLimitId
      properties:
        userAccountPositionLimitId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    DeleteUserAccountRiskParameter:
      type: object
      required:
      - userAccountRiskParameterId
      properties:
        userAccountRiskParameterId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    DismissAlert:
      type: object
      required:
      - alertId
      properties:
        alertId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    Entitlement:
      type: object
      required:
      - title
      - price
      - name
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
          maxLength: 64
        price:
          type: number
          format: double
        startDate:
          "$ref": "#/components/schemas/TradeDate"
        discontinuedDate:
          "$ref": "#/components/schemas/TradeDate"
        name:
          type: string
          maxLength: 64
        duration:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
        durationUnits:
          type: string
          description: Month, Quarter, Week, Year
          enum:
          - Month
          - Quarter
          - Week
          - Year
        autorenewal:
          type: boolean
    EntitlementSubscriptionResponse:
      type: object
      properties:
        errorText:
          type: string
          description: Non-empty if the request failed
          maxLength: 8192
        errorCode:
          type: string
          description: ConflictWithExisting, DowngradeNotAllowed, IncompatibleCMEMarketDataSubscriptionPlans,
            IncorrectPaymentMethod, InsufficientFunds, PaymentProviderError, PlanDiscontinued,
            SingleTrialOnly, Success, UnknownError
          enum:
          - ConflictWithExisting
          - DowngradeNotAllowed
          - IncompatibleCMEMarketDataSubscriptionPlans
          - IncorrectPaymentMethod
          - InsufficientFunds
          - PaymentProviderError
          - PlanDiscontinued
          - SingleTrialOnly
          - Success
          - UnknownError
        entitlementSubscription:
          "$ref": "#/components/schemas/UserPlugin"
    Exchange:
      type: object
      required:
      - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 64
    ExecutionReport:
      type: object
      required:
      - commandId
      - name
      - accountId
      - contractId
      - timestamp
      - orderId
      - execType
      - action
      properties:
        id:
          type: integer
          format: int64
        commandId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        name:
          type: string
          maxLength: 64
        accountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        contractId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        timestamp:
          type: string
          format: date-time
        tradeDate:
          "$ref": "#/components/schemas/TradeDate"
        orderId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        execType:
          type: string
          description: Canceled, Completed, DoneForDay, Expired, New, OrderStatus,
            PendingCancel, PendingNew, PendingReplace, Rejected, Replaced, Stopped,
            Suspended, Trade, TradeCancel, TradeCorrect
          enum:
          - Canceled
          - Completed
          - DoneForDay
          - Expired
          - New
          - OrderStatus
          - PendingCancel
          - PendingNew
          - PendingReplace
          - Rejected
          - Replaced
          - Stopped
          - Suspended
          - Trade
          - TradeCancel
          - TradeCorrect
        execRefId:
          type: string
          maxLength: 64
        ordStatus:
          type: string
          description: Canceled, Completed, Expired, Filled, PendingCancel, PendingNew,
            PendingReplace, Rejected, Suspended, Unknown, Working
          enum:
          - Canceled
          - Completed
          - Expired
          - Filled
          - PendingCancel
          - PendingNew
          - PendingReplace
          - Rejected
          - Suspended
          - Unknown
          - Working
        action:
          type: string
          description: Buy, Sell
          enum:
          - Buy
          - Sell
        cumQty:
          type: integer
          format: int32
        avgPx:
          type: number
          format: double
        lastQty:
          type: integer
          format: int32
        lastPx:
          type: number
          format: double
        rejectReason:
          type: string
          description: AccountClosed, AdvancedTrailingStopUnsupported, AnotherCommandPending,
            BackMonthProhibited, ExecutionProviderNotConfigured, ExecutionProviderUnavailable,
            InvalidContract, InvalidPrice, LiquidationOnly, LiquidationOnlyBeforeExpiration,
            MaxOrderQtyIsNotSpecified, MaxOrderQtyLimitReached, MaxPosLimitMisconfigured,
            MaxPosLimitReached, MaxTotalPosLimitReached, MultipleAccountPlanRequired,
            NoQuote, NotEnoughLiquidity, OtherExecutionRelated, ParentRejected, RiskCheckTimeout,
            SessionClosed, Success, TooLate, TradingLocked, TrailingStopNonOrderQtyModify,
            Unauthorized, UnknownReason, Unsupported
          enum:
          - AccountClosed
          - AdvancedTrailingStopUnsupported
          - AnotherCommandPending
          - BackMonthProhibited
          - ExecutionProviderNotConfigured
          - ExecutionProviderUnavailable
          - InvalidContract
          - InvalidPrice
          - LiquidationOnly
          - LiquidationOnlyBeforeExpiration
          - MaxOrderQtyIsNotSpecified
          - MaxOrderQtyLimitReached
          - MaxPosLimitMisconfigured
          - MaxPosLimitReached
          - MaxTotalPosLimitReached
          - MultipleAccountPlanRequired
          - NoQuote
          - NotEnoughLiquidity
          - OtherExecutionRelated
          - ParentRejected
          - RiskCheckTimeout
          - SessionClosed
          - Success
          - TooLate
          - TradingLocked
          - TrailingStopNonOrderQtyModify
          - Unauthorized
          - UnknownReason
          - Unsupported
        text:
          type: string
          maxLength: 8192
        exchangeOrderId:
          type: string
          maxLength: 64
    Fill:
      type: object
      required:
      - orderId
      - contractId
      - timestamp
      - tradeDate
      - action
      - qty
      - price
      - active
      - finallyPaired
      properties:
        id:
          type: integer
          format: int64
        orderId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        contractId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        timestamp:
          type: string
          format: date-time
        tradeDate:
          "$ref": "#/components/schemas/TradeDate"
        action:
          type: string
          description: Buy, Sell
          enum:
          - Buy
          - Sell
        qty:
          type: integer
          format: int32
        price:
          type: number
          format: double
        active:
          type: boolean
        finallyPaired:
          type: integer
          format: int32
    FillFee:
      type: object
      properties:
        id:
          type: integer
          format: int64
        clearingFee:
          type: number
          format: double
        clearingCurrencyId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        exchangeFee:
          type: number
          format: double
        exchangeCurrencyId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        nfaFee:
          type: number
          format: double
        nfaCurrencyId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        brokerageFee:
          type: number
          format: double
        brokerageCurrencyId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        ipFee:
          type: number
          format: double
        ipCurrencyId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        commission:
          type: number
          format: double
        commissionCurrencyId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        orderRoutingFee:
          type: number
          format: double
        orderRoutingCurrencyId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    FillPair:
      type: object
      required:
      - positionId
      - buyFillId
      - sellFillId
      - qty
      - buyPrice
      - sellPrice
      - active
      properties:
        id:
          type: integer
          format: int64
        positionId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        buyFillId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        sellFillId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        qty:
          type: integer
          format: int32
        buyPrice:
          type: number
          format: double
        sellPrice:
          type: number
          format: double
        active:
          type: boolean
    GetAccountTradingPermissions:
      type: object
      required:
      - accountId
      properties:
        accountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    GetCashBalanceSnapshot:
      type: object
      required:
      - accountId
      properties:
        accountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    GetProductFeeParams:
      type: object
      required:
      - productIds
      properties:
        productIds:
          type: array
          items:
            type: integer
    GetSecondMarketDataSubscriptionCost:
      type: object
      required:
      - year
      - month
      properties:
        year:
          type: integer
          format: int32
          minimum: 2015
          maximum: 2030
        month:
          type: integer
          format: int32
          minimum: 1
          maximum: 12
        userId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    InitializeClock:
      type: object
      required:
      - startTimestamp
      - speed
      properties:
        startTimestamp:
          type: string
          format: date-time
        speed:
          type: integer
          format: int32
          minimum: 0
          maximum: 400
        initialBalance:
          type: number
          format: double
    InterruptOrderStrategy:
      type: object
      required:
      - orderStrategyId
      properties:
        orderStrategyId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    LiquidatePosition:
      type: object
      required:
      - accountId
      - contractId
      - admin
      properties:
        accountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        contractId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        admin:
          type: boolean
        customTag50:
          type: string
          maxLength: 64
    MarginSnapshot:
      type: object
      required:
      - timestamp
      - riskTimePeriodId
      - initialMargin
      - maintenanceMargin
      - totalUsedMargin
      - fullInitialMargin
      properties:
        id:
          type: integer
          format: int64
        timestamp:
          type: string
          format: date-time
        riskTimePeriodId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        initialMargin:
          type: number
          format: double
        maintenanceMargin:
          type: number
          format: double
        autoLiqLevel:
          type: number
          format: double
        liqOnlyLevel:
          type: number
          format: double
        totalUsedMargin:
          type: number
          format: double
        fullInitialMargin:
          type: number
          format: double
    MarkAsReadChatMessage:
      type: object
      required:
      - chatMessageId
      properties:
        chatMessageId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    MarkReadAlertSignal:
      type: object
      required:
      - alertId
      - alertSignalId
      properties:
        alertId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        alertSignalId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    MarketDataSubscription:
      type: object
      required:
      - userId
      - timestamp
      - planPrice
      - marketDataSubscriptionPlanId
      - year
      - month
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        timestamp:
          type: string
          format: date-time
        planPrice:
          type: number
          format: double
        creditCardTransactionId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        cashBalanceLogId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        creditCardId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        accountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        marketDataSubscriptionPlanId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        year:
          type: integer
          format: int32
          minimum: 2015
          maximum: 2030
        month:
          type: integer
          format: int32
          minimum: 1
          maximum: 12
        renewalCreditCardId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        renewalAccountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    MarketDataSubscriptionExchangeScope:
      type: object
      required:
      - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 64
        bundleOf:
          type: string
          maxLength: 64
    MarketDataSubscriptionPlan:
      type: object
      required:
      - name
      - title
      - price
      - exchangeScopeId
      - dataType
      - professional
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 64
        title:
          type: string
          maxLength: 64
        price:
          type: number
          format: double
        startDate:
          "$ref": "#/components/schemas/TradeDate"
        discontinuedDate:
          "$ref": "#/components/schemas/TradeDate"
        exchangeScopeId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        dataType:
          type: string
          description: DOM, Top
          enum:
          - DOM
          - Top
        professional:
          type: string
          description: Either, NonProfessional, Professional
          enum:
          - Either
          - NonProfessional
          - Professional
        tooltip:
          type: string
          maxLength: 8192
    MarketDataSubscriptionResponse:
      type: object
      properties:
        errorText:
          type: string
          description: Non-empty if the request failed
          maxLength: 8192
        errorCode:
          type: string
          description: ConflictWithExisting, DowngradeNotAllowed, IncompatibleCMEMarketDataSubscriptionPlans,
            IncorrectPaymentMethod, InsufficientFunds, PaymentProviderError, PlanDiscontinued,
            SingleTrialOnly, Success, UnknownError
          enum:
          - ConflictWithExisting
          - DowngradeNotAllowed
          - IncompatibleCMEMarketDataSubscriptionPlans
          - IncorrectPaymentMethod
          - InsufficientFunds
          - PaymentProviderError
          - PlanDiscontinued
          - SingleTrialOnly
          - Success
          - UnknownError
        marketDataSubscription:
          "$ref": "#/components/schemas/MarketDataSubscription"
    ModifyAlert:
      type: object
      required:
      - alertId
      - expression
      properties:
        alertId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        expression:
          type: string
          maxLength: 4096
        validUntil:
          type: string
          format: date-time
        triggerLimits:
          type: integer
          format: int32
          minimum: 0
          maximum: 10
        message:
          type: string
          maxLength: 256
    ModifyCredentials:
      type: object
      required:
      - name
      - password
      - currentPassword
      properties:
        userId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        name:
          type: string
          minLength: 3
          maxLength: 64
        password:
          type: string
          minLength: 8
          maxLength: 64
        currentPassword:
          type: string
          maxLength: 64
    ModifyEmailAddress:
      type: object
      required:
      - email
      properties:
        userId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        email:
          type: string
          maxLength: 64
    ModifyOrder:
      type: object
      required:
      - orderId
      - orderQty
      - orderType
      properties:
        orderId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        clOrdId:
          type: string
          maxLength: 64
        orderQty:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
        orderType:
          type: string
          description: Limit, MIT, Market, QTS, Stop, StopLimit, TrailingStop, TrailingStopLimit
          enum:
          - Limit
          - MIT
          - Market
          - QTS
          - Stop
          - StopLimit
          - TrailingStop
          - TrailingStopLimit
        price:
          type: number
          format: double
        stopPrice:
          type: number
          format: double
        maxShow:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
        pegDifference:
          type: number
          format: double
        timeInForce:
          type: string
          description: Day, FOK, GTC, GTD, IOC
          enum:
          - Day
          - FOK
          - GTC
          - GTD
          - IOC
        expireTime:
          type: string
          format: date-time
        text:
          type: string
          maxLength: 64
        activationTime:
          type: string
          format: date-time
        customTag50:
          type: string
          maxLength: 64
        isAutomated:
          type: boolean
    ModifyOrderStrategy:
      type: object
      required:
      - orderStrategyId
      - command
      properties:
        orderStrategyId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        command:
          type: string
          maxLength: 1024
        customTag50:
          type: string
          maxLength: 64
    ModifyPassword:
      type: object
      required:
      - password
      - currentPassword
      properties:
        userId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        password:
          type: string
          minLength: 8
          maxLength: 64
        currentPassword:
          type: string
          maxLength: 64
    OpenDemoAccount:
      type: object
      properties:
        templateAccountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        name:
          type: string
          maxLength: 64
        initialBalance:
          type: number
          format: double
    OpenDemoAccountResponse:
      type: object
      properties:
        errorText:
          type: string
          description: Non-empty if the request failed
          maxLength: 8192
        accountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    Order:
      type: object
      required:
      - accountId
      - timestamp
      - action
      - ordStatus
      - admin
      properties:
        id:
          type: integer
          format: int64
        accountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        contractId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        spreadDefinitionId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        timestamp:
          type: string
          format: date-time
          description: Create Time
        action:
          type: string
          description: Buy, Sell
          enum:
          - Buy
          - Sell
        ordStatus:
          type: string
          description: Canceled, Completed, Expired, Filled, PendingCancel, PendingNew,
            PendingReplace, Rejected, Suspended, Unknown, Working
          enum:
          - Canceled
          - Completed
          - Expired
          - Filled
          - PendingCancel
          - PendingNew
          - PendingReplace
          - Rejected
          - Suspended
          - Unknown
          - Working
        executionProviderId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        ocoId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        parentId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        linkedId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        admin:
          type: boolean
    OrderStrategy:
      type: object
      required:
      - accountId
      - timestamp
      - contractId
      - orderStrategyTypeId
      - action
      - status
      properties:
        id:
          type: integer
          format: int64
        accountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        timestamp:
          type: string
          format: date-time
        contractId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        orderStrategyTypeId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        initiatorId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        action:
          type: string
          description: Buy, Sell
          enum:
          - Buy
          - Sell
        params:
          type: string
          maxLength: 8192
        uuid:
          type: string
          maxLength: 64
        status:
          type: string
          description: ActiveStrategy, ExecutionFailed, ExecutionFinished, ExecutionInterrupted,
            InactiveStrategy, NotEnoughLiquidity, StoppedByUser
          enum:
          - ActiveStrategy
          - ExecutionFailed
          - ExecutionFinished
          - ExecutionInterrupted
          - InactiveStrategy
          - NotEnoughLiquidity
          - StoppedByUser
        failureMessage:
          type: string
          maxLength: 512
        senderId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        customTag50:
          type: string
          maxLength: 64
    OrderStrategyLink:
      type: object
      required:
      - orderStrategyId
      - orderId
      - label
      properties:
        id:
          type: integer
          format: int64
        orderStrategyId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        orderId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        label:
          type: string
          maxLength: 64
    OrderStrategyStatusResponse:
      type: object
      properties:
        errorText:
          type: string
          description: Non-empty if the request failed
          maxLength: 8192
        orderStrategy:
          "$ref": "#/components/schemas/OrderStrategy"
    OrderStrategyType:
      type: object
      required:
      - name
      - enabled
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 64
        enabled:
          type: boolean
    OrderVersion:
      type: object
      required:
      - orderId
      - orderQty
      - orderType
      properties:
        id:
          type: integer
          format: int64
        orderId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        orderQty:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
        orderType:
          type: string
          description: Limit, MIT, Market, QTS, Stop, StopLimit, TrailingStop, TrailingStopLimit
          enum:
          - Limit
          - MIT
          - Market
          - QTS
          - Stop
          - StopLimit
          - TrailingStop
          - TrailingStopLimit
        price:
          type: number
          format: double
        stopPrice:
          type: number
          format: double
        maxShow:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
        pegDifference:
          type: number
          format: double
        timeInForce:
          type: string
          description: Day, FOK, GTC, GTD, IOC
          enum:
          - Day
          - FOK
          - GTC
          - GTD
          - IOC
        expireTime:
          type: string
          format: date-time
        text:
          type: string
          maxLength: 64
    Organization:
      type: object
      required:
      - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 64
    PlaceOCO:
      type: object
      required:
      - action
      - symbol
      - orderQty
      - orderType
      - other
      properties:
        accountSpec:
          type: string
          maxLength: 64
        accountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        clOrdId:
          type: string
          maxLength: 64
        action:
          type: string
          description: Buy, Sell
          enum:
          - Buy
          - Sell
        symbol:
          type: string
          maxLength: 64
        orderQty:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
        orderType:
          type: string
          description: Limit, MIT, Market, QTS, Stop, StopLimit, TrailingStop, TrailingStopLimit
          enum:
          - Limit
          - MIT
          - Market
          - QTS
          - Stop
          - StopLimit
          - TrailingStop
          - TrailingStopLimit
        price:
          type: number
          format: double
        stopPrice:
          type: number
          format: double
        maxShow:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
        pegDifference:
          type: number
          format: double
        timeInForce:
          type: string
          description: Day, FOK, GTC, GTD, IOC
          enum:
          - Day
          - FOK
          - GTC
          - GTD
          - IOC
        expireTime:
          type: string
          format: date-time
        text:
          type: string
          maxLength: 64
        activationTime:
          type: string
          format: date-time
        customTag50:
          type: string
          maxLength: 64
        isAutomated:
          type: boolean
        other:
          "$ref": "#/components/schemas/RestrainedOrderVersion"
    PlaceOSO:
      type: object
      required:
      - action
      - symbol
      - orderQty
      - orderType
      - bracket1
      properties:
        accountSpec:
          type: string
          maxLength: 64
        accountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        clOrdId:
          type: string
          maxLength: 64
        action:
          type: string
          description: Buy, Sell
          enum:
          - Buy
          - Sell
        symbol:
          type: string
          maxLength: 64
        orderQty:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
        orderType:
          type: string
          description: Limit, MIT, Market, QTS, Stop, StopLimit, TrailingStop, TrailingStopLimit
          enum:
          - Limit
          - MIT
          - Market
          - QTS
          - Stop
          - StopLimit
          - TrailingStop
          - TrailingStopLimit
        price:
          type: number
          format: double
        stopPrice:
          type: number
          format: double
        maxShow:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
        pegDifference:
          type: number
          format: double
        timeInForce:
          type: string
          description: Day, FOK, GTC, GTD, IOC
          enum:
          - Day
          - FOK
          - GTC
          - GTD
          - IOC
        expireTime:
          type: string
          format: date-time
        text:
          type: string
          maxLength: 64
        activationTime:
          type: string
          format: date-time
        customTag50:
          type: string
          maxLength: 64
        isAutomated:
          type: boolean
        bracket1:
          "$ref": "#/components/schemas/RestrainedOrderVersion"
        bracket2:
          "$ref": "#/components/schemas/RestrainedOrderVersion"
    PlaceOcoResult:
      type: object
      properties:
        failureReason:
          type: string
          description: AccountClosed, AdvancedTrailingStopUnsupported, AnotherCommandPending,
            BackMonthProhibited, ExecutionProviderNotConfigured, ExecutionProviderUnavailable,
            InvalidContract, InvalidPrice, LiquidationOnly, LiquidationOnlyBeforeExpiration,
            MaxOrderQtyIsNotSpecified, MaxOrderQtyLimitReached, MaxPosLimitMisconfigured,
            MaxPosLimitReached, MaxTotalPosLimitReached, MultipleAccountPlanRequired,
            NoQuote, NotEnoughLiquidity, OtherExecutionRelated, ParentRejected, RiskCheckTimeout,
            SessionClosed, Success, TooLate, TradingLocked, TrailingStopNonOrderQtyModify,
            Unauthorized, UnknownReason, Unsupported
          enum:
          - AccountClosed
          - AdvancedTrailingStopUnsupported
          - AnotherCommandPending
          - BackMonthProhibited
          - ExecutionProviderNotConfigured
          - ExecutionProviderUnavailable
          - InvalidContract
          - InvalidPrice
          - LiquidationOnly
          - LiquidationOnlyBeforeExpiration
          - MaxOrderQtyIsNotSpecified
          - MaxOrderQtyLimitReached
          - MaxPosLimitMisconfigured
          - MaxPosLimitReached
          - MaxTotalPosLimitReached
          - MultipleAccountPlanRequired
          - NoQuote
          - NotEnoughLiquidity
          - OtherExecutionRelated
          - ParentRejected
          - RiskCheckTimeout
          - SessionClosed
          - Success
          - TooLate
          - TradingLocked
          - TrailingStopNonOrderQtyModify
          - Unauthorized
          - UnknownReason
          - Unsupported
        failureText:
          type: string
          maxLength: 8192
        orderId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        ocoId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    PlaceOrder:
      type: object
      required:
      - action
      - symbol
      - orderQty
      - orderType
      properties:
        accountSpec:
          type: string
          maxLength: 64
        accountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        clOrdId:
          type: string
          maxLength: 64
        action:
          type: string
          description: Buy, Sell
          enum:
          - Buy
          - Sell
        symbol:
          type: string
          maxLength: 64
        orderQty:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
        orderType:
          type: string
          description: Limit, MIT, Market, QTS, Stop, StopLimit, TrailingStop, TrailingStopLimit
          enum:
          - Limit
          - MIT
          - Market
          - QTS
          - Stop
          - StopLimit
          - TrailingStop
          - TrailingStopLimit
        price:
          type: number
          format: double
        stopPrice:
          type: number
          format: double
        maxShow:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
        pegDifference:
          type: number
          format: double
        timeInForce:
          type: string
          description: Day, FOK, GTC, GTD, IOC
          enum:
          - Day
          - FOK
          - GTC
          - GTD
          - IOC
        expireTime:
          type: string
          format: date-time
        text:
          type: string
          maxLength: 64
        activationTime:
          type: string
          format: date-time
        customTag50:
          type: string
          maxLength: 64
        isAutomated:
          type: boolean
    PlaceOrderResult:
      type: object
      properties:
        failureReason:
          type: string
          description: AccountClosed, AdvancedTrailingStopUnsupported, AnotherCommandPending,
            BackMonthProhibited, ExecutionProviderNotConfigured, ExecutionProviderUnavailable,
            InvalidContract, InvalidPrice, LiquidationOnly, LiquidationOnlyBeforeExpiration,
            MaxOrderQtyIsNotSpecified, MaxOrderQtyLimitReached, MaxPosLimitMisconfigured,
            MaxPosLimitReached, MaxTotalPosLimitReached, MultipleAccountPlanRequired,
            NoQuote, NotEnoughLiquidity, OtherExecutionRelated, ParentRejected, RiskCheckTimeout,
            SessionClosed, Success, TooLate, TradingLocked, TrailingStopNonOrderQtyModify,
            Unauthorized, UnknownReason, Unsupported
          enum:
          - AccountClosed
          - AdvancedTrailingStopUnsupported
          - AnotherCommandPending
          - BackMonthProhibited
          - ExecutionProviderNotConfigured
          - ExecutionProviderUnavailable
          - InvalidContract
          - InvalidPrice
          - LiquidationOnly
          - LiquidationOnlyBeforeExpiration
          - MaxOrderQtyIsNotSpecified
          - MaxOrderQtyLimitReached
          - MaxPosLimitMisconfigured
          - MaxPosLimitReached
          - MaxTotalPosLimitReached
          - MultipleAccountPlanRequired
          - NoQuote
          - NotEnoughLiquidity
          - OtherExecutionRelated
          - ParentRejected
          - RiskCheckTimeout
          - SessionClosed
          - Success
          - TooLate
          - TradingLocked
          - TrailingStopNonOrderQtyModify
          - Unauthorized
          - UnknownReason
          - Unsupported
        failureText:
          type: string
          maxLength: 8192
        orderId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    PlaceOsoResult:
      type: object
      properties:
        failureReason:
          type: string
          description: AccountClosed, AdvancedTrailingStopUnsupported, AnotherCommandPending,
            BackMonthProhibited, ExecutionProviderNotConfigured, ExecutionProviderUnavailable,
            InvalidContract, InvalidPrice, LiquidationOnly, LiquidationOnlyBeforeExpiration,
            MaxOrderQtyIsNotSpecified, MaxOrderQtyLimitReached, MaxPosLimitMisconfigured,
            MaxPosLimitReached, MaxTotalPosLimitReached, MultipleAccountPlanRequired,
            NoQuote, NotEnoughLiquidity, OtherExecutionRelated, ParentRejected, RiskCheckTimeout,
            SessionClosed, Success, TooLate, TradingLocked, TrailingStopNonOrderQtyModify,
            Unauthorized, UnknownReason, Unsupported
          enum:
          - AccountClosed
          - AdvancedTrailingStopUnsupported
          - AnotherCommandPending
          - BackMonthProhibited
          - ExecutionProviderNotConfigured
          - ExecutionProviderUnavailable
          - InvalidContract
          - InvalidPrice
          - LiquidationOnly
          - LiquidationOnlyBeforeExpiration
          - MaxOrderQtyIsNotSpecified
          - MaxOrderQtyLimitReached
          - MaxPosLimitMisconfigured
          - MaxPosLimitReached
          - MaxTotalPosLimitReached
          - MultipleAccountPlanRequired
          - NoQuote
          - NotEnoughLiquidity
          - OtherExecutionRelated
          - ParentRejected
          - RiskCheckTimeout
          - SessionClosed
          - Success
          - TooLate
          - TradingLocked
          - TrailingStopNonOrderQtyModify
          - Unauthorized
          - UnknownReason
          - Unsupported
        failureText:
          type: string
          maxLength: 8192
        orderId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        oso1Id:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        oso2Id:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    Position:
      type: object
      required:
      - accountId
      - contractId
      - timestamp
      - tradeDate
      - netPos
      - bought
      - boughtValue
      - sold
      - soldValue
      - prevPos
      properties:
        id:
          type: integer
          format: int64
        accountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        contractId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        timestamp:
          type: string
          format: date-time
        tradeDate:
          "$ref": "#/components/schemas/TradeDate"
        netPos:
          type: integer
          format: int32
        netPrice:
          type: number
          format: double
        bought:
          type: integer
          format: int32
          minimum: 0
        boughtValue:
          type: number
          format: double
        sold:
          type: integer
          format: int32
          minimum: 0
        soldValue:
          type: number
          format: double
        prevPos:
          type: integer
          format: int32
        prevPrice:
          type: number
          format: double
    PostChatMessage:
      type: object
      required:
      - category
      - text
      properties:
        userId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        category:
          type: string
          description: Support, TradeDesk
          enum:
          - Support
          - TradeDesk
        text:
          type: string
          maxLength: 1024
    Product:
      type: object
      required:
      - name
      - currencyId
      - productType
      - description
      - exchangeId
      - contractGroupId
      - status
      - valuePerPoint
      - priceFormatType
      - priceFormat
      - tickSize
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 64
        currencyId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        productType:
          type: string
          description: CommonStock, Continuous, Cryptocurrency, Futures, MarketInternals,
            Options, Spread
          enum:
          - CommonStock
          - Continuous
          - Cryptocurrency
          - Futures
          - MarketInternals
          - Options
          - Spread
        description:
          type: string
          maxLength: 8192
        exchangeId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        contractGroupId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        riskDiscountContractGroupId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        status:
          type: string
          description: Inactive, Locked, ReadyForContracts, ReadyToTrade, Verified
          enum:
          - Inactive
          - Locked
          - ReadyForContracts
          - ReadyToTrade
          - Verified
        months:
          type: string
          maxLength: 64
        isSecured:
          type: boolean
        valuePerPoint:
          type: number
          format: double
          minimum: 0
          exclusiveMinimum: true
        priceFormatType:
          type: string
          description: Decimal, Fractional
          enum:
          - Decimal
          - Fractional
        priceFormat:
          type: integer
          format: int32
        tickSize:
          type: number
          format: double
          description: Product Tick Size
          minimum: 0
          exclusiveMinimum: true
    ProductFeeParams:
      type: object
      required:
      - productId
      properties:
        clearingFee:
          type: number
          format: double
        clearingCurrencyId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        exchangeFee:
          type: number
          format: double
        exchangeCurrencyId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        nfaFee:
          type: number
          format: double
        nfaCurrencyId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        brokerageFee:
          type: number
          format: double
        brokerageCurrencyId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        ipFee:
          type: number
          format: double
        ipCurrencyId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        commission:
          type: number
          format: double
        commissionCurrencyId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        orderRoutingFee:
          type: number
          format: double
        orderRoutingCurrencyId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        productId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        dayMargin:
          type: number
          format: double
        nightMargin:
          type: number
          format: double
        fullMargin:
          "$ref": "#/components/schemas/ProductMargin"
    ProductFeeParamsResponse:
      type: object
      required:
      - params
      properties:
        params:
          type: array
          items:
            "$ref": "#/components/schemas/ProductFeeParams"
    ProductMargin:
      type: object
      required:
      - initialMargin
      - maintenanceMargin
      - timestamp
      properties:
        id:
          type: integer
          format: int64
        initialMargin:
          type: number
          format: double
        maintenanceMargin:
          type: number
          format: double
        timestamp:
          type: string
          format: date-time
    ProductSession:
      type: object
      required:
      - openTime
      - startTime
      - stopTime
      - closeTime
      properties:
        id:
          type: integer
          format: int64
        openTime:
          "$ref": "#/components/schemas/TradeTime"
        startTime:
          "$ref": "#/components/schemas/TradeTime"
        stopTime:
          "$ref": "#/components/schemas/TradeTime"
        closeTime:
          "$ref": "#/components/schemas/TradeTime"
        sundayOpenTime:
          "$ref": "#/components/schemas/TradeTime"
    Property:
      type: object
      required:
      - name
      - propertyType
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 64
        propertyType:
          type: string
          description: Boolean, Enum, Integer, String
          enum:
          - Boolean
          - Enum
          - Integer
          - String
        enumOptions:
          type: string
          maxLength: 8192
        defaultValue:
          type: string
          maxLength: 8192
    RenewAccessToken:
      type: object
    RequestTradingPermission:
      type: object
      required:
      - accountId
      - ctaContact
      - ctaEmail
      properties:
        accountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        ctaContact:
          type: string
          maxLength: 64
        ctaEmail:
          type: string
          maxLength: 64
    ResetAlert:
      type: object
      required:
      - alertId
      properties:
        alertId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    RestrainedOrderVersion:
      type: object
      required:
      - action
      - orderType
      properties:
        action:
          type: string
          description: Buy, Sell
          enum:
          - Buy
          - Sell
        clOrdId:
          type: string
          maxLength: 64
        orderType:
          type: string
          description: Limit, MIT, Market, QTS, Stop, StopLimit, TrailingStop, TrailingStopLimit
          enum:
          - Limit
          - MIT
          - Market
          - QTS
          - Stop
          - StopLimit
          - TrailingStop
          - TrailingStopLimit
        price:
          type: number
          format: double
        stopPrice:
          type: number
          format: double
        maxShow:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
        pegDifference:
          type: number
          format: double
        timeInForce:
          type: string
          description: Day, FOK, GTC, GTD, IOC
          enum:
          - Day
          - FOK
          - GTC
          - GTD
          - IOC
        expireTime:
          type: string
          format: date-time
        text:
          type: string
          maxLength: 64
    RevokeTradingPermission:
      type: object
      required:
      - tradingPermissionId
      properties:
        tradingPermissionId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    RollContract:
      type: object
      required:
      - name
      - forward
      properties:
        name:
          type: string
          maxLength: 64
        forward:
          type: boolean
        ifExpired:
          type: boolean
    RollContractResponse:
      type: object
      properties:
        errorText:
          type: string
          description: Non-empty if the request failed
          maxLength: 8192
        contract:
          "$ref": "#/components/schemas/Contract"
    SecondMarketDataSubscription:
      type: object
      required:
      - userId
      - timestamp
      - year
      - month
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        timestamp:
          type: string
          format: date-time
        year:
          type: integer
          format: int32
          minimum: 2015
          maximum: 2030
        month:
          type: integer
          format: int32
          minimum: 1
          maximum: 12
        cancelledRenewal:
          type: boolean
        cancellationTimestamp:
          type: string
          format: date-time
    SecondMarketDataSubscriptionCostResponse:
      type: object
      properties:
        errorText:
          type: string
          description: Non-empty if the request failed
          maxLength: 8192
        monthlyCost:
          type: number
          format: double
    SecondMarketDataSubscriptionResponse:
      type: object
      properties:
        errorText:
          type: string
          description: Non-empty if the request failed
          maxLength: 8192
        errorCode:
          type: string
          description: ConflictWithExisting, DowngradeNotAllowed, IncompatibleCMEMarketDataSubscriptionPlans,
            IncorrectPaymentMethod, InsufficientFunds, PaymentProviderError, PlanDiscontinued,
            SingleTrialOnly, Success, UnknownError
          enum:
          - ConflictWithExisting
          - DowngradeNotAllowed
          - IncompatibleCMEMarketDataSubscriptionPlans
          - IncorrectPaymentMethod
          - InsufficientFunds
          - PaymentProviderError
          - PlanDiscontinued
          - SingleTrialOnly
          - Success
          - UnknownError
        secondMarketDataSubscription:
          "$ref": "#/components/schemas/SecondMarketDataSubscription"
    SignUpOrganizationMember:
      type: object
      required:
      - name
      - email
      - password
      - firstName
      - lastName
      properties:
        name:
          type: string
          minLength: 3
          maxLength: 64
        email:
          type: string
          maxLength: 64
        password:
          type: string
          minLength: 8
          maxLength: 64
        firstName:
          type: string
          maxLength: 64
        lastName:
          type: string
          minLength: 2
          maxLength: 64
    SignUpResponse:
      type: object
      required:
      - errorCode
      - emailVerified
      properties:
        errorText:
          type: string
          description: Non-empty if the request failed
          maxLength: 8192
        errorCode:
          type: string
          description: DataError, EmailAlreadyRegistered, EmailPolicyFailed, FailedRecaptcha,
            Success, UnknownError, UserAlreadyExists, WeakPassword, WrongChallenge,
            WrongChallengeOrigin
          enum:
          - DataError
          - EmailAlreadyRegistered
          - EmailPolicyFailed
          - FailedRecaptcha
          - Success
          - UnknownError
          - UserAlreadyExists
          - WeakPassword
          - WrongChallenge
          - WrongChallengeOrigin
        userId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        emailVerified:
          type: boolean
    SimpleResponse:
      type: object
      required:
      - ok
      properties:
        errorText:
          type: string
          description: Non-empty if the request failed
          maxLength: 8192
        ok:
          type: boolean
    SpreadDefinition:
      type: object
      required:
      - timestamp
      - spreadType
      - uds
      properties:
        id:
          type: integer
          format: int64
        timestamp:
          type: string
          format: date-time
        spreadType:
          type: string
          description: Bundle, BundleSpread, Butterfly, CalendarSpread, Condor, Crack,
            DoubleButterfly, General, IntercommoditySpread, LaggedIntercommoditySpread,
            Pack, PackButterfly, PackSpread, ReducedTickCalendarSpread, ReverseIntercommoditySpread,
            ReverseSpread, Strip, TreasuryIntercommoditySpread
          enum:
          - Bundle
          - BundleSpread
          - Butterfly
          - CalendarSpread
          - Condor
          - Crack
          - DoubleButterfly
          - General
          - IntercommoditySpread
          - LaggedIntercommoditySpread
          - Pack
          - PackButterfly
          - PackSpread
          - ReducedTickCalendarSpread
          - ReverseIntercommoditySpread
          - ReverseSpread
          - Strip
          - TreasuryIntercommoditySpread
        uds:
          type: boolean
    StartOrderStrategy:
      type: object
      required:
      - symbol
      - orderStrategyTypeId
      - action
      properties:
        accountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        accountSpec:
          type: string
          maxLength: 64
        symbol:
          type: string
          maxLength: 64
        orderStrategyTypeId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        action:
          type: string
          description: Buy, Sell
          enum:
          - Buy
          - Sell
        params:
          type: string
          maxLength: 8192
        uuid:
          type: string
          maxLength: 64
        customTag50:
          type: string
          maxLength: 64
    SyncMessage:
      type: object
      required:
      - users
      - contractGroups
      properties:
        users:
          type: array
          items:
            "$ref": "#/components/schemas/User"
        accounts:
          type: array
          items:
            "$ref": "#/components/schemas/Account"
        marginSnapshots:
          type: array
          items:
            "$ref": "#/components/schemas/MarginSnapshot"
        userAccountAutoLiqs:
          type: array
          items:
            "$ref": "#/components/schemas/UserAccountAutoLiq"
        cashBalances:
          type: array
          items:
            "$ref": "#/components/schemas/CashBalance"
        currencies:
          type: array
          items:
            "$ref": "#/components/schemas/Currency"
        positions:
          type: array
          items:
            "$ref": "#/components/schemas/Position"
        fillPairs:
          type: array
          items:
            "$ref": "#/components/schemas/FillPair"
        orders:
          type: array
          items:
            "$ref": "#/components/schemas/Order"
        contracts:
          type: array
          items:
            "$ref": "#/components/schemas/Contract"
        contractMaturities:
          type: array
          items:
            "$ref": "#/components/schemas/ContractMaturity"
        products:
          type: array
          items:
            "$ref": "#/components/schemas/Product"
        exchanges:
          type: array
          items:
            "$ref": "#/components/schemas/Exchange"
        spreadDefinitions:
          type: array
          items:
            "$ref": "#/components/schemas/SpreadDefinition"
        commands:
          type: array
          items:
            "$ref": "#/components/schemas/Command"
        commandReports:
          type: array
          items:
            "$ref": "#/components/schemas/CommandReport"
        executionReports:
          type: array
          items:
            "$ref": "#/components/schemas/ExecutionReport"
        orderVersions:
          type: array
          items:
            "$ref": "#/components/schemas/OrderVersion"
        fills:
          type: array
          items:
            "$ref": "#/components/schemas/Fill"
        orderStrategies:
          type: array
          items:
            "$ref": "#/components/schemas/OrderStrategy"
        orderStrategyLinks:
          type: array
          items:
            "$ref": "#/components/schemas/OrderStrategyLink"
        userProperties:
          type: array
          items:
            "$ref": "#/components/schemas/UserProperty"
        properties:
          type: array
          items:
            "$ref": "#/components/schemas/Property"
        userPlugins:
          type: array
          items:
            "$ref": "#/components/schemas/UserPlugin"
        contractGroups:
          type: array
          items:
            "$ref": "#/components/schemas/ContractGroup"
        orderStrategyTypes:
          type: array
          items:
            "$ref": "#/components/schemas/OrderStrategyType"
    SyncRequest:
      type: object
      properties:
        users:
          type: array
          items:
            type: integer
        accounts:
          type: array
          items:
            type: integer
        splitResponses:
          type: boolean
    TakeAlertSignalOwnership:
      type: object
      required:
      - adminAlertSignalId
      properties:
        adminAlertSignalId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    TradingPermission:
      type: object
      required:
      - userId
      - accountId
      - accountHolderContact
      - accountHolderEmail
      - ctaContact
      - ctaEmail
      - status
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        accountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        accountHolderContact:
          type: string
          maxLength: 64
        accountHolderEmail:
          type: string
          maxLength: 64
        ctaContact:
          type: string
          maxLength: 64
        ctaEmail:
          type: string
          maxLength: 64
        status:
          type: string
          description: Accepted, Approved, Declined, Requested, Revoked
          enum:
          - Accepted
          - Approved
          - Declined
          - Requested
          - Revoked
        updated:
          type: string
          format: date-time
        approvedById:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    TradingPermissionResponse:
      type: object
      properties:
        errorText:
          type: string
          description: Non-empty if the request failed
          maxLength: 8192
        tradingPermission:
          "$ref": "#/components/schemas/TradingPermission"
    TradingPermissionsResponse:
      type: object
      required:
      - tradingPermissions
      properties:
        tradingPermissions:
          type: array
          items:
            "$ref": "#/components/schemas/TradingPermission"
    TradovateSubscription:
      type: object
      required:
      - userId
      - timestamp
      - planPrice
      - tradovateSubscriptionPlanId
      - startDate
      - expirationDate
      - paidAmount
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        timestamp:
          type: string
          format: date-time
        planPrice:
          type: number
          format: double
        creditCardTransactionId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        cashBalanceLogId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        creditCardId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        accountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        tradovateSubscriptionPlanId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        startDate:
          "$ref": "#/components/schemas/TradeDate"
        expirationDate:
          "$ref": "#/components/schemas/TradeDate"
        paidAmount:
          type: number
          format: double
        cancelledRenewal:
          type: boolean
        cancelReason:
          type: string
          maxLength: 8192
    TradovateSubscriptionPlan:
      type: object
      required:
      - name
      - title
      - price
      - category
      - trial
      - duration
      - durationUnits
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          maxLength: 64
        title:
          type: string
          maxLength: 64
        price:
          type: number
          format: double
        startDate:
          "$ref": "#/components/schemas/TradeDate"
        discontinuedDate:
          "$ref": "#/components/schemas/TradeDate"
        category:
          type: string
          maxLength: 64
        trial:
          type: boolean
        duration:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
        durationUnits:
          type: string
          description: Month, Quarter, Week, Year
          enum:
          - Month
          - Quarter
          - Week
          - Year
        riskCategoryId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        multipleAccounts:
          type: boolean
        organizationId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        replaySessions:
          type: integer
          format: int32
        footnote:
          type: string
          maxLength: 8192
        simOnly:
          type: boolean
    TradovateSubscriptionResponse:
      type: object
      properties:
        errorText:
          type: string
          description: Non-empty if the request failed
          maxLength: 8192
        errorCode:
          type: string
          description: ConflictWithExisting, DowngradeNotAllowed, IncompatibleCMEMarketDataSubscriptionPlans,
            IncorrectPaymentMethod, InsufficientFunds, PaymentProviderError, PlanDiscontinued,
            SingleTrialOnly, Success, UnknownError
          enum:
          - ConflictWithExisting
          - DowngradeNotAllowed
          - IncompatibleCMEMarketDataSubscriptionPlans
          - IncorrectPaymentMethod
          - InsufficientFunds
          - PaymentProviderError
          - PlanDiscontinued
          - SingleTrialOnly
          - Success
          - UnknownError
        tradovateSubscription:
          "$ref": "#/components/schemas/TradovateSubscription"
    User:
      type: object
      required:
      - name
      - timestamp
      - email
      - status
      - professional
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          minLength: 3
          maxLength: 64
        timestamp:
          type: string
          format: date-time
        email:
          type: string
          maxLength: 64
        status:
          type: string
          description: Active, Closed, Initiated, TemporaryLocked, UnconfirmedEmail
          enum:
          - Active
          - Closed
          - Initiated
          - TemporaryLocked
          - UnconfirmedEmail
        professional:
          type: boolean
        organizationId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        linkedUserId:
          type: integer
          format: int64
          description: Linked Live
          minimum: 0
          exclusiveMinimum: true
        foreignIntroducingBrokerId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    UserAccountAutoLiq:
      type: object
      properties:
        id:
          type: integer
          format: int64
        changesLocked:
          type: boolean
          description: Changes Locked
        marginPercentageAlert:
          type: number
          format: double
          description: Margin % for an Alert
        dailyLossPercentageAlert:
          type: number
          format: double
          description: Daily Loss % for an Alert
        dailyLossAlert:
          type: number
          format: double
          description: "$ Daily Loss for an Alert"
        marginPercentageLiqOnly:
          type: number
          format: double
          description: Margin % for an Liq Only
        dailyLossPercentageLiqOnly:
          type: number
          format: double
          description: Daily Loss % for an Liq Only
        dailyLossLiqOnly:
          type: number
          format: double
          description: "$ Daily Loss for an Liq Only"
        marginPercentageAutoLiq:
          type: number
          format: double
          description: Margin % for an Auto-Liq
        dailyLossPercentageAutoLiq:
          type: number
          format: double
          description: Daily Loss % for an AutoLiq
        dailyLossAutoLiq:
          type: number
          format: double
          description: "$ Daily Loss for an Auto-Liq"
        weeklyLossAutoLiq:
          type: number
          format: double
          description: "$ Weekly Loss for an Auto-Liq"
        flattenTimestamp:
          type: string
          format: date-time
          description: Flatten &amp; Cancel
        trailingMaxDrawdown:
          type: number
          format: double
          description: "$ Trailing Max Drawdown"
        trailingMaxDrawdownLimit:
          type: number
          format: double
          description: "$ Trailing Max Drawdown Limit"
        dailyProfitAutoLiq:
          type: number
          format: double
          description: "$ Daily Profit for an Auto-Liq"
        weeklyProfitAutoLiq:
          type: number
          format: double
          description: "$ Weekly Profit for an Auto-Liq"
    UserAccountPositionLimit:
      type: object
      required:
      - active
      - totalBy
      - accountId
      properties:
        id:
          type: integer
          format: int64
        contractId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        productId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        exchangeId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        productType:
          type: string
          description: CommonStock, Continuous, Cryptocurrency, Futures, MarketInternals,
            Options, Spread
          enum:
          - CommonStock
          - Continuous
          - Cryptocurrency
          - Futures
          - MarketInternals
          - Options
          - Spread
        riskDiscountContractGroupId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        productVerificationStatus:
          type: string
          description: Inactive, Locked, ReadyForContracts, ReadyToTrade, Verified
          enum:
          - Inactive
          - Locked
          - ReadyForContracts
          - ReadyToTrade
          - Verified
        contractGroupId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        active:
          type: boolean
        riskTimePeriodId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        totalBy:
          type: string
          description: Contract, ContractGroup, DiscountGroup, Exchange, Overall,
            Product, ProductType
          enum:
          - Contract
          - ContractGroup
          - DiscountGroup
          - Exchange
          - Overall
          - Product
          - ProductType
        shortLimit:
          type: integer
          format: int32
          minimum: 0
        longLimit:
          type: integer
          format: int32
          minimum: 0
        exposedLimit:
          type: integer
          format: int32
          minimum: 0
        description:
          type: string
          maxLength: 64
        accountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    UserAccountRiskParameter:
      type: object
      required:
      - userAccountPositionLimitId
      properties:
        id:
          type: integer
          format: int64
        contractId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        productId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        exchangeId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        productType:
          type: string
          description: CommonStock, Continuous, Cryptocurrency, Futures, MarketInternals,
            Options, Spread
          enum:
          - CommonStock
          - Continuous
          - Cryptocurrency
          - Futures
          - MarketInternals
          - Options
          - Spread
        riskDiscountContractGroupId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        productVerificationStatus:
          type: string
          description: Inactive, Locked, ReadyForContracts, ReadyToTrade, Verified
          enum:
          - Inactive
          - Locked
          - ReadyForContracts
          - ReadyToTrade
          - Verified
        contractGroupId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        maxOpeningOrderQty:
          type: integer
          format: int32
          minimum: 0
        maxClosingOrderQty:
          type: integer
          format: int32
          minimum: 0
        maxBackMonth:
          type: integer
          format: int32
          minimum: 0
          exclusiveMinimum: true
        preExpirationDays:
          type: integer
          format: int32
        marginPercentage:
          type: number
          format: double
        marginDollarValue:
          type: number
          format: double
        hardLimit:
          type: boolean
        userAccountPositionLimitId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    UserPlugin:
      type: object
      required:
      - userId
      - timestamp
      - planPrice
      - pluginName
      - approval
      - startDate
      - paidAmount
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        timestamp:
          type: string
          format: date-time
        planPrice:
          type: number
          format: double
        creditCardTransactionId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        cashBalanceLogId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        creditCardId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        accountId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        pluginName:
          type: string
          maxLength: 64
        approval:
          type: boolean
        entitlementId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        startDate:
          "$ref": "#/components/schemas/TradeDate"
        expirationDate:
          "$ref": "#/components/schemas/TradeDate"
        paidAmount:
          type: number
          format: double
        autorenewal:
          type: boolean
        planCategories:
          type: string
          maxLength: 8192
    UserProperty:
      type: object
      required:
      - userId
      - propertyId
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        propertyId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        value:
          type: string
          maxLength: 8192
    UserSession:
      type: object
      required:
      - userId
      - startTime
      - clientAppId
      properties:
        id:
          type: integer
          format: int64
        userId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        ipAddress:
          type: string
          maxLength: 64
        appId:
          type: string
          maxLength: 64
        appVersion:
          type: string
          maxLength: 64
        clientAppId:
          type: integer
          format: int64
          minimum: 0
          exclusiveMinimum: true
    UserSessionStats:
      type: object
      required:
      - lastSessionTime
      - failedPasswords
      properties:
        id:
          type: integer
          format: int64
        lastSessionTime:
          type: string
          format: date-time
        failedPasswords:
          type: integer
          format: int32
    UserStatusMessage:
      type: object
      properties:
        errorText:
          type: string
          description: Non-empty if the request failed
          maxLength: 8192
        status:
          type: string
          description: Active, Closed, Initiated, TemporaryLocked, UnconfirmedEmail
          enum:
          - Active
          - Closed
          - Initiated
          - TemporaryLocked
          - UnconfirmedEmail
tags:
- name: Access
  description: |
    # Overview

    Users access the API using client libraries, by making REST requests, or establishing a WebSocket connection.

    To access a server, you need to know the location of the server and have credentials to access it. Typically, credentials are automatically set-up when you open a demo account via signup process of regular Tradovate web-site or an application. In future, we intended to open access via OAuth process to help building third-party applications.

    We are going to keep locations of Tradovate services without changes as for the development environment as well for the production one.

    Development environment:
    - live-api-d.tradovate.com: for testing on Live only functionality;
    - demo-api-d.tradovate.com: for testing on simulation engine;
    - md-api-d.tradovate.com: for testing a market data feed;
    - rpt-live-api-d.tradovate.com and rpt-demo-api-d.tradovate.com: to access trading reports.

    Production environment: we will provide the most up-to-date locations to production as soon as you are ready to go there.

    # Directly accessing the REST API

    We support a relaxed version of REST API. We recommend to use GET or POST methods for particular endpoints, but do not force the rule.

    All responses are JSON encoded. Request's parameters can be as JSON encoded ones as well as query parameters.

    # Access Tokens
    Before a client can access a protected resource, it must obtain an access token. The client can either directly exchange its own credentials to an access token, either utilize Google or Facebook social logins. In future, we are going to complete OAuth2 protocol for using by third-party applications without direct access to customer's credentials.

    The client uses the "Bearer" authentication scheme to transmit the access token in "Authorization" request header field.

    ## Get an access token using credentials

    ```
    curl -X POST --header 'Content-Type: application/json' --header 'Accept: application/json' -d '{ \
       "name": "MyUsername", \
       "password": "Secret2Some-", \
       "appId": "SampleApp", \
       "appVersion": "0.7" \
     }' 'https://live-api-d.tradovate.com/v1/auth/accesstokenrequest'

     {
       "accessToken": "ag_8a97la5-T6PqMfUhu-NReEUxW4cFq_dxw-jx6SUWeqqgF6YQ5BIRZK7-rKl0zxXeOUWAYpSZLzFsv11sNlMVza1NDGuKETtTCayV7oIhWpsmg7KSpidMYPBg_J05rC_9vobaw-jA1JuCgrlman_L5G2KCl0choVttLNw",
       "expirationTime": "2016-11-04T12:29:14.514Z",
       "userStatus": "Active",
       "userId": 90,
       "name": "MyUsername"
     }
    ```

    The client can use the access token until its expiration time that comes in the response.

    [Try it!](/#operation/accessTokenRequest)

    To make the app working for users with enabled two-factor authentication, the app should specify the next three fields of the access token request: `deviceId`, `cid` and `sec`

    - `deviceId` is a string up to 64 characters that uniquely and permanently identify the physical device. For example, the app can use https://github.com/MatthewKing/DeviceId package to get gather such id;
    - `cid` is a client app id  provided by Tradovate;
    - `sec` is a secret (or API key) provided by Tradovate. This string should be kept away from public access.

    In opposite to `cid`, `appId` and `appVersion` fields are app identifiers in free form that can be displayed to the end-users in Tradovate Trader UI to show what apps are connected.

    ## Use the access token

    ```
    curl -X GET --header 'Accept: application/json' --header 'Authorization: Bearer ag_8a97la5-T6PqMfUhu-NReEUxW4cFq_dxw-jx6SUWeqqgF6YQ5BIRZK7-rKl0zxXeOUWAYpSZLzFsv11sNlMVza1NDGuKETtTCayV7oIhWpsmg7KSpidMYPBg_J05rC_9vobaw-jA1JuCgrlman_L5G2KCl0choVttLNw' 'https://live-api-d.tradovate.com/v1/account/list'

    [
      {
        "id": 33,
        "name": "V0314",
        "userId": 90,
        "accountType": "Customer",
        "active": true,
        "clearingHouseId": 1,
        "riskCategoryId": 5,
        "autoLiqProfileId": 1,
        "marginAccountType": "Speculator",
        "legalStatus": "Individual"
      }
    ]
    ```

    [Try it!](/#operation/accountList)

    Note: currently, social logins are not allowed for customers with live accounts.

    # Streaming via WebSocket

    WebSockets make it possible to open an interactive communication session. With this API, you can send messages to a server and receive event-driven responses without having to poll the server for a reply.
    Our protocol over WebSocket uses the same semantics for requests as REST API with some full-duplex extensions. [Here](/#tag/WebSockets) we describe the protocol in details.


    # Request rate limits and time penalty

    We have several limitations for a number of client requests during a time interval. We count a total number of all incoming requests toward hour, minute and second interval. As soon as a limit hit, our server stops handling requests for a period of time and responds on each new request with 429 status code (Too Many Requests).Generally, the limits are high enough to hit them during normal operations.

    Some rarely used operations have additional, tight enough constraints. Such operations like requesting an access token, sign up, changing a password or contact information are not supposed for frequent use. If a client reaches that limit, the response is a JSON with fields "p-ticket" and "p-time": it tells the client that the request was not handled and the server imposed a time penalty on the request, the client can retry the call in "p-time" seconds and should include "p-ticket" as an additional parameter of the request.

    # Connection limits

    We have a limit for a number of simultaneous client connections for one customer and for a number of simultaneously used IP addresses.
    Please contact Customer Service to get to know the current limits.

    When a customer reaches a limit of connections, the server disconnects the oldest ones.
- name: Conventions
  description: |
    # Overview

    Tradovate API is a low-level HTTP-based API that you can use to query data,
    submit orders, create alerts, receive notifications - almost everything that is
    available in Tradovate Trader.

    # How it's Structured

    Tradovate API can be split to two parts: a set of endpoints to query data and
    endpoints to modify (or submit) data. With rare exceptions, endpoint's paths consist of two parts:
    entity name and operations. For example, `/account/find` or `/order/cancelorder`.

    Tradovate API exposes data with fine granularity to avoid limiting how applications would like
    to compose them. It is a responsibility of client applications to request all needed
    dependencies and join them. We recommend to cache and reuse received data to avoid h


    # Query data

    Query operations should use GET HTTP method if called via REST API.

    ## By ID
    All entities that can be requested via API has a unique ID. `item` is an operation
    that can be used to get an entity by ID like `/<entity>/item` with `id` as a parameter.
    For example,

    ```
    curl -X GET --header 'Accept: application/json' 'https://demo-api-d.tradovate.com/v1/order/item?id=1000'
    ```

    Such methods are translated to .NET reference API in the form `apiInstance.Get<Entity>(id)`:

    ```c#
      Account result = apiInstance.GetAccount(1000);
    ```

    ## All entities at once
    The most entities can be loaded as all currently available at once with `list`
    operation without parameters. For example,

    ```
    curl -X GET --header 'Accept: application/json' 'https://demo-api-d.tradovate.com/v1/fill/list'
    ```
    ```c#
      List<Account> result = apiInstance.GetAllFills();
    ```

    ## Via master-details dependency
    `deps` operation is intended to load only dependent or owned entities for another entity.
    `masterid` parameter should be an ID of `master` entity. For example, all positions
    that owned by an account with ID=123:

    ```
    curl -X GET --header 'Accept: application/json' 'https://demo-api-d.tradovate.com/v1/position/deps?masterid=123'
    ```
    ```c#
      List<Position> result = apiInstance.GetOwnedPositions(accountId);
    ```

    ## By name
    Some entities like accounts, products, contracts, currencies have names. Here is
    an example of `find` operation with `name` parameter to find a product "ES":

    ```
    curl -X GET --header 'Accept: application/json' 'https://demo-api-d.tradovate.com/v1/product/find?name=ES'
    ```
    ```c#
      Product result = apiInstance.FindProduct("ES");
    ```

    ## Batch loading
    Tradovate API exposes endpoints to load multiple entities in batch. It is more efficiently to
    replace multiple `item` operations for the same entity with one `items` operation and pass `ids` parameter
    as comma-separated list of id. Note: a number of loaded entities can be less than a number of ids and
    a sequence of entities can be different than a sequence of ids.

    ```
    curl -X GET --header 'Accept: application/json' 'https://demo-api-d.tradovate.com/v1/contract/items?ids=840972%2C840944'
    ```
    ```c#
      var ids = new List<int?>();
      ...
      List<Contract> result = apiInstance.GetContracts(ids);
    ```

    Similar batching can be applied to `deps` operations: it is faster to run `ldeps`
    operation with `masterids` parameter.

    # Submit data

    For REST API, HTTP POST should be used to submit data. Data should be formatted as a valid JSON
    and passed in body.

    Naming convention of these operations do not have any general rule and a name of each
    operation reflects semantic behind it. For example, `/order/placeorder` is used to create an order and `/order/liquidateposition` - to cancel all orders and exit an specified position. C# sample is [here](https://github.com/tradovate/api/blob/master/csharp/services-api/docs/OrdersApi.md#placeorder)


    # Error handling
    Tradovate API uses two ways to pass errors to client side: via HTTP status codes
    or via custom errorText fields in some endpoints.

    HTTP codes are used mostly in situations when required data or an operation is
    unavailable (404) or inaccessible (401 or 403).

    errorText field in responses is used for business level rejects with textual explanation
    of reason.
- name: Market Data
  description: |
    # Overview

    Tradovate Market Data API provides an access to market data such as quotes, DOM, charts and histograms.

    The API uses JSON format to pass request parameters and response/data message payload.

    Request/response exchange and data messages are transmitted via [Tradovate WebSocket-based protocol](WebSockets.md).

    Demonstration C# sample of using Tradovate Market Data API is available in VS solution [here](csharp/samples).

    # Typical Use Case

    A typical scenario of using Market Data API consists of the following steps:

    - **Get an access token using credentials.**

      Client [obtains](Access.md#get-an-access-token-using-credentials) an [access token](Access.md#access-tokens) from Tradovate server.

    - **Open a WebSocket and authorize.**

      Client opens a WebSocket to Tradovate URL [https://md-api.tradovate.com](https://md-api.tradovate.com) and performs [authorization procedure](WebSockets.md#authorization).

    - **Create request parameters.**

      Request parameters are an object in JSON format.

      Each request requires `symbol` parameter that specifies the contract for which market data are requested. Contract can be specified either by contract symbol or by contract ID:

      ```js
      {
        "symbol":"ESM7" // Contract is specified by contract symbol
        ...
      }
      // or
      {
        "symbol":123456 // Contract is specified by contract ID
        ...
      }
      ```

      Requests may have additional parameters, which are described in the corresponding sections.

    - **Subscribe for market data.**

      Client creates request parameters, specifies request endpoint such as `md/subscribeQuote` and [sends the request](WebSockets.md#client-requests) to Tradovate server.

      Tradovate server sends back a [response message](WebSockets.md#response-message):

      - If a response has an error, client can perform [error handling](Conventions.md#error-handling).

      - If a response is successful, the corresponding subscription is activated and client is going to be provided by market data. Client is responsible to track the contracts for which subscriptions are activated (to properly unsubscribe ). Client can have a single subscription of each type (quotes, DOM, etc) per contract, so no explicit subscription ID is provided.

    - **Handle market data.**

      Market data arrive from Tradovate server to client asynchronously as [event messages](WebSockets.md#event-message) of `md` or `chart` types, for example:

      ```js
      {
        "e":"md",
        "d": {
          "quotes": [
            {
              "timestamp":"2017-04-13T04:59:06.588Z",
              "contractId":123456,
              "entries": {
                "Bid": { "price":18405, "size":7 },
                "TotalTradeVolume": { "size":4118 },
                "Offer": { "price":18410, "size":12 },
                "LowPrice": { "price":18355 },
                "Trade": { "price":18405, "size":2 },
                "OpenInterest": { "size":40702 },
                "OpeningPrice": { "price":18515 },
                "HighPrice": { "price":18520 },
                "SettlementPrice": { "price":18520 }
              }
            }
          ]
        }
      }
      ```

    - **Unsubscribe from market data.**

      Client creates request parameters, specifies request endpoint such as `md/unsubscribeQuote` and [sends the request](/#tag/WebSockets) to Tradovate server.

      Tradovate server sends back a [response message](/#tag/WebSockets):

      - If a response has an error, client can perform [error handling](/#tag/Conventions).

      - If a response is successful, the corresponding subscription is deactivated and no market data are provided to client anymore.

    - **Close WebSocket.**

      Client closes a WebSocket. When WebSocket is closed, all active subscriptions are deactivated.


    # Request Reference

    ## Subscribe Quote

    **Endpoint**: `md/subscribeQuote`

    **Parameters**:

    ```js
    { "symbol": "ESM7" | 123456 }
    ```

    **Data message**

    ```js
    {
      "e":"md",
      "d": {
        "quotes": [ // "quotes" may contain multiple quote objects
          {
            "timestamp":"2017-04-13T04:59:06.588Z",
            "contractId":123456, // ID of the quote contract
            "entries": {
              // Any of entries may absent if no data available for them.
              // Either "price" or "size" field (but not both) may absent in any entries.
              "Bid": { "price":18405, "size":7 },
              "TotalTradeVolume": { "price":18405, "size":7 },
              "Offer": { "price":18410, "size":12 },
              "LowPrice": { "price":18405, "size":7 },
              "Trade": { "price":18405, "size":2 },
              "OpenInterest": { "price":18405, "size":7 },
              "OpeningPrice": { "price":18405, "size":7 },
              "HighPrice": { "price":18405, "size":7 },
              "SettlementPrice": { "price":18405, "size":7 },
              "EmptyBook": { "price":18405, "size":7 }
            }
          }
        ]
      }
    }
    ```

    ## Unsubscribe Quote

    **Endpoint**: `md/unsubscribeQuote`

    **Parameters**:

    ```js
    { "symbol": "ESM7" | 123456 }
    ```


    ## Subscribe DOM

    **Endpoint**: `md/subscribeDOM`

    **Parameters**:

    ```js
    { "symbol": "ESM7" | 123456 }
    ```

    **Data message**

    ```js
    {
      "e":"md",
      "d": {
        "doms": [ // "doms" may contain multiple DOM objects
          {
            "contractId":123456, // ID of the DOM contract
            "timestamp":"2017-04-13T11:33:57.488Z",
            "bids": [ // Actual depth of "bids" may varies depending on available data
              {"price":2335.25,"size":33},
              ...
              {"price":2333,"size":758}
            ],
            "offers": [ // Actual depth of "offers" may varies depending on available data
              {"price":2335.5,"size":255},
              ...
              {"price":2337.75,"size":466}
            ]
          }
        ]
      }
    }
    ```


    ## Unsubscribe DOM

    **Endpoint**: `md/unsubscribeDOM`

    **Parameters**:

    ```js
    { "symbol": "ESM7" | 123456 }
    ```


    ## Subscribe Histogram

    **Endpoint**: `md/subscribeHistogram`

    **Parameters**:

    ```js
    { "symbol": "ESM7" | 123456 }
    ```

    **Data message**

    ```js
    {
      "e":"md",
      "d": {
        "histograms": [ // "histograms" may contain multiple histogram objects
          {
            "contractId":123456, // ID of the histogram contract
            "timestamp":"2017-04-13T11:33:57.412Z",
            "tradeDate": {
              "year":2017,
              "month":4,
              "day":13
            },
            "base":2338.75,
            "items": { // Actual number of histogram items may depend on data
              "-14":5906,
              ...
              "2":1234,
            },
            "refresh":false
          }
        ]
      }
    }
    ```


    ## Unsubscribe Histogram

    **Endpoint**: `md/unsubscribeHistogram`

    **Parameters**:

    ```js
    { "symbol": "ESM7" | 123456 }
    ```



    ## Get Chart

    **Description**: Client may have multiple charts for the same contract, so response for `md/getChart` request contains subscription ID to properly cancel real-time chart subscription.

    **Endpoint**: `md/getChart`

    **Parameters**:

    ```js
    {
      "symbol":"ESM7" | 123456,
      "chartDescription": {
        "underlyingType":"MinuteBar", // Available values: Tick, DailyBar, MinuteBar, Custom, DOM
        "elementSize":15,
        "elementSizeUnit":"UnderlyingUnits", // Available values: Volume, Range, UnderlyingUnits, Renko, MomentumRange, PointAndFigure, OFARange
        "withHistogram": true | false
      },
      "timeRange": {
        // All fields in "timeRange" are optional, but at least anyone is required
        "closestTimestamp":"2017-04-13T11:33Z",
        "closestTickId":123,
        "asFarAsTimestamp":"2017-04-13T11:33Z",
        "asMuchAsElements":66
      },
    }
    ```

    **Response**

    A response for `md/getChart` request contains two subscription ID, `historicalId` and `realtimeId`. Client needs to store `realtimeId` value to properly cancel real-time chart subscription via `md/cancelChart` request.

    ```js
    {
      "s":200,
      "i":13,
      "d":{
        "historicalId":32,
        "realtimeId":31
      }
    }
    ```

    **Data message**

    ```js
    {
      "e":"chart",
      "d": {
        "charts": [ // "charts" may contain multiple chart objects
          {
            "id":9, // "id" matches either historicalId or realtimeId values from response
            "td":20170413, // Trade date as a number with value YYYYMMDD
            "bars": [ // "bars" may contain multiple bar objects
              {
                "timestamp":"2017-04-13T11:00:00.000Z",
                "open":2334.25,
                "high":2334.5,
                "low":2333,
                "close":2333.75,
                "upVolume":4712,
                "downVolume":201,
                "upTicks":1333,
                "downTicks":82,
                "bidVolume":2857,
                "offerVolume":2056
              }
            ]
          }
        ]
      }
    }
    ```

    ## Cancel Chart

    **Endpoint**: `md/cancelChart`

    **Parameters**:

    ```js
    {
      "subscriptionId": 123456 // The value of historical chart subscription ID from `md/getChart` response
    }
    ```
- name: Using Tick Charts
  description: "# Overview\n\nThis document provides an example of processing of data
    stream messages for tick chart request for purpose of generating a tick stream.\n\nTradovate
    server provides specific format of data stream messages for the case of 1 tick
    chart requesting, but requesting tick charts is general and described [here](/#tag/MarketData).\n\n#
    Requesting tick charts\n\nTo request tick charts, 1 tick parameters must be specified
    in the request, for example like this:\n\n```js\n{\n  \"symbol\": \"ESU9\",\n
    \ \"chartDescription\": {\n    \"underlyingType\": \"Tick\",\n    \"elementSize\":
    1,\n    \"elementSizeUnit\": \"UnderlyingUnits\"\n  },\n  \"timeRange\": {\n    ...\n
    \ }\n}\n```\n\nThen client calls regular `md/getChart` endpoint and passes the
    request to it. Tradovate server responds with regular response message with subscription
    ID, which client keeps to cancel the subscription.\n\n# Data stream messages\n\nTypical
    data stream message looks like the following:\n\n```js\n{\n    \"charts\": [                     //
    Array of packets.\n        {\n            \"id\": 16335,            // Subscription
    ID, the same as historical/real-time subscription IDs from request response.\n
    \           \"s\": \"db\",              // Source of packet data.\n            \"td\":
    20190718,         // Trade date YYYYMMDD.\n            \"bp\": 11917,            //
    Base price of the packet (integer number of contract tick sizes).\n                                    //
    Tick prices are calculated as relative from this one.\n            \"bt\": 1563421179735,
    \   // Base timestamp of the packet.\n                                    // Tick
    timestamps are calculated as relative from this value.\n            \"ts\": 0.25,
    \            // Tick size of the contract for which the tick chart is requested.\n
    \           \"tks\": [                // Array of ticks of this packet.\n                {\n
    \                   \"t\": 0,         // Tick relative timestamp.\n                                    //
    Actual tick timestamp is packet.bt + tick.t\n                    \"p\": 0,         //
    Tick relative price (in contract tick sizes).\n                                    //
    Actual tick price is packet.bp + tick.p\n                    \"s\": 3,         //
    Tick size (seems more proper name should be tick volume).\n                                    //
    Please don't confuse with contract tick size (packet.ts).\n                    \"b\":
    -1,        // Bid relative price (optional).\n                                    //
    Actual bid price is packet.bp + tick.b\n                    \"a\": 0,         //
    Ask relative price (optional).\n                                    // Actual
    ask price is packet.bp + tick.a\n                    \"bs\": 122,      // Bid
    size (optional).\n                    \"as\": 28,       // Ask size (optional).\n
    \                   \"id\": 11768401  // Tick ID\n                },\n                ...\n
    \           ]\n        },\n        // Multiple packets are possible...\n        {\n
    \           \"id\": 16335,\n            eoh: true               // End of history
    flag.\n                                    // If the request time range assumes
    historical data,\n                                    // this flag indicates that
    historical ticks are loaded and\n                                    // further
    packets will contain real-time ticks.\n        }\n    ]\n};\n```\n\n## Generating
    tick stream from data stream messages\n\nThe following code snippet is an example
    how to process data stream messages and calculate actual ticks for client consuming.\n\nThe
    function takes a data stream message and converts its packets into a list of actual
    ticks. It is assumed that such function is called as a handler of data stream
    message events. Also, client is responsible to keep some overall set of actual
    ticks with optional filtering/sorting capabilities etc.\n\nActual order of ticks
    in a packet may not match tick timestamp order, so client should support ordering
    by tick timestamps to have proper chronologic view.  \n\n```js\nfunction processTickChartMessage(msg)
    {\n    const result = [];\n    if (msg.charts && msg.charts.length) {\n        for
    (let i = 0; i < msg.charts.length; ++i) {\n            const packet = msg.charts[i];\n
    \           if (packet.eoh) {\n                // Historical ticks are loaded.\n
    \           }\n            else if (packet.tks && packet.tks.length) {\n                for
    (let j = 0; j < packet.tks.length; ++j) {\n                    const tick = packet.tks[j];\n\n
    \                   const timestamp = packet.bt + tick.t;   // Actual tick timestamp\n
    \                   const price = packet.bp + tick.p;       // Actual tick price\n\n
    \                   const bid = tick.bs && (packet.bp + tick.b);    // Actual
    bid price (if bid size defined)\n                    const ask = tick.as && (packet.bp
    + tick.a);    // Actual ask price (if ask size defined)\n\n                    result.push({\n
    \                       id: tick.id,\n                        timestamp: new Date(timestamp),\n\n
    \                       price: price * packet.ts,           // Tick price as contract
    price\n                        size: tick.s,                       // Tick size
    (tick volume)\n\n                        bidPrice: bid && (bid * packet.ts), //
    Bid price as contract price\n                        bidSize: tick.bs,\n\n                        askPrice:
    ask && (ask * packet.ts), // Ask price as contract price\n                        askSize:
    tick.as,\n                    });\n                }\n            }\n        }\n
    \   }\n    return result;\n}\n\n```\n"
- name: WebSockets
  description: "# Overview\n\nThe current version of our WebSocket-based protocol
    is inherited from [SockJS protocol](http://sockjs.github.io/sockjs-protocol/sockjs-protocol-0.3.3.html#section-42)
    that was used in earlier versions.\n\n# URL\n\nURL for Websocket should be composed
    as wss://[API].tradovate.com/v1/websocket\nPossible values for [API] can be found
    [here](/#tag/Access).\n\n# Server frames\n\nThe server can send the next type
    of frames (from SockJS documentation):\n\n```\no - Open frame. Every time a new
    session is established, the server must immediately send the open frame. This
    is required, as some protocols (mostly polling) can't distinguish between a properly
    established connection and a broken one - we must convince the client that it
    is indeed a valid url and it can be expecting further messages in the future on
    that url.\n\nh - Heartbeat frame. Most loadbalancers have arbitrary timeouts on
    connections. In order to keep connections from breaking, the server must send
    a heartbeat frame every now and then. The typical delay is 25 seconds and should
    be configurable.\n\na - Array of json-encoded messages. For example: a[\"message\"].\n\nc
    - Close frame. This frame is send to the browser every time the client asks for
    data on closed connection. This may happen multiple times. Close frame contains
    a code and a string explaining a reason of closure, like: c[3000,\"Go away!\"].\n```\n\nTradovate
    uses 'a' frames as a backbone for own message protocol.\n\nLike these two frames:\n```\na[{\"s\":200,\"i\":23,\"d\":{\"id\":65543,\"name\":\"CLZ6\",\"contractMaturityId\":6727}}]\na[{\"e\":\"props\",\"d\":{\"entityType\":\"order\",\"eventType\":\"Created\",\"entity\":{\"id\":210518,\"accountId\":25,\"contractId\":560901,\"timestamp\":\"2016-11-04T00:02:36.626Z\",\"action\":\"Sell\",\"ordStatus\":\"PendingNew\",\"admin\":false}}}]\n```\n\nEach
    item of the array is an JSON object that represents a message.\nThere are two
    categories of messages: server events and responses for client request.\n\n##
    Event message\n\nAn event message has the next structure:\n\n```\n{\n  \"e\":\"props\",\n
    \ \"d\":{\n    \"entityType\":\"order\",\n    \"eventType\":\"Created\",\n    \"entity\":{\n
    \     \"id\":210518,\n      \"accountId\":25,\n      \"contractId\":560901,\n
    \     \"timestamp\":\"2016-11-04T00:02:36.626Z\",\n      \"action\":\"Sell\",\n
    \     \"ordStatus\":\"PendingNew\",\n      \"admin\":false\n    }\n  }\n}\n```\n\n\"e\"
    field specifies an event kind:\n- \"props\": this is a notification that some
    entity was created, updated or deleted. \"d\" field specifies details of the event
    with the next structure:\n  * \"entityType\" field\n  * \"entity\" field. JSON
    structure of object (or array of objects) specified in this field is identical
    to JSON of entity that accessible via corresponding REST API request like *entityType*/item.
    For example, if entityType=account, JSON can be found in the [response specification
    of account/item call](/#operation/accountItem)\n  * \"eventType\" field with options
    \"Created\", \"Updated\" or \"Deleted\"\n- \"shutdown\": a notification before
    graceful shutdown of connection. \"d\" field specifies details:\n  * \"reasonCode\"
    field with options \"Maintenance\", \"ConnectionQuotaReached\", \"IPQuotaReached\"\n
    \ * \"reason\" field is optional and may contain a readable explanation\n- \"md\"
    and \"chart\": these notifications are used by market data feed services only,
    the description of \"d\" field is [here](/#tag/MarketData)\n- \"clock: Market
    Replay clock synchronization message (see Market Replay below)\n\n## Response
    message\n\nA response message is intended to mimic REST API responses and has
    the next structure:\n\n```\n{\n  \"i\":26,\n  \"s\":200,\n  \"d\":{\n    \"id\":478866,\n
    \   \"name\":\"6EZ6\",\n    \"contractMaturityId\":23574\n  }\n}\n```\n- \"i\"
    field is a id of corresponding client request (see \"Client requests\" below)\n-
    \"s\" field is a HTTP status code of response\n- \"d\" field is a content of response.
    If HTTP status is 2xx, this field contains JSON response as defined in Swagger
    specification of the corresponding request. Otherwise, \"d\" is a string representation
    of error text.\n\n# Client requests\n\nSockJS doesn't define framing for client
    requests and we use our message protocol as regular text frames.\n\nEach frame
    sent by client contains exactly one request. The frame consists of four fields:\n-
    an endpoint name as defined in [Swagger specification](/)\n- a unique integer
    id of the request. The id should be unique in the scope of the current connection.
    This id will be used as a reference by server in the response messages (see \"Response
    message\" above)\n- an optional field with parameters that identical to query
    parameters of REST API\n- an optional field that is identical to a body parameter
    of REST API\n\nFields are separated by \\n (\"new line\") character.\n\nAn example
    of request without query and body\n\n```\nexecutionReport/list\n4\n\n```\n\nAn
    example of request with a query parameter\n\n```\ntradingPermission/ldeps\n8\nmasterids=1\n```\n\nAn
    example of request with a body\n\n```\ncontract/rollcontract\n33\n\n{\"name\":\"YMZ6\",\"forward\":true,\"ifExpired\":true}\n```\n\n##
    Authorization\n\nBecause WebSocket is a permanent connection, it is enough to
    authorize the connection just once.\nWe use a special request with \"authorize\"
    endpoint and an access token in body.\n\n```\nauthorize\n2\n\nuST01MhJMF3cR3lCs-gdQ9W0AzomYLaqsWcZ_GYgAspPRf-ZS-Wb7q3sW3pUafTm90ba4\n```\n\nSuccessful
    response for it should have status = 200 like that:\n\n```\na[{\"s\":200,\"i\":2}]\n```\n\n##
    Market Replay\nMarket Replay service follows the same protocols for trading and
    market data as regular Tradovate services. \n\nHostnames: replay-api-d.tradovate.com
    (development environment) and replay-api.tradovate.com (production environment)\n\nThe
    client application should set initial parameters for replay session right after
    successful authorization. The request should be formatted like any other client
    request. The endpoint name of the request should be `replay/initializeclock`.
    Parameters:\n* `startTimestamp`: start time of the session\n* `speed`: speed of
    replaying in percents. The valid range is 0-400 \n* `initialBalance`: a dollar
    amount of replay account. The account will be created automatically with the specified
    cash balance and will be discarded at the end of the replay session.\n\nExample:\n\n```\nreplay/initializeclock\n3\n\n{\"startTimestamp\":\"2019-08-26T16:43:00.000Z\",\"speed\":20,\"initialBalance\":51000}\n```\n\nThe
    response will indicate if a session started successfully:\n\n```\na[{\"s\":200,\"i\":3,\"d\":{\"ok\":true}}]\n```\n\nThere
    is allowed only one replay session per user. An attempt to initialize a new session
    will reset the currently running one. Multiple connections can join to the same
    session. A lack of initialization request is treated as a joining to existing
    one.\n\nTo maintain the clock synchronization between the server-side 'replay'
    clock and client one, the server pushes periodical clock synch event messages
    like that:\n\n```\na[{\"e\":\"clock\",\"d\":\"{\\\"t\\\":\\\"2019-08-26T16:43:08.599Z\\\",\\\"s\\\":20}\"}]\n```\n\n`d`
    field contains a text representation of JSON entity with the next fields:\n- `t`:
    the current replay timestamp\n- `s`: the current replay speed\n\nThe client app
    can control the speed via `replay/changespeed` request. The request should include
    `speed` parameter with a range from 0 to 400 (in percents).\n\nExample:\n```\nreplay/changespeed\n49\n\n{\"speed\":100}\n```\n\nThe
    server can pause the session after some prolong period of time. In this case,
    the client will continue to receive clock synch messages with `speed` field equals
    to 0. The client app can unpause it via `replay/changespeed` request.\n\nThe session
    is discarded automatically when there are no connections associated with it.\n\nDepending
    on the customer's entitlements, Market Replay functionality can be limited or
    disallowed at all. To check if a picked date/time is permitted for the user, the
    client app can use the next REST API call [replay/checkReplaySession](/#operation/checkReplaySession)
    before initiating replay connection.\n\n\n## Client heartbeats\n\nEven WebSockets
    have built-in pings, a client is responsible to send heartbeats every 2.5 seconds
    to avoid closing by server due to inactivity. Heartbeat should be a frame with
    \"[]\" (empty array) text.\n\n## Reference implementation\n\n[Here](csharp/websocket/src/Tradovate.WebSocket/Client/WebSocketClient.cs)
    is a reference C# implementation.\n"
x-traitTag: true
x-tagGroups:
- name: Guides
  tags:
  - Access
  - Conventions
  - WebSockets
  - Market Data
  - Using Tick Charts
- name: API
  tags:
  - Authentication
  - ContractLibrary
  - Orders
  - Positions
  - Accounting
  - Risks
  - Fees
  - Prices
  - Alerts
  - Configuration
  - Users
  - Chat
x-logo:
  url: https://cdn-d.tradovate.com/tradovate/img/icons/iphone-retina.png
  backgroundColor: "#FFFFFF"
  altText: Tradovate
