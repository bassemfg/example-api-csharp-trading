/* 
 * Tradovate API
 *
 * Tradovate API provides an access to the complete set of robust Tradovate functionality.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using Tradovate.Services.Api;
using Tradovate.Services.Model;
using Tradovate.Services.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace Tradovate.Services.Test
{
    /// <summary>
    ///  Class for testing ContactInfo
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class ContactInfoTests
    {
        // TODO uncomment below to declare an instance variable for ContactInfo
        //private ContactInfo instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of ContactInfo
            //instance = new ContactInfo();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ContactInfo
        /// </summary>
        [Test]
        public void ContactInfoInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" ContactInfo
            //Assert.IsInstanceOfType<ContactInfo> (instance, "variable 'instance' is a ContactInfo");
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'UserId'
        /// </summary>
        [Test]
        public void UserIdTest()
        {
            // TODO unit test for the property 'UserId'
        }
        /// <summary>
        /// Test the property 'FirstName'
        /// </summary>
        [Test]
        public void FirstNameTest()
        {
            // TODO unit test for the property 'FirstName'
        }
        /// <summary>
        /// Test the property 'LastName'
        /// </summary>
        [Test]
        public void LastNameTest()
        {
            // TODO unit test for the property 'LastName'
        }
        /// <summary>
        /// Test the property 'StreetAddress1'
        /// </summary>
        [Test]
        public void StreetAddress1Test()
        {
            // TODO unit test for the property 'StreetAddress1'
        }
        /// <summary>
        /// Test the property 'StreetAddress2'
        /// </summary>
        [Test]
        public void StreetAddress2Test()
        {
            // TODO unit test for the property 'StreetAddress2'
        }
        /// <summary>
        /// Test the property 'City'
        /// </summary>
        [Test]
        public void CityTest()
        {
            // TODO unit test for the property 'City'
        }
        /// <summary>
        /// Test the property 'State'
        /// </summary>
        [Test]
        public void StateTest()
        {
            // TODO unit test for the property 'State'
        }
        /// <summary>
        /// Test the property 'PostCode'
        /// </summary>
        [Test]
        public void PostCodeTest()
        {
            // TODO unit test for the property 'PostCode'
        }
        /// <summary>
        /// Test the property 'Country'
        /// </summary>
        [Test]
        public void CountryTest()
        {
            // TODO unit test for the property 'Country'
        }
        /// <summary>
        /// Test the property 'Phone'
        /// </summary>
        [Test]
        public void PhoneTest()
        {
            // TODO unit test for the property 'Phone'
        }
        /// <summary>
        /// Test the property 'MailingIsDifferent'
        /// </summary>
        [Test]
        public void MailingIsDifferentTest()
        {
            // TODO unit test for the property 'MailingIsDifferent'
        }
        /// <summary>
        /// Test the property 'MailingStreetAddress1'
        /// </summary>
        [Test]
        public void MailingStreetAddress1Test()
        {
            // TODO unit test for the property 'MailingStreetAddress1'
        }
        /// <summary>
        /// Test the property 'MailingStreetAddress2'
        /// </summary>
        [Test]
        public void MailingStreetAddress2Test()
        {
            // TODO unit test for the property 'MailingStreetAddress2'
        }
        /// <summary>
        /// Test the property 'MailingCity'
        /// </summary>
        [Test]
        public void MailingCityTest()
        {
            // TODO unit test for the property 'MailingCity'
        }
        /// <summary>
        /// Test the property 'MailingState'
        /// </summary>
        [Test]
        public void MailingStateTest()
        {
            // TODO unit test for the property 'MailingState'
        }
        /// <summary>
        /// Test the property 'MailingPostCode'
        /// </summary>
        [Test]
        public void MailingPostCodeTest()
        {
            // TODO unit test for the property 'MailingPostCode'
        }
        /// <summary>
        /// Test the property 'MailingCountry'
        /// </summary>
        [Test]
        public void MailingCountryTest()
        {
            // TODO unit test for the property 'MailingCountry'
        }

    }

}
