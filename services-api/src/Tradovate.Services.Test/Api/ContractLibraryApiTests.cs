/* 
 * Tradovate API
 *
 * Tradovate API provides an access to the complete set of robust Tradovate functionality.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Tradovate.Services.Client;
using Tradovate.Services.Api;
using Tradovate.Services.Model;

namespace Tradovate.Services.Test
{
    /// <summary>
    ///  Class for testing ContractLibraryApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ContractLibraryApiTests
    {
        private ContractLibraryApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ContractLibraryApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ContractLibraryApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ContractLibraryApi
            //Assert.IsInstanceOfType(typeof(ContractLibraryApi), instance, "instance is a ContractLibraryApi");
        }

        /// <summary>
        /// Test FindContract
        /// </summary>
        [Test]
        public void FindContractTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.FindContract(name);
            //Assert.IsInstanceOf<Contract> (response, "response is Contract");
        }
        /// <summary>
        /// Test FindContractGroup
        /// </summary>
        [Test]
        public void FindContractGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.FindContractGroup(name);
            //Assert.IsInstanceOf<ContractGroup> (response, "response is ContractGroup");
        }
        /// <summary>
        /// Test FindCurrency
        /// </summary>
        [Test]
        public void FindCurrencyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.FindCurrency(name);
            //Assert.IsInstanceOf<Currency> (response, "response is Currency");
        }
        /// <summary>
        /// Test FindExchange
        /// </summary>
        [Test]
        public void FindExchangeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.FindExchange(name);
            //Assert.IsInstanceOf<Exchange> (response, "response is Exchange");
        }
        /// <summary>
        /// Test FindProduct
        /// </summary>
        [Test]
        public void FindProductTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.FindProduct(name);
            //Assert.IsInstanceOf<Product> (response, "response is Product");
        }
        /// <summary>
        /// Test GetAllContractGroups
        /// </summary>
        [Test]
        public void GetAllContractGroupsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllContractGroups();
            //Assert.IsInstanceOf<List<ContractGroup>> (response, "response is List<ContractGroup>");
        }
        /// <summary>
        /// Test GetAllCurrencies
        /// </summary>
        [Test]
        public void GetAllCurrenciesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllCurrencies();
            //Assert.IsInstanceOf<List<Currency>> (response, "response is List<Currency>");
        }
        /// <summary>
        /// Test GetAllCurrencyRates
        /// </summary>
        [Test]
        public void GetAllCurrencyRatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllCurrencyRates();
            //Assert.IsInstanceOf<List<CurrencyRate>> (response, "response is List<CurrencyRate>");
        }
        /// <summary>
        /// Test GetAllExchanges
        /// </summary>
        [Test]
        public void GetAllExchangesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllExchanges();
            //Assert.IsInstanceOf<List<Exchange>> (response, "response is List<Exchange>");
        }
        /// <summary>
        /// Test GetAllProducts
        /// </summary>
        [Test]
        public void GetAllProductsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllProducts();
            //Assert.IsInstanceOf<List<Product>> (response, "response is List<Product>");
        }
        /// <summary>
        /// Test GetContract
        /// </summary>
        [Test]
        public void GetContractTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetContract(id);
            //Assert.IsInstanceOf<Contract> (response, "response is Contract");
        }
        /// <summary>
        /// Test GetContractGroup
        /// </summary>
        [Test]
        public void GetContractGroupTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetContractGroup(id);
            //Assert.IsInstanceOf<ContractGroup> (response, "response is ContractGroup");
        }
        /// <summary>
        /// Test GetContractGroups
        /// </summary>
        [Test]
        public void GetContractGroupsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetContractGroups(ids);
            //Assert.IsInstanceOf<List<ContractGroup>> (response, "response is List<ContractGroup>");
        }
        /// <summary>
        /// Test GetContractMaturities
        /// </summary>
        [Test]
        public void GetContractMaturitiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetContractMaturities(ids);
            //Assert.IsInstanceOf<List<ContractMaturity>> (response, "response is List<ContractMaturity>");
        }
        /// <summary>
        /// Test GetContractMaturity
        /// </summary>
        [Test]
        public void GetContractMaturityTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetContractMaturity(id);
            //Assert.IsInstanceOf<ContractMaturity> (response, "response is ContractMaturity");
        }
        /// <summary>
        /// Test GetContracts
        /// </summary>
        [Test]
        public void GetContractsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetContracts(ids);
            //Assert.IsInstanceOf<List<Contract>> (response, "response is List<Contract>");
        }
        /// <summary>
        /// Test GetCurrencies
        /// </summary>
        [Test]
        public void GetCurrenciesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetCurrencies(ids);
            //Assert.IsInstanceOf<List<Currency>> (response, "response is List<Currency>");
        }
        /// <summary>
        /// Test GetCurrency
        /// </summary>
        [Test]
        public void GetCurrencyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetCurrency(id);
            //Assert.IsInstanceOf<Currency> (response, "response is Currency");
        }
        /// <summary>
        /// Test GetCurrencyRate
        /// </summary>
        [Test]
        public void GetCurrencyRateTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetCurrencyRate(id);
            //Assert.IsInstanceOf<CurrencyRate> (response, "response is CurrencyRate");
        }
        /// <summary>
        /// Test GetCurrencyRates
        /// </summary>
        [Test]
        public void GetCurrencyRatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetCurrencyRates(ids);
            //Assert.IsInstanceOf<List<CurrencyRate>> (response, "response is List<CurrencyRate>");
        }
        /// <summary>
        /// Test GetExchange
        /// </summary>
        [Test]
        public void GetExchangeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetExchange(id);
            //Assert.IsInstanceOf<Exchange> (response, "response is Exchange");
        }
        /// <summary>
        /// Test GetExchanges
        /// </summary>
        [Test]
        public void GetExchangesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetExchanges(ids);
            //Assert.IsInstanceOf<List<Exchange>> (response, "response is List<Exchange>");
        }
        /// <summary>
        /// Test GetOwnedContractMaturities
        /// </summary>
        [Test]
        public void GetOwnedContractMaturitiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedContractMaturities(masterid);
            //Assert.IsInstanceOf<List<ContractMaturity>> (response, "response is List<ContractMaturity>");
        }
        /// <summary>
        /// Test GetOwnedContractMaturitiesBatch
        /// </summary>
        [Test]
        public void GetOwnedContractMaturitiesBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedContractMaturitiesBatch(masterids);
            //Assert.IsInstanceOf<List<ContractMaturity>> (response, "response is List<ContractMaturity>");
        }
        /// <summary>
        /// Test GetOwnedContracts
        /// </summary>
        [Test]
        public void GetOwnedContractsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedContracts(masterid);
            //Assert.IsInstanceOf<List<Contract>> (response, "response is List<Contract>");
        }
        /// <summary>
        /// Test GetOwnedContractsBatch
        /// </summary>
        [Test]
        public void GetOwnedContractsBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedContractsBatch(masterids);
            //Assert.IsInstanceOf<List<Contract>> (response, "response is List<Contract>");
        }
        /// <summary>
        /// Test GetOwnedCurrencyRates
        /// </summary>
        [Test]
        public void GetOwnedCurrencyRatesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedCurrencyRates(masterid);
            //Assert.IsInstanceOf<List<CurrencyRate>> (response, "response is List<CurrencyRate>");
        }
        /// <summary>
        /// Test GetOwnedCurrencyRatesBatch
        /// </summary>
        [Test]
        public void GetOwnedCurrencyRatesBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedCurrencyRatesBatch(masterids);
            //Assert.IsInstanceOf<List<CurrencyRate>> (response, "response is List<CurrencyRate>");
        }
        /// <summary>
        /// Test GetOwnedProductSessions
        /// </summary>
        [Test]
        public void GetOwnedProductSessionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedProductSessions(masterid);
            //Assert.IsInstanceOf<List<ProductSession>> (response, "response is List<ProductSession>");
        }
        /// <summary>
        /// Test GetOwnedProductSessionsBatch
        /// </summary>
        [Test]
        public void GetOwnedProductSessionsBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedProductSessionsBatch(masterids);
            //Assert.IsInstanceOf<List<ProductSession>> (response, "response is List<ProductSession>");
        }
        /// <summary>
        /// Test GetOwnedProducts
        /// </summary>
        [Test]
        public void GetOwnedProductsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedProducts(masterid);
            //Assert.IsInstanceOf<List<Product>> (response, "response is List<Product>");
        }
        /// <summary>
        /// Test GetOwnedProductsBatch
        /// </summary>
        [Test]
        public void GetOwnedProductsBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedProductsBatch(masterids);
            //Assert.IsInstanceOf<List<Product>> (response, "response is List<Product>");
        }
        /// <summary>
        /// Test GetProduct
        /// </summary>
        [Test]
        public void GetProductTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetProduct(id);
            //Assert.IsInstanceOf<Product> (response, "response is Product");
        }
        /// <summary>
        /// Test GetProductFeeParams
        /// </summary>
        [Test]
        public void GetProductFeeParamsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetProductFeeParams body = null;
            //var response = instance.GetProductFeeParams(body);
            //Assert.IsInstanceOf<ProductFeeParamsResponse> (response, "response is ProductFeeParamsResponse");
        }
        /// <summary>
        /// Test GetProductSession
        /// </summary>
        [Test]
        public void GetProductSessionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetProductSession(id);
            //Assert.IsInstanceOf<ProductSession> (response, "response is ProductSession");
        }
        /// <summary>
        /// Test GetProductSessions
        /// </summary>
        [Test]
        public void GetProductSessionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetProductSessions(ids);
            //Assert.IsInstanceOf<List<ProductSession>> (response, "response is List<ProductSession>");
        }
        /// <summary>
        /// Test GetProducts
        /// </summary>
        [Test]
        public void GetProductsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetProducts(ids);
            //Assert.IsInstanceOf<List<Product>> (response, "response is List<Product>");
        }
        /// <summary>
        /// Test GetSpreadDefinition
        /// </summary>
        [Test]
        public void GetSpreadDefinitionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetSpreadDefinition(id);
            //Assert.IsInstanceOf<SpreadDefinition> (response, "response is SpreadDefinition");
        }
        /// <summary>
        /// Test GetSpreadDefinitions
        /// </summary>
        [Test]
        public void GetSpreadDefinitionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetSpreadDefinitions(ids);
            //Assert.IsInstanceOf<List<SpreadDefinition>> (response, "response is List<SpreadDefinition>");
        }
        /// <summary>
        /// Test RollContract
        /// </summary>
        [Test]
        public void RollContractTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RollContract body = null;
            //var response = instance.RollContract(body);
            //Assert.IsInstanceOf<RollContractResponse> (response, "response is RollContractResponse");
        }
        /// <summary>
        /// Test SuggestContractGroups
        /// </summary>
        [Test]
        public void SuggestContractGroupsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string t = null;
            //int? l = null;
            //var response = instance.SuggestContractGroups(t, l);
            //Assert.IsInstanceOf<List<ContractGroup>> (response, "response is List<ContractGroup>");
        }
        /// <summary>
        /// Test SuggestContracts
        /// </summary>
        [Test]
        public void SuggestContractsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string t = null;
            //int? l = null;
            //var response = instance.SuggestContracts(t, l);
            //Assert.IsInstanceOf<List<Contract>> (response, "response is List<Contract>");
        }
        /// <summary>
        /// Test SuggestCurrencies
        /// </summary>
        [Test]
        public void SuggestCurrenciesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string t = null;
            //int? l = null;
            //var response = instance.SuggestCurrencies(t, l);
            //Assert.IsInstanceOf<List<Currency>> (response, "response is List<Currency>");
        }
        /// <summary>
        /// Test SuggestExchanges
        /// </summary>
        [Test]
        public void SuggestExchangesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string t = null;
            //int? l = null;
            //var response = instance.SuggestExchanges(t, l);
            //Assert.IsInstanceOf<List<Exchange>> (response, "response is List<Exchange>");
        }
        /// <summary>
        /// Test SuggestProducts
        /// </summary>
        [Test]
        public void SuggestProductsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string t = null;
            //int? l = null;
            //var response = instance.SuggestProducts(t, l);
            //Assert.IsInstanceOf<List<Product>> (response, "response is List<Product>");
        }
    }

}
