/* 
 * Tradovate API
 *
 * Tradovate API provides an access to the complete set of robust Tradovate functionality.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Tradovate.Services.Client;
using Tradovate.Services.Api;
using Tradovate.Services.Model;

namespace Tradovate.Services.Test
{
    /// <summary>
    ///  Class for testing ConfigurationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ConfigurationApiTests
    {
        private ConfigurationApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ConfigurationApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ConfigurationApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ConfigurationApi
            //Assert.IsInstanceOfType(typeof(ConfigurationApi), instance, "instance is a ConfigurationApi");
        }

        /// <summary>
        /// Test FindAdminAlert
        /// </summary>
        [Test]
        public void FindAdminAlertTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.FindAdminAlert(name);
            //Assert.IsInstanceOf<AdminAlert> (response, "response is AdminAlert");
        }
        /// <summary>
        /// Test FindClearingHouse
        /// </summary>
        [Test]
        public void FindClearingHouseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.FindClearingHouse(name);
            //Assert.IsInstanceOf<ClearingHouse> (response, "response is ClearingHouse");
        }
        /// <summary>
        /// Test FindOrderStrategyType
        /// </summary>
        [Test]
        public void FindOrderStrategyTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.FindOrderStrategyType(name);
            //Assert.IsInstanceOf<OrderStrategyType> (response, "response is OrderStrategyType");
        }
        /// <summary>
        /// Test FindProperty
        /// </summary>
        [Test]
        public void FindPropertyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.FindProperty(name);
            //Assert.IsInstanceOf<Property> (response, "response is Property");
        }
        /// <summary>
        /// Test GetAdminAlert
        /// </summary>
        [Test]
        public void GetAdminAlertTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetAdminAlert(id);
            //Assert.IsInstanceOf<AdminAlert> (response, "response is AdminAlert");
        }
        /// <summary>
        /// Test GetAdminAlerts
        /// </summary>
        [Test]
        public void GetAdminAlertsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetAdminAlerts(ids);
            //Assert.IsInstanceOf<List<AdminAlert>> (response, "response is List<AdminAlert>");
        }
        /// <summary>
        /// Test GetAllAdminAlerts
        /// </summary>
        [Test]
        public void GetAllAdminAlertsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllAdminAlerts();
            //Assert.IsInstanceOf<List<AdminAlert>> (response, "response is List<AdminAlert>");
        }
        /// <summary>
        /// Test GetAllClearingHouses
        /// </summary>
        [Test]
        public void GetAllClearingHousesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllClearingHouses();
            //Assert.IsInstanceOf<List<ClearingHouse>> (response, "response is List<ClearingHouse>");
        }
        /// <summary>
        /// Test GetAllEntitlements
        /// </summary>
        [Test]
        public void GetAllEntitlementsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllEntitlements();
            //Assert.IsInstanceOf<List<Entitlement>> (response, "response is List<Entitlement>");
        }
        /// <summary>
        /// Test GetAllOrderStrategyTypes
        /// </summary>
        [Test]
        public void GetAllOrderStrategyTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllOrderStrategyTypes();
            //Assert.IsInstanceOf<List<OrderStrategyType>> (response, "response is List<OrderStrategyType>");
        }
        /// <summary>
        /// Test GetAllProperties
        /// </summary>
        [Test]
        public void GetAllPropertiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllProperties();
            //Assert.IsInstanceOf<List<Property>> (response, "response is List<Property>");
        }
        /// <summary>
        /// Test GetClearingHouse
        /// </summary>
        [Test]
        public void GetClearingHouseTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetClearingHouse(id);
            //Assert.IsInstanceOf<ClearingHouse> (response, "response is ClearingHouse");
        }
        /// <summary>
        /// Test GetClearingHouses
        /// </summary>
        [Test]
        public void GetClearingHousesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetClearingHouses(ids);
            //Assert.IsInstanceOf<List<ClearingHouse>> (response, "response is List<ClearingHouse>");
        }
        /// <summary>
        /// Test GetEntitlement
        /// </summary>
        [Test]
        public void GetEntitlementTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetEntitlement(id);
            //Assert.IsInstanceOf<Entitlement> (response, "response is Entitlement");
        }
        /// <summary>
        /// Test GetEntitlements
        /// </summary>
        [Test]
        public void GetEntitlementsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetEntitlements(ids);
            //Assert.IsInstanceOf<List<Entitlement>> (response, "response is List<Entitlement>");
        }
        /// <summary>
        /// Test GetOrderStrategyType
        /// </summary>
        [Test]
        public void GetOrderStrategyTypeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetOrderStrategyType(id);
            //Assert.IsInstanceOf<OrderStrategyType> (response, "response is OrderStrategyType");
        }
        /// <summary>
        /// Test GetOrderStrategyTypes
        /// </summary>
        [Test]
        public void GetOrderStrategyTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetOrderStrategyTypes(ids);
            //Assert.IsInstanceOf<List<OrderStrategyType>> (response, "response is List<OrderStrategyType>");
        }
        /// <summary>
        /// Test GetProperties
        /// </summary>
        [Test]
        public void GetPropertiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetProperties(ids);
            //Assert.IsInstanceOf<List<Property>> (response, "response is List<Property>");
        }
        /// <summary>
        /// Test GetProperty
        /// </summary>
        [Test]
        public void GetPropertyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetProperty(id);
            //Assert.IsInstanceOf<Property> (response, "response is Property");
        }
        /// <summary>
        /// Test SuggestAdminAlerts
        /// </summary>
        [Test]
        public void SuggestAdminAlertsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string t = null;
            //int? l = null;
            //var response = instance.SuggestAdminAlerts(t, l);
            //Assert.IsInstanceOf<List<AdminAlert>> (response, "response is List<AdminAlert>");
        }
        /// <summary>
        /// Test SuggestClearingHouses
        /// </summary>
        [Test]
        public void SuggestClearingHousesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string t = null;
            //int? l = null;
            //var response = instance.SuggestClearingHouses(t, l);
            //Assert.IsInstanceOf<List<ClearingHouse>> (response, "response is List<ClearingHouse>");
        }
        /// <summary>
        /// Test SuggestOrderStrategyTypes
        /// </summary>
        [Test]
        public void SuggestOrderStrategyTypesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string t = null;
            //int? l = null;
            //var response = instance.SuggestOrderStrategyTypes(t, l);
            //Assert.IsInstanceOf<List<OrderStrategyType>> (response, "response is List<OrderStrategyType>");
        }
        /// <summary>
        /// Test SuggestProperties
        /// </summary>
        [Test]
        public void SuggestPropertiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string t = null;
            //int? l = null;
            //var response = instance.SuggestProperties(t, l);
            //Assert.IsInstanceOf<List<Property>> (response, "response is List<Property>");
        }
    }

}
