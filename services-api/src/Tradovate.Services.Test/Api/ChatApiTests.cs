/* 
 * Tradovate API
 *
 * Tradovate API provides an access to the complete set of robust Tradovate functionality.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Tradovate.Services.Client;
using Tradovate.Services.Api;
using Tradovate.Services.Model;

namespace Tradovate.Services.Test
{
    /// <summary>
    ///  Class for testing ChatApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ChatApiTests
    {
        private ChatApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ChatApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ChatApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' ChatApi
            //Assert.IsInstanceOfType(typeof(ChatApi), instance, "instance is a ChatApi");
        }

        /// <summary>
        /// Test CloseChat
        /// </summary>
        [Test]
        public void CloseChatTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CloseChat body = null;
            //var response = instance.CloseChat(body);
            //Assert.IsInstanceOf<ChatResponse> (response, "response is ChatResponse");
        }
        /// <summary>
        /// Test GetAllChats
        /// </summary>
        [Test]
        public void GetAllChatsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllChats();
            //Assert.IsInstanceOf<List<Chat>> (response, "response is List<Chat>");
        }
        /// <summary>
        /// Test GetChat
        /// </summary>
        [Test]
        public void GetChatTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetChat(id);
            //Assert.IsInstanceOf<Chat> (response, "response is Chat");
        }
        /// <summary>
        /// Test GetChatMessage
        /// </summary>
        [Test]
        public void GetChatMessageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetChatMessage(id);
            //Assert.IsInstanceOf<ChatMessage> (response, "response is ChatMessage");
        }
        /// <summary>
        /// Test GetChatMessages
        /// </summary>
        [Test]
        public void GetChatMessagesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetChatMessages(ids);
            //Assert.IsInstanceOf<List<ChatMessage>> (response, "response is List<ChatMessage>");
        }
        /// <summary>
        /// Test GetChats
        /// </summary>
        [Test]
        public void GetChatsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetChats(ids);
            //Assert.IsInstanceOf<List<Chat>> (response, "response is List<Chat>");
        }
        /// <summary>
        /// Test GetOwnedChatMessages
        /// </summary>
        [Test]
        public void GetOwnedChatMessagesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedChatMessages(masterid);
            //Assert.IsInstanceOf<List<ChatMessage>> (response, "response is List<ChatMessage>");
        }
        /// <summary>
        /// Test GetOwnedChatMessagesBatch
        /// </summary>
        [Test]
        public void GetOwnedChatMessagesBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedChatMessagesBatch(masterids);
            //Assert.IsInstanceOf<List<ChatMessage>> (response, "response is List<ChatMessage>");
        }
        /// <summary>
        /// Test GetOwnedChats
        /// </summary>
        [Test]
        public void GetOwnedChatsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedChats(masterid);
            //Assert.IsInstanceOf<List<Chat>> (response, "response is List<Chat>");
        }
        /// <summary>
        /// Test GetOwnedChatsBatch
        /// </summary>
        [Test]
        public void GetOwnedChatsBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedChatsBatch(masterids);
            //Assert.IsInstanceOf<List<Chat>> (response, "response is List<Chat>");
        }
        /// <summary>
        /// Test MarkAsReadChatMessage
        /// </summary>
        [Test]
        public void MarkAsReadChatMessageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MarkAsReadChatMessage body = null;
            //var response = instance.MarkAsReadChatMessage(body);
            //Assert.IsInstanceOf<ChatMessageResponse> (response, "response is ChatMessageResponse");
        }
        /// <summary>
        /// Test PostChatMessage
        /// </summary>
        [Test]
        public void PostChatMessageTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //PostChatMessage body = null;
            //var response = instance.PostChatMessage(body);
            //Assert.IsInstanceOf<ChatMessageResponse> (response, "response is ChatMessageResponse");
        }
    }

}
