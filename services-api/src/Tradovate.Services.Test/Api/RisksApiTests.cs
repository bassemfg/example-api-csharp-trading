/* 
 * Tradovate API
 *
 * Tradovate API provides an access to the complete set of robust Tradovate functionality.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Tradovate.Services.Client;
using Tradovate.Services.Api;
using Tradovate.Services.Model;

namespace Tradovate.Services.Test
{
    /// <summary>
    ///  Class for testing RisksApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class RisksApiTests
    {
        private RisksApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new RisksApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of RisksApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' RisksApi
            //Assert.IsInstanceOfType(typeof(RisksApi), instance, "instance is a RisksApi");
        }

        /// <summary>
        /// Test CreateUserAccountAutoLiq
        /// </summary>
        [Test]
        public void CreateUserAccountAutoLiqTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserAccountAutoLiq body = null;
            //var response = instance.CreateUserAccountAutoLiq(body);
            //Assert.IsInstanceOf<UserAccountAutoLiq> (response, "response is UserAccountAutoLiq");
        }
        /// <summary>
        /// Test CreateUserAccountPositionLimit
        /// </summary>
        [Test]
        public void CreateUserAccountPositionLimitTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserAccountPositionLimit body = null;
            //var response = instance.CreateUserAccountPositionLimit(body);
            //Assert.IsInstanceOf<UserAccountPositionLimit> (response, "response is UserAccountPositionLimit");
        }
        /// <summary>
        /// Test CreateUserAccountRiskParameter
        /// </summary>
        [Test]
        public void CreateUserAccountRiskParameterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserAccountRiskParameter body = null;
            //var response = instance.CreateUserAccountRiskParameter(body);
            //Assert.IsInstanceOf<UserAccountRiskParameter> (response, "response is UserAccountRiskParameter");
        }
        /// <summary>
        /// Test DeleteUserAccountPositionLimit
        /// </summary>
        [Test]
        public void DeleteUserAccountPositionLimitTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteUserAccountPositionLimit body = null;
            //var response = instance.DeleteUserAccountPositionLimit(body);
            //Assert.IsInstanceOf<DeleteResultResponse> (response, "response is DeleteResultResponse");
        }
        /// <summary>
        /// Test DeleteUserAccountRiskParameter
        /// </summary>
        [Test]
        public void DeleteUserAccountRiskParameterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteUserAccountRiskParameter body = null;
            //var response = instance.DeleteUserAccountRiskParameter(body);
            //Assert.IsInstanceOf<DeleteResultResponse> (response, "response is DeleteResultResponse");
        }
        /// <summary>
        /// Test GetAllProductMargins
        /// </summary>
        [Test]
        public void GetAllProductMarginsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllProductMargins();
            //Assert.IsInstanceOf<List<ProductMargin>> (response, "response is List<ProductMargin>");
        }
        /// <summary>
        /// Test GetAllUserAccountAutoLiqs
        /// </summary>
        [Test]
        public void GetAllUserAccountAutoLiqsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllUserAccountAutoLiqs();
            //Assert.IsInstanceOf<List<UserAccountAutoLiq>> (response, "response is List<UserAccountAutoLiq>");
        }
        /// <summary>
        /// Test GetContractMargin
        /// </summary>
        [Test]
        public void GetContractMarginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetContractMargin(id);
            //Assert.IsInstanceOf<ContractMargin> (response, "response is ContractMargin");
        }
        /// <summary>
        /// Test GetContractMargins
        /// </summary>
        [Test]
        public void GetContractMarginsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetContractMargins(ids);
            //Assert.IsInstanceOf<List<ContractMargin>> (response, "response is List<ContractMargin>");
        }
        /// <summary>
        /// Test GetOwnedContractMargins
        /// </summary>
        [Test]
        public void GetOwnedContractMarginsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedContractMargins(masterid);
            //Assert.IsInstanceOf<List<ContractMargin>> (response, "response is List<ContractMargin>");
        }
        /// <summary>
        /// Test GetOwnedContractMarginsBatch
        /// </summary>
        [Test]
        public void GetOwnedContractMarginsBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedContractMarginsBatch(masterids);
            //Assert.IsInstanceOf<List<ContractMargin>> (response, "response is List<ContractMargin>");
        }
        /// <summary>
        /// Test GetOwnedProductMargins
        /// </summary>
        [Test]
        public void GetOwnedProductMarginsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedProductMargins(masterid);
            //Assert.IsInstanceOf<List<ProductMargin>> (response, "response is List<ProductMargin>");
        }
        /// <summary>
        /// Test GetOwnedProductMarginsBatch
        /// </summary>
        [Test]
        public void GetOwnedProductMarginsBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedProductMarginsBatch(masterids);
            //Assert.IsInstanceOf<List<ProductMargin>> (response, "response is List<ProductMargin>");
        }
        /// <summary>
        /// Test GetOwnedUserAccountAutoLiqs
        /// </summary>
        [Test]
        public void GetOwnedUserAccountAutoLiqsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedUserAccountAutoLiqs(masterid);
            //Assert.IsInstanceOf<List<UserAccountAutoLiq>> (response, "response is List<UserAccountAutoLiq>");
        }
        /// <summary>
        /// Test GetOwnedUserAccountAutoLiqsBatch
        /// </summary>
        [Test]
        public void GetOwnedUserAccountAutoLiqsBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedUserAccountAutoLiqsBatch(masterids);
            //Assert.IsInstanceOf<List<UserAccountAutoLiq>> (response, "response is List<UserAccountAutoLiq>");
        }
        /// <summary>
        /// Test GetOwnedUserAccountPositionLimits
        /// </summary>
        [Test]
        public void GetOwnedUserAccountPositionLimitsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedUserAccountPositionLimits(masterid);
            //Assert.IsInstanceOf<List<UserAccountPositionLimit>> (response, "response is List<UserAccountPositionLimit>");
        }
        /// <summary>
        /// Test GetOwnedUserAccountPositionLimitsBatch
        /// </summary>
        [Test]
        public void GetOwnedUserAccountPositionLimitsBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedUserAccountPositionLimitsBatch(masterids);
            //Assert.IsInstanceOf<List<UserAccountPositionLimit>> (response, "response is List<UserAccountPositionLimit>");
        }
        /// <summary>
        /// Test GetOwnedUserAccountRiskParameters
        /// </summary>
        [Test]
        public void GetOwnedUserAccountRiskParametersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedUserAccountRiskParameters(masterid);
            //Assert.IsInstanceOf<List<UserAccountRiskParameter>> (response, "response is List<UserAccountRiskParameter>");
        }
        /// <summary>
        /// Test GetOwnedUserAccountRiskParametersBatch
        /// </summary>
        [Test]
        public void GetOwnedUserAccountRiskParametersBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedUserAccountRiskParametersBatch(masterids);
            //Assert.IsInstanceOf<List<UserAccountRiskParameter>> (response, "response is List<UserAccountRiskParameter>");
        }
        /// <summary>
        /// Test GetProductMargin
        /// </summary>
        [Test]
        public void GetProductMarginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetProductMargin(id);
            //Assert.IsInstanceOf<ProductMargin> (response, "response is ProductMargin");
        }
        /// <summary>
        /// Test GetProductMargins
        /// </summary>
        [Test]
        public void GetProductMarginsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetProductMargins(ids);
            //Assert.IsInstanceOf<List<ProductMargin>> (response, "response is List<ProductMargin>");
        }
        /// <summary>
        /// Test GetUserAccountAutoLiq
        /// </summary>
        [Test]
        public void GetUserAccountAutoLiqTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetUserAccountAutoLiq(id);
            //Assert.IsInstanceOf<UserAccountAutoLiq> (response, "response is UserAccountAutoLiq");
        }
        /// <summary>
        /// Test GetUserAccountAutoLiqs
        /// </summary>
        [Test]
        public void GetUserAccountAutoLiqsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetUserAccountAutoLiqs(ids);
            //Assert.IsInstanceOf<List<UserAccountAutoLiq>> (response, "response is List<UserAccountAutoLiq>");
        }
        /// <summary>
        /// Test GetUserAccountPositionLimit
        /// </summary>
        [Test]
        public void GetUserAccountPositionLimitTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetUserAccountPositionLimit(id);
            //Assert.IsInstanceOf<UserAccountPositionLimit> (response, "response is UserAccountPositionLimit");
        }
        /// <summary>
        /// Test GetUserAccountPositionLimits
        /// </summary>
        [Test]
        public void GetUserAccountPositionLimitsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetUserAccountPositionLimits(ids);
            //Assert.IsInstanceOf<List<UserAccountPositionLimit>> (response, "response is List<UserAccountPositionLimit>");
        }
        /// <summary>
        /// Test GetUserAccountRiskParameter
        /// </summary>
        [Test]
        public void GetUserAccountRiskParameterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetUserAccountRiskParameter(id);
            //Assert.IsInstanceOf<UserAccountRiskParameter> (response, "response is UserAccountRiskParameter");
        }
        /// <summary>
        /// Test GetUserAccountRiskParameters
        /// </summary>
        [Test]
        public void GetUserAccountRiskParametersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetUserAccountRiskParameters(ids);
            //Assert.IsInstanceOf<List<UserAccountRiskParameter>> (response, "response is List<UserAccountRiskParameter>");
        }
        /// <summary>
        /// Test UpdateUserAccountAutoLiq
        /// </summary>
        [Test]
        public void UpdateUserAccountAutoLiqTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserAccountAutoLiq body = null;
            //var response = instance.UpdateUserAccountAutoLiq(body);
            //Assert.IsInstanceOf<UserAccountAutoLiq> (response, "response is UserAccountAutoLiq");
        }
        /// <summary>
        /// Test UpdateUserAccountPositionLimit
        /// </summary>
        [Test]
        public void UpdateUserAccountPositionLimitTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserAccountPositionLimit body = null;
            //var response = instance.UpdateUserAccountPositionLimit(body);
            //Assert.IsInstanceOf<UserAccountPositionLimit> (response, "response is UserAccountPositionLimit");
        }
        /// <summary>
        /// Test UpdateUserAccountRiskParameter
        /// </summary>
        [Test]
        public void UpdateUserAccountRiskParameterTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserAccountRiskParameter body = null;
            //var response = instance.UpdateUserAccountRiskParameter(body);
            //Assert.IsInstanceOf<UserAccountRiskParameter> (response, "response is UserAccountRiskParameter");
        }
    }

}
