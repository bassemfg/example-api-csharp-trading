/* 
 * Tradovate API
 *
 * Tradovate API provides an access to the complete set of robust Tradovate functionality.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Tradovate.Services.Client;
using Tradovate.Services.Api;
using Tradovate.Services.Model;

namespace Tradovate.Services.Test
{
    /// <summary>
    ///  Class for testing AuthenticationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AuthenticationApiTests
    {
        private AuthenticationApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AuthenticationApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AuthenticationApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AuthenticationApi
            //Assert.IsInstanceOfType(typeof(AuthenticationApi), instance, "instance is a AuthenticationApi");
        }

        /// <summary>
        /// Test AccessTokenRequest
        /// </summary>
        [Test]
        public void AccessTokenRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AccessTokenRequest body = null;
            //var response = instance.AccessTokenRequest(body);
            //Assert.IsInstanceOf<AccessTokenResponse> (response, "response is AccessTokenResponse");
        }
        /// <summary>
        /// Test RenewAccessToken
        /// </summary>
        [Test]
        public void RenewAccessTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.RenewAccessToken();
            //Assert.IsInstanceOf<AccessTokenResponse> (response, "response is AccessTokenResponse");
        }
    }

}
