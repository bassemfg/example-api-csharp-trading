/* 
 * Tradovate API
 *
 * Tradovate API provides an access to the complete set of robust Tradovate functionality.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Tradovate.Services.Client;
using Tradovate.Services.Api;
using Tradovate.Services.Model;

namespace Tradovate.Services.Test
{
    /// <summary>
    ///  Class for testing AccountingApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AccountingApiTests
    {
        private AccountingApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AccountingApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AccountingApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AccountingApi
            //Assert.IsInstanceOfType(typeof(AccountingApi), instance, "instance is a AccountingApi");
        }

        /// <summary>
        /// Test FindAccount
        /// </summary>
        [Test]
        public void FindAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.FindAccount(name);
            //Assert.IsInstanceOf<Account> (response, "response is Account");
        }
        /// <summary>
        /// Test GetAccount
        /// </summary>
        [Test]
        public void GetAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetAccount(id);
            //Assert.IsInstanceOf<Account> (response, "response is Account");
        }
        /// <summary>
        /// Test GetAccounts
        /// </summary>
        [Test]
        public void GetAccountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetAccounts(ids);
            //Assert.IsInstanceOf<List<Account>> (response, "response is List<Account>");
        }
        /// <summary>
        /// Test GetAllAccounts
        /// </summary>
        [Test]
        public void GetAllAccountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllAccounts();
            //Assert.IsInstanceOf<List<Account>> (response, "response is List<Account>");
        }
        /// <summary>
        /// Test GetAllCashBalances
        /// </summary>
        [Test]
        public void GetAllCashBalancesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllCashBalances();
            //Assert.IsInstanceOf<List<CashBalance>> (response, "response is List<CashBalance>");
        }
        /// <summary>
        /// Test GetAllMarginSnapshots
        /// </summary>
        [Test]
        public void GetAllMarginSnapshotsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllMarginSnapshots();
            //Assert.IsInstanceOf<List<MarginSnapshot>> (response, "response is List<MarginSnapshot>");
        }
        /// <summary>
        /// Test GetAllTradingPermissions
        /// </summary>
        [Test]
        public void GetAllTradingPermissionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllTradingPermissions();
            //Assert.IsInstanceOf<List<TradingPermission>> (response, "response is List<TradingPermission>");
        }
        /// <summary>
        /// Test GetCashBalance
        /// </summary>
        [Test]
        public void GetCashBalanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetCashBalance(id);
            //Assert.IsInstanceOf<CashBalance> (response, "response is CashBalance");
        }
        /// <summary>
        /// Test GetCashBalanceLog
        /// </summary>
        [Test]
        public void GetCashBalanceLogTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetCashBalanceLog(id);
            //Assert.IsInstanceOf<CashBalanceLog> (response, "response is CashBalanceLog");
        }
        /// <summary>
        /// Test GetCashBalanceLogs
        /// </summary>
        [Test]
        public void GetCashBalanceLogsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetCashBalanceLogs(ids);
            //Assert.IsInstanceOf<List<CashBalanceLog>> (response, "response is List<CashBalanceLog>");
        }
        /// <summary>
        /// Test GetCashBalanceSnapshot
        /// </summary>
        [Test]
        public void GetCashBalanceSnapshotTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetCashBalanceSnapshot body = null;
            //var response = instance.GetCashBalanceSnapshot(body);
            //Assert.IsInstanceOf<CashBalanceSnapshot> (response, "response is CashBalanceSnapshot");
        }
        /// <summary>
        /// Test GetCashBalances
        /// </summary>
        [Test]
        public void GetCashBalancesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetCashBalances(ids);
            //Assert.IsInstanceOf<List<CashBalance>> (response, "response is List<CashBalance>");
        }
        /// <summary>
        /// Test GetMarginSnapshot
        /// </summary>
        [Test]
        public void GetMarginSnapshotTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetMarginSnapshot(id);
            //Assert.IsInstanceOf<MarginSnapshot> (response, "response is MarginSnapshot");
        }
        /// <summary>
        /// Test GetMarginSnapshots
        /// </summary>
        [Test]
        public void GetMarginSnapshotsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetMarginSnapshots(ids);
            //Assert.IsInstanceOf<List<MarginSnapshot>> (response, "response is List<MarginSnapshot>");
        }
        /// <summary>
        /// Test GetOwnedAccounts
        /// </summary>
        [Test]
        public void GetOwnedAccountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedAccounts(masterid);
            //Assert.IsInstanceOf<List<Account>> (response, "response is List<Account>");
        }
        /// <summary>
        /// Test GetOwnedAccountsBatch
        /// </summary>
        [Test]
        public void GetOwnedAccountsBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedAccountsBatch(masterids);
            //Assert.IsInstanceOf<List<Account>> (response, "response is List<Account>");
        }
        /// <summary>
        /// Test GetOwnedCashBalanceLogs
        /// </summary>
        [Test]
        public void GetOwnedCashBalanceLogsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedCashBalanceLogs(masterid);
            //Assert.IsInstanceOf<List<CashBalanceLog>> (response, "response is List<CashBalanceLog>");
        }
        /// <summary>
        /// Test GetOwnedCashBalanceLogsBatch
        /// </summary>
        [Test]
        public void GetOwnedCashBalanceLogsBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedCashBalanceLogsBatch(masterids);
            //Assert.IsInstanceOf<List<CashBalanceLog>> (response, "response is List<CashBalanceLog>");
        }
        /// <summary>
        /// Test GetOwnedCashBalances
        /// </summary>
        [Test]
        public void GetOwnedCashBalancesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedCashBalances(masterid);
            //Assert.IsInstanceOf<List<CashBalance>> (response, "response is List<CashBalance>");
        }
        /// <summary>
        /// Test GetOwnedCashBalancesBatch
        /// </summary>
        [Test]
        public void GetOwnedCashBalancesBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedCashBalancesBatch(masterids);
            //Assert.IsInstanceOf<List<CashBalance>> (response, "response is List<CashBalance>");
        }
        /// <summary>
        /// Test GetOwnedMarginSnapshots
        /// </summary>
        [Test]
        public void GetOwnedMarginSnapshotsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedMarginSnapshots(masterid);
            //Assert.IsInstanceOf<List<MarginSnapshot>> (response, "response is List<MarginSnapshot>");
        }
        /// <summary>
        /// Test GetOwnedMarginSnapshotsBatch
        /// </summary>
        [Test]
        public void GetOwnedMarginSnapshotsBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedMarginSnapshotsBatch(masterids);
            //Assert.IsInstanceOf<List<MarginSnapshot>> (response, "response is List<MarginSnapshot>");
        }
        /// <summary>
        /// Test GetOwnedTradingPermissions
        /// </summary>
        [Test]
        public void GetOwnedTradingPermissionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedTradingPermissions(masterid);
            //Assert.IsInstanceOf<List<TradingPermission>> (response, "response is List<TradingPermission>");
        }
        /// <summary>
        /// Test GetOwnedTradingPermissionsBatch
        /// </summary>
        [Test]
        public void GetOwnedTradingPermissionsBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedTradingPermissionsBatch(masterids);
            //Assert.IsInstanceOf<List<TradingPermission>> (response, "response is List<TradingPermission>");
        }
        /// <summary>
        /// Test GetTradingPermission
        /// </summary>
        [Test]
        public void GetTradingPermissionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetTradingPermission(id);
            //Assert.IsInstanceOf<TradingPermission> (response, "response is TradingPermission");
        }
        /// <summary>
        /// Test GetTradingPermissions
        /// </summary>
        [Test]
        public void GetTradingPermissionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetTradingPermissions(ids);
            //Assert.IsInstanceOf<List<TradingPermission>> (response, "response is List<TradingPermission>");
        }
        /// <summary>
        /// Test SuggestAccounts
        /// </summary>
        [Test]
        public void SuggestAccountsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string t = null;
            //int? l = null;
            //var response = instance.SuggestAccounts(t, l);
            //Assert.IsInstanceOf<List<Account>> (response, "response is List<Account>");
        }
    }

}
