/* 
 * Tradovate API
 *
 * Tradovate API provides an access to the complete set of robust Tradovate functionality.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Tradovate.Services.Client;
using Tradovate.Services.Api;
using Tradovate.Services.Model;

namespace Tradovate.Services.Test
{
    /// <summary>
    ///  Class for testing UsersApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class UsersApiTests
    {
        private UsersApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new UsersApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of UsersApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' UsersApi
            //Assert.IsInstanceOfType(typeof(UsersApi), instance, "instance is a UsersApi");
        }

        /// <summary>
        /// Test AcceptTradingPermission
        /// </summary>
        [Test]
        public void AcceptTradingPermissionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AcceptTradingPermission body = null;
            //var response = instance.AcceptTradingPermission(body);
            //Assert.IsInstanceOf<TradingPermissionResponse> (response, "response is TradingPermissionResponse");
        }
        /// <summary>
        /// Test ActivateSecondMarketDataSubscriptionRenewal
        /// </summary>
        [Test]
        public void ActivateSecondMarketDataSubscriptionRenewalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ActivateSecondMarketDataSubscriptionRenewal body = null;
            //var response = instance.ActivateSecondMarketDataSubscriptionRenewal(body);
            //Assert.IsInstanceOf<SecondMarketDataSubscriptionResponse> (response, "response is SecondMarketDataSubscriptionResponse");
        }
        /// <summary>
        /// Test AddEntitlementSubscription
        /// </summary>
        [Test]
        public void AddEntitlementSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AddEntitlementSubscription body = null;
            //var response = instance.AddEntitlementSubscription(body);
            //Assert.IsInstanceOf<EntitlementSubscriptionResponse> (response, "response is EntitlementSubscriptionResponse");
        }
        /// <summary>
        /// Test AddMarketDataSubscription
        /// </summary>
        [Test]
        public void AddMarketDataSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AddMarketDataSubscription body = null;
            //var response = instance.AddMarketDataSubscription(body);
            //Assert.IsInstanceOf<MarketDataSubscriptionResponse> (response, "response is MarketDataSubscriptionResponse");
        }
        /// <summary>
        /// Test AddSecondMarketDataSubscription
        /// </summary>
        [Test]
        public void AddSecondMarketDataSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AddSecondMarketDataSubscription body = null;
            //var response = instance.AddSecondMarketDataSubscription(body);
            //Assert.IsInstanceOf<SecondMarketDataSubscriptionResponse> (response, "response is SecondMarketDataSubscriptionResponse");
        }
        /// <summary>
        /// Test AddTradovateSubscription
        /// </summary>
        [Test]
        public void AddTradovateSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //AddTradovateSubscription body = null;
            //var response = instance.AddTradovateSubscription(body);
            //Assert.IsInstanceOf<TradovateSubscriptionResponse> (response, "response is TradovateSubscriptionResponse");
        }
        /// <summary>
        /// Test CancelSecondMarketDataSubscription
        /// </summary>
        [Test]
        public void CancelSecondMarketDataSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CancelSecondMarketDataSubscription body = null;
            //var response = instance.CancelSecondMarketDataSubscription(body);
            //Assert.IsInstanceOf<SecondMarketDataSubscriptionResponse> (response, "response is SecondMarketDataSubscriptionResponse");
        }
        /// <summary>
        /// Test CancelSecondMarketDataSubscriptionRenewal
        /// </summary>
        [Test]
        public void CancelSecondMarketDataSubscriptionRenewalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CancelSecondMarketDataSubscriptionRenewal body = null;
            //var response = instance.CancelSecondMarketDataSubscriptionRenewal(body);
            //Assert.IsInstanceOf<SecondMarketDataSubscriptionResponse> (response, "response is SecondMarketDataSubscriptionResponse");
        }
        /// <summary>
        /// Test CancelTradovateSubscription
        /// </summary>
        [Test]
        public void CancelTradovateSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CancelTradovateSubscription body = null;
            //var response = instance.CancelTradovateSubscription(body);
            //Assert.IsInstanceOf<TradovateSubscriptionResponse> (response, "response is TradovateSubscriptionResponse");
        }
        /// <summary>
        /// Test CreateMarketDataSubscription
        /// </summary>
        [Test]
        public void CreateMarketDataSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MarketDataSubscription body = null;
            //var response = instance.CreateMarketDataSubscription(body);
            //Assert.IsInstanceOf<MarketDataSubscription> (response, "response is MarketDataSubscription");
        }
        /// <summary>
        /// Test CreateTradovateSubscription
        /// </summary>
        [Test]
        public void CreateTradovateSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TradovateSubscription body = null;
            //var response = instance.CreateTradovateSubscription(body);
            //Assert.IsInstanceOf<TradovateSubscription> (response, "response is TradovateSubscription");
        }
        /// <summary>
        /// Test CreateUserPlugin
        /// </summary>
        [Test]
        public void CreateUserPluginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserPlugin body = null;
            //var response = instance.CreateUserPlugin(body);
            //Assert.IsInstanceOf<UserPlugin> (response, "response is UserPlugin");
        }
        /// <summary>
        /// Test FindOrganization
        /// </summary>
        [Test]
        public void FindOrganizationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.FindOrganization(name);
            //Assert.IsInstanceOf<Organization> (response, "response is Organization");
        }
        /// <summary>
        /// Test FindUser
        /// </summary>
        [Test]
        public void FindUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.FindUser(name);
            //Assert.IsInstanceOf<User> (response, "response is User");
        }
        /// <summary>
        /// Test GetAccountTradingPermissions
        /// </summary>
        [Test]
        public void GetAccountTradingPermissionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetAccountTradingPermissions body = null;
            //var response = instance.GetAccountTradingPermissions(body);
            //Assert.IsInstanceOf<TradingPermissionsResponse> (response, "response is TradingPermissionsResponse");
        }
        /// <summary>
        /// Test GetAllMarketDataSubscriptions
        /// </summary>
        [Test]
        public void GetAllMarketDataSubscriptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllMarketDataSubscriptions();
            //Assert.IsInstanceOf<List<MarketDataSubscription>> (response, "response is List<MarketDataSubscription>");
        }
        /// <summary>
        /// Test GetAllOrganizations
        /// </summary>
        [Test]
        public void GetAllOrganizationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllOrganizations();
            //Assert.IsInstanceOf<List<Organization>> (response, "response is List<Organization>");
        }
        /// <summary>
        /// Test GetAllSecondMarketDataSubscriptions
        /// </summary>
        [Test]
        public void GetAllSecondMarketDataSubscriptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllSecondMarketDataSubscriptions();
            //Assert.IsInstanceOf<List<SecondMarketDataSubscription>> (response, "response is List<SecondMarketDataSubscription>");
        }
        /// <summary>
        /// Test GetAllTradovateSubscriptions
        /// </summary>
        [Test]
        public void GetAllTradovateSubscriptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllTradovateSubscriptions();
            //Assert.IsInstanceOf<List<TradovateSubscription>> (response, "response is List<TradovateSubscription>");
        }
        /// <summary>
        /// Test GetAllUserPlugins
        /// </summary>
        [Test]
        public void GetAllUserPluginsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllUserPlugins();
            //Assert.IsInstanceOf<List<UserPlugin>> (response, "response is List<UserPlugin>");
        }
        /// <summary>
        /// Test GetAllUserSessionStatses
        /// </summary>
        [Test]
        public void GetAllUserSessionStatsesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllUserSessionStatses();
            //Assert.IsInstanceOf<List<UserSessionStats>> (response, "response is List<UserSessionStats>");
        }
        /// <summary>
        /// Test GetAllUsers
        /// </summary>
        [Test]
        public void GetAllUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllUsers();
            //Assert.IsInstanceOf<List<User>> (response, "response is List<User>");
        }
        /// <summary>
        /// Test GetContactInfo
        /// </summary>
        [Test]
        public void GetContactInfoTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetContactInfo(id);
            //Assert.IsInstanceOf<ContactInfo> (response, "response is ContactInfo");
        }
        /// <summary>
        /// Test GetContactInfos
        /// </summary>
        [Test]
        public void GetContactInfosTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetContactInfos(ids);
            //Assert.IsInstanceOf<List<ContactInfo>> (response, "response is List<ContactInfo>");
        }
        /// <summary>
        /// Test GetMarketDataSubscription
        /// </summary>
        [Test]
        public void GetMarketDataSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetMarketDataSubscription(id);
            //Assert.IsInstanceOf<MarketDataSubscription> (response, "response is MarketDataSubscription");
        }
        /// <summary>
        /// Test GetMarketDataSubscriptions
        /// </summary>
        [Test]
        public void GetMarketDataSubscriptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetMarketDataSubscriptions(ids);
            //Assert.IsInstanceOf<List<MarketDataSubscription>> (response, "response is List<MarketDataSubscription>");
        }
        /// <summary>
        /// Test GetOrganization
        /// </summary>
        [Test]
        public void GetOrganizationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetOrganization(id);
            //Assert.IsInstanceOf<Organization> (response, "response is Organization");
        }
        /// <summary>
        /// Test GetOrganizations
        /// </summary>
        [Test]
        public void GetOrganizationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetOrganizations(ids);
            //Assert.IsInstanceOf<List<Organization>> (response, "response is List<Organization>");
        }
        /// <summary>
        /// Test GetOwnedContactInfos
        /// </summary>
        [Test]
        public void GetOwnedContactInfosTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedContactInfos(masterid);
            //Assert.IsInstanceOf<List<ContactInfo>> (response, "response is List<ContactInfo>");
        }
        /// <summary>
        /// Test GetOwnedContactInfosBatch
        /// </summary>
        [Test]
        public void GetOwnedContactInfosBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedContactInfosBatch(masterids);
            //Assert.IsInstanceOf<List<ContactInfo>> (response, "response is List<ContactInfo>");
        }
        /// <summary>
        /// Test GetOwnedMarketDataSubscriptions
        /// </summary>
        [Test]
        public void GetOwnedMarketDataSubscriptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedMarketDataSubscriptions(masterid);
            //Assert.IsInstanceOf<List<MarketDataSubscription>> (response, "response is List<MarketDataSubscription>");
        }
        /// <summary>
        /// Test GetOwnedMarketDataSubscriptionsBatch
        /// </summary>
        [Test]
        public void GetOwnedMarketDataSubscriptionsBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedMarketDataSubscriptionsBatch(masterids);
            //Assert.IsInstanceOf<List<MarketDataSubscription>> (response, "response is List<MarketDataSubscription>");
        }
        /// <summary>
        /// Test GetOwnedSecondMarketDataSubscriptions
        /// </summary>
        [Test]
        public void GetOwnedSecondMarketDataSubscriptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedSecondMarketDataSubscriptions(masterid);
            //Assert.IsInstanceOf<List<SecondMarketDataSubscription>> (response, "response is List<SecondMarketDataSubscription>");
        }
        /// <summary>
        /// Test GetOwnedSecondMarketDataSubscriptionsBatch
        /// </summary>
        [Test]
        public void GetOwnedSecondMarketDataSubscriptionsBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedSecondMarketDataSubscriptionsBatch(masterids);
            //Assert.IsInstanceOf<List<SecondMarketDataSubscription>> (response, "response is List<SecondMarketDataSubscription>");
        }
        /// <summary>
        /// Test GetOwnedTradovateSubscriptions
        /// </summary>
        [Test]
        public void GetOwnedTradovateSubscriptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedTradovateSubscriptions(masterid);
            //Assert.IsInstanceOf<List<TradovateSubscription>> (response, "response is List<TradovateSubscription>");
        }
        /// <summary>
        /// Test GetOwnedTradovateSubscriptionsBatch
        /// </summary>
        [Test]
        public void GetOwnedTradovateSubscriptionsBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedTradovateSubscriptionsBatch(masterids);
            //Assert.IsInstanceOf<List<TradovateSubscription>> (response, "response is List<TradovateSubscription>");
        }
        /// <summary>
        /// Test GetOwnedUserPlugins
        /// </summary>
        [Test]
        public void GetOwnedUserPluginsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedUserPlugins(masterid);
            //Assert.IsInstanceOf<List<UserPlugin>> (response, "response is List<UserPlugin>");
        }
        /// <summary>
        /// Test GetOwnedUserPluginsBatch
        /// </summary>
        [Test]
        public void GetOwnedUserPluginsBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedUserPluginsBatch(masterids);
            //Assert.IsInstanceOf<List<UserPlugin>> (response, "response is List<UserPlugin>");
        }
        /// <summary>
        /// Test GetOwnedUserProperties
        /// </summary>
        [Test]
        public void GetOwnedUserPropertiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedUserProperties(masterid);
            //Assert.IsInstanceOf<List<UserProperty>> (response, "response is List<UserProperty>");
        }
        /// <summary>
        /// Test GetOwnedUserPropertiesBatch
        /// </summary>
        [Test]
        public void GetOwnedUserPropertiesBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedUserPropertiesBatch(masterids);
            //Assert.IsInstanceOf<List<UserProperty>> (response, "response is List<UserProperty>");
        }
        /// <summary>
        /// Test GetOwnedUserSessionStatses
        /// </summary>
        [Test]
        public void GetOwnedUserSessionStatsesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedUserSessionStatses(masterid);
            //Assert.IsInstanceOf<List<UserSessionStats>> (response, "response is List<UserSessionStats>");
        }
        /// <summary>
        /// Test GetOwnedUserSessionStatsesBatch
        /// </summary>
        [Test]
        public void GetOwnedUserSessionStatsesBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedUserSessionStatsesBatch(masterids);
            //Assert.IsInstanceOf<List<UserSessionStats>> (response, "response is List<UserSessionStats>");
        }
        /// <summary>
        /// Test GetSecondMarketDataSubscription
        /// </summary>
        [Test]
        public void GetSecondMarketDataSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetSecondMarketDataSubscription(id);
            //Assert.IsInstanceOf<SecondMarketDataSubscription> (response, "response is SecondMarketDataSubscription");
        }
        /// <summary>
        /// Test GetSecondMarketDataSubscriptionCost
        /// </summary>
        [Test]
        public void GetSecondMarketDataSubscriptionCostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GetSecondMarketDataSubscriptionCost body = null;
            //var response = instance.GetSecondMarketDataSubscriptionCost(body);
            //Assert.IsInstanceOf<SecondMarketDataSubscriptionCostResponse> (response, "response is SecondMarketDataSubscriptionCostResponse");
        }
        /// <summary>
        /// Test GetSecondMarketDataSubscriptions
        /// </summary>
        [Test]
        public void GetSecondMarketDataSubscriptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetSecondMarketDataSubscriptions(ids);
            //Assert.IsInstanceOf<List<SecondMarketDataSubscription>> (response, "response is List<SecondMarketDataSubscription>");
        }
        /// <summary>
        /// Test GetTradovateSubscription
        /// </summary>
        [Test]
        public void GetTradovateSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetTradovateSubscription(id);
            //Assert.IsInstanceOf<TradovateSubscription> (response, "response is TradovateSubscription");
        }
        /// <summary>
        /// Test GetTradovateSubscriptions
        /// </summary>
        [Test]
        public void GetTradovateSubscriptionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetTradovateSubscriptions(ids);
            //Assert.IsInstanceOf<List<TradovateSubscription>> (response, "response is List<TradovateSubscription>");
        }
        /// <summary>
        /// Test GetUser
        /// </summary>
        [Test]
        public void GetUserTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetUser(id);
            //Assert.IsInstanceOf<User> (response, "response is User");
        }
        /// <summary>
        /// Test GetUserPlugin
        /// </summary>
        [Test]
        public void GetUserPluginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetUserPlugin(id);
            //Assert.IsInstanceOf<UserPlugin> (response, "response is UserPlugin");
        }
        /// <summary>
        /// Test GetUserPlugins
        /// </summary>
        [Test]
        public void GetUserPluginsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetUserPlugins(ids);
            //Assert.IsInstanceOf<List<UserPlugin>> (response, "response is List<UserPlugin>");
        }
        /// <summary>
        /// Test GetUserProperties
        /// </summary>
        [Test]
        public void GetUserPropertiesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetUserProperties(ids);
            //Assert.IsInstanceOf<List<UserProperty>> (response, "response is List<UserProperty>");
        }
        /// <summary>
        /// Test GetUserProperty
        /// </summary>
        [Test]
        public void GetUserPropertyTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetUserProperty(id);
            //Assert.IsInstanceOf<UserProperty> (response, "response is UserProperty");
        }
        /// <summary>
        /// Test GetUserSession
        /// </summary>
        [Test]
        public void GetUserSessionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetUserSession(id);
            //Assert.IsInstanceOf<UserSession> (response, "response is UserSession");
        }
        /// <summary>
        /// Test GetUserSessionStats
        /// </summary>
        [Test]
        public void GetUserSessionStatsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetUserSessionStats(id);
            //Assert.IsInstanceOf<UserSessionStats> (response, "response is UserSessionStats");
        }
        /// <summary>
        /// Test GetUserSessionStatses
        /// </summary>
        [Test]
        public void GetUserSessionStatsesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetUserSessionStatses(ids);
            //Assert.IsInstanceOf<List<UserSessionStats>> (response, "response is List<UserSessionStats>");
        }
        /// <summary>
        /// Test GetUserSessions
        /// </summary>
        [Test]
        public void GetUserSessionsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetUserSessions(ids);
            //Assert.IsInstanceOf<List<UserSession>> (response, "response is List<UserSession>");
        }
        /// <summary>
        /// Test GetUsers
        /// </summary>
        [Test]
        public void GetUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetUsers(ids);
            //Assert.IsInstanceOf<List<User>> (response, "response is List<User>");
        }
        /// <summary>
        /// Test ModifyCredentials
        /// </summary>
        [Test]
        public void ModifyCredentialsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModifyCredentials body = null;
            //var response = instance.ModifyCredentials(body);
            //Assert.IsInstanceOf<AccessTokenResponse> (response, "response is AccessTokenResponse");
        }
        /// <summary>
        /// Test ModifyEmailAddress
        /// </summary>
        [Test]
        public void ModifyEmailAddressTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModifyEmailAddress body = null;
            //var response = instance.ModifyEmailAddress(body);
            //Assert.IsInstanceOf<UserStatusMessage> (response, "response is UserStatusMessage");
        }
        /// <summary>
        /// Test ModifyPassword
        /// </summary>
        [Test]
        public void ModifyPasswordTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModifyPassword body = null;
            //var response = instance.ModifyPassword(body);
            //Assert.IsInstanceOf<AccessTokenResponse> (response, "response is AccessTokenResponse");
        }
        /// <summary>
        /// Test OpenDemoAccount
        /// </summary>
        [Test]
        public void OpenDemoAccountTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //OpenDemoAccount body = null;
            //var response = instance.OpenDemoAccount(body);
            //Assert.IsInstanceOf<OpenDemoAccountResponse> (response, "response is OpenDemoAccountResponse");
        }
        /// <summary>
        /// Test RequestTradingPermission
        /// </summary>
        [Test]
        public void RequestTradingPermissionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RequestTradingPermission body = null;
            //var response = instance.RequestTradingPermission(body);
            //Assert.IsInstanceOf<TradingPermissionResponse> (response, "response is TradingPermissionResponse");
        }
        /// <summary>
        /// Test RevokeTradingPermission
        /// </summary>
        [Test]
        public void RevokeTradingPermissionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //RevokeTradingPermission body = null;
            //var response = instance.RevokeTradingPermission(body);
            //Assert.IsInstanceOf<TradingPermissionResponse> (response, "response is TradingPermissionResponse");
        }
        /// <summary>
        /// Test SignUpOrganizationMember
        /// </summary>
        [Test]
        public void SignUpOrganizationMemberTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SignUpOrganizationMember body = null;
            //var response = instance.SignUpOrganizationMember(body);
            //Assert.IsInstanceOf<SignUpResponse> (response, "response is SignUpResponse");
        }
        /// <summary>
        /// Test SuggestOrganizations
        /// </summary>
        [Test]
        public void SuggestOrganizationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string t = null;
            //int? l = null;
            //var response = instance.SuggestOrganizations(t, l);
            //Assert.IsInstanceOf<List<Organization>> (response, "response is List<Organization>");
        }
        /// <summary>
        /// Test SuggestUsers
        /// </summary>
        [Test]
        public void SuggestUsersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string t = null;
            //int? l = null;
            //var response = instance.SuggestUsers(t, l);
            //Assert.IsInstanceOf<List<User>> (response, "response is List<User>");
        }
        /// <summary>
        /// Test SyncRequest
        /// </summary>
        [Test]
        public void SyncRequestTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //SyncRequest body = null;
            //var response = instance.SyncRequest(body);
            //Assert.IsInstanceOf<SyncMessage> (response, "response is SyncMessage");
        }
        /// <summary>
        /// Test UpdateMarketDataSubscription
        /// </summary>
        [Test]
        public void UpdateMarketDataSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MarketDataSubscription body = null;
            //var response = instance.UpdateMarketDataSubscription(body);
            //Assert.IsInstanceOf<MarketDataSubscription> (response, "response is MarketDataSubscription");
        }
        /// <summary>
        /// Test UpdateTradovateSubscription
        /// </summary>
        [Test]
        public void UpdateTradovateSubscriptionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TradovateSubscription body = null;
            //var response = instance.UpdateTradovateSubscription(body);
            //Assert.IsInstanceOf<TradovateSubscription> (response, "response is TradovateSubscription");
        }
        /// <summary>
        /// Test UpdateUserPlugin
        /// </summary>
        [Test]
        public void UpdateUserPluginTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //UserPlugin body = null;
            //var response = instance.UpdateUserPlugin(body);
            //Assert.IsInstanceOf<UserPlugin> (response, "response is UserPlugin");
        }
    }

}
