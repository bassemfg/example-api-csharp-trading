/* 
 * Tradovate API
 *
 * Tradovate API provides an access to the complete set of robust Tradovate functionality.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Tradovate.Services.Client;
using Tradovate.Services.Api;
using Tradovate.Services.Model;

namespace Tradovate.Services.Test
{
    /// <summary>
    ///  Class for testing FeesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class FeesApiTests
    {
        private FeesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new FeesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of FeesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' FeesApi
            //Assert.IsInstanceOfType(typeof(FeesApi), instance, "instance is a FeesApi");
        }

        /// <summary>
        /// Test FindMarketDataSubscriptionExchangeScope
        /// </summary>
        [Test]
        public void FindMarketDataSubscriptionExchangeScopeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.FindMarketDataSubscriptionExchangeScope(name);
            //Assert.IsInstanceOf<MarketDataSubscriptionExchangeScope> (response, "response is MarketDataSubscriptionExchangeScope");
        }
        /// <summary>
        /// Test FindMarketDataSubscriptionPlan
        /// </summary>
        [Test]
        public void FindMarketDataSubscriptionPlanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.FindMarketDataSubscriptionPlan(name);
            //Assert.IsInstanceOf<MarketDataSubscriptionPlan> (response, "response is MarketDataSubscriptionPlan");
        }
        /// <summary>
        /// Test FindTradovateSubscriptionPlan
        /// </summary>
        [Test]
        public void FindTradovateSubscriptionPlanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string name = null;
            //var response = instance.FindTradovateSubscriptionPlan(name);
            //Assert.IsInstanceOf<TradovateSubscriptionPlan> (response, "response is TradovateSubscriptionPlan");
        }
        /// <summary>
        /// Test GetAllMarketDataSubscriptionExchangeScopes
        /// </summary>
        [Test]
        public void GetAllMarketDataSubscriptionExchangeScopesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllMarketDataSubscriptionExchangeScopes();
            //Assert.IsInstanceOf<List<MarketDataSubscriptionExchangeScope>> (response, "response is List<MarketDataSubscriptionExchangeScope>");
        }
        /// <summary>
        /// Test GetAllMarketDataSubscriptionPlans
        /// </summary>
        [Test]
        public void GetAllMarketDataSubscriptionPlansTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllMarketDataSubscriptionPlans();
            //Assert.IsInstanceOf<List<MarketDataSubscriptionPlan>> (response, "response is List<MarketDataSubscriptionPlan>");
        }
        /// <summary>
        /// Test GetAllTradovateSubscriptionPlans
        /// </summary>
        [Test]
        public void GetAllTradovateSubscriptionPlansTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllTradovateSubscriptionPlans();
            //Assert.IsInstanceOf<List<TradovateSubscriptionPlan>> (response, "response is List<TradovateSubscriptionPlan>");
        }
        /// <summary>
        /// Test GetMarketDataSubscriptionExchangeScope
        /// </summary>
        [Test]
        public void GetMarketDataSubscriptionExchangeScopeTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetMarketDataSubscriptionExchangeScope(id);
            //Assert.IsInstanceOf<MarketDataSubscriptionExchangeScope> (response, "response is MarketDataSubscriptionExchangeScope");
        }
        /// <summary>
        /// Test GetMarketDataSubscriptionExchangeScopes
        /// </summary>
        [Test]
        public void GetMarketDataSubscriptionExchangeScopesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetMarketDataSubscriptionExchangeScopes(ids);
            //Assert.IsInstanceOf<List<MarketDataSubscriptionExchangeScope>> (response, "response is List<MarketDataSubscriptionExchangeScope>");
        }
        /// <summary>
        /// Test GetMarketDataSubscriptionPlan
        /// </summary>
        [Test]
        public void GetMarketDataSubscriptionPlanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetMarketDataSubscriptionPlan(id);
            //Assert.IsInstanceOf<MarketDataSubscriptionPlan> (response, "response is MarketDataSubscriptionPlan");
        }
        /// <summary>
        /// Test GetMarketDataSubscriptionPlans
        /// </summary>
        [Test]
        public void GetMarketDataSubscriptionPlansTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetMarketDataSubscriptionPlans(ids);
            //Assert.IsInstanceOf<List<MarketDataSubscriptionPlan>> (response, "response is List<MarketDataSubscriptionPlan>");
        }
        /// <summary>
        /// Test GetTradovateSubscriptionPlan
        /// </summary>
        [Test]
        public void GetTradovateSubscriptionPlanTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetTradovateSubscriptionPlan(id);
            //Assert.IsInstanceOf<TradovateSubscriptionPlan> (response, "response is TradovateSubscriptionPlan");
        }
        /// <summary>
        /// Test GetTradovateSubscriptionPlans
        /// </summary>
        [Test]
        public void GetTradovateSubscriptionPlansTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetTradovateSubscriptionPlans(ids);
            //Assert.IsInstanceOf<List<TradovateSubscriptionPlan>> (response, "response is List<TradovateSubscriptionPlan>");
        }
        /// <summary>
        /// Test SuggestMarketDataSubscriptionExchangeScopes
        /// </summary>
        [Test]
        public void SuggestMarketDataSubscriptionExchangeScopesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string t = null;
            //int? l = null;
            //var response = instance.SuggestMarketDataSubscriptionExchangeScopes(t, l);
            //Assert.IsInstanceOf<List<MarketDataSubscriptionExchangeScope>> (response, "response is List<MarketDataSubscriptionExchangeScope>");
        }
        /// <summary>
        /// Test SuggestMarketDataSubscriptionPlans
        /// </summary>
        [Test]
        public void SuggestMarketDataSubscriptionPlansTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string t = null;
            //int? l = null;
            //var response = instance.SuggestMarketDataSubscriptionPlans(t, l);
            //Assert.IsInstanceOf<List<MarketDataSubscriptionPlan>> (response, "response is List<MarketDataSubscriptionPlan>");
        }
        /// <summary>
        /// Test SuggestTradovateSubscriptionPlans
        /// </summary>
        [Test]
        public void SuggestTradovateSubscriptionPlansTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string t = null;
            //int? l = null;
            //var response = instance.SuggestTradovateSubscriptionPlans(t, l);
            //Assert.IsInstanceOf<List<TradovateSubscriptionPlan>> (response, "response is List<TradovateSubscriptionPlan>");
        }
    }

}
