/* 
 * Tradovate API
 *
 * Tradovate API provides an access to the complete set of robust Tradovate functionality.
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using Tradovate.Services.Client;
using Tradovate.Services.Api;
using Tradovate.Services.Model;

namespace Tradovate.Services.Test
{
    /// <summary>
    ///  Class for testing AlertsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AlertsApiTests
    {
        private AlertsApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new AlertsApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of AlertsApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' AlertsApi
            //Assert.IsInstanceOfType(typeof(AlertsApi), instance, "instance is a AlertsApi");
        }

        /// <summary>
        /// Test CompleteAlertSignal
        /// </summary>
        [Test]
        public void CompleteAlertSignalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CompleteAlertSignal body = null;
            //var response = instance.CompleteAlertSignal(body);
            //Assert.IsInstanceOf<AdminAlertSignalResponse> (response, "response is AdminAlertSignalResponse");
        }
        /// <summary>
        /// Test CreateAlert
        /// </summary>
        [Test]
        public void CreateAlertTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //CreateAlert body = null;
            //var response = instance.CreateAlert(body);
            //Assert.IsInstanceOf<AlertResponse> (response, "response is AlertResponse");
        }
        /// <summary>
        /// Test DeleteAlert
        /// </summary>
        [Test]
        public void DeleteAlertTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DeleteAlert body = null;
            //var response = instance.DeleteAlert(body);
            //Assert.IsInstanceOf<AlertResponse> (response, "response is AlertResponse");
        }
        /// <summary>
        /// Test DismissAlert
        /// </summary>
        [Test]
        public void DismissAlertTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //DismissAlert body = null;
            //var response = instance.DismissAlert(body);
            //Assert.IsInstanceOf<AlertResponse> (response, "response is AlertResponse");
        }
        /// <summary>
        /// Test GetAdminAlertSignal
        /// </summary>
        [Test]
        public void GetAdminAlertSignalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetAdminAlertSignal(id);
            //Assert.IsInstanceOf<AdminAlertSignal> (response, "response is AdminAlertSignal");
        }
        /// <summary>
        /// Test GetAdminAlertSignals
        /// </summary>
        [Test]
        public void GetAdminAlertSignalsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetAdminAlertSignals(ids);
            //Assert.IsInstanceOf<List<AdminAlertSignal>> (response, "response is List<AdminAlertSignal>");
        }
        /// <summary>
        /// Test GetAlert
        /// </summary>
        [Test]
        public void GetAlertTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetAlert(id);
            //Assert.IsInstanceOf<Alert> (response, "response is Alert");
        }
        /// <summary>
        /// Test GetAlertSignal
        /// </summary>
        [Test]
        public void GetAlertSignalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? id = null;
            //var response = instance.GetAlertSignal(id);
            //Assert.IsInstanceOf<AlertSignal> (response, "response is AlertSignal");
        }
        /// <summary>
        /// Test GetAlertSignals
        /// </summary>
        [Test]
        public void GetAlertSignalsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetAlertSignals(ids);
            //Assert.IsInstanceOf<List<AlertSignal>> (response, "response is List<AlertSignal>");
        }
        /// <summary>
        /// Test GetAlerts
        /// </summary>
        [Test]
        public void GetAlertsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> ids = null;
            //var response = instance.GetAlerts(ids);
            //Assert.IsInstanceOf<List<Alert>> (response, "response is List<Alert>");
        }
        /// <summary>
        /// Test GetAllAdminAlertSignals
        /// </summary>
        [Test]
        public void GetAllAdminAlertSignalsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllAdminAlertSignals();
            //Assert.IsInstanceOf<List<AdminAlertSignal>> (response, "response is List<AdminAlertSignal>");
        }
        /// <summary>
        /// Test GetAllAlertSignals
        /// </summary>
        [Test]
        public void GetAllAlertSignalsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllAlertSignals();
            //Assert.IsInstanceOf<List<AlertSignal>> (response, "response is List<AlertSignal>");
        }
        /// <summary>
        /// Test GetAllAlerts
        /// </summary>
        [Test]
        public void GetAllAlertsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetAllAlerts();
            //Assert.IsInstanceOf<List<Alert>> (response, "response is List<Alert>");
        }
        /// <summary>
        /// Test GetOwnedAdminAlertSignals
        /// </summary>
        [Test]
        public void GetOwnedAdminAlertSignalsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedAdminAlertSignals(masterid);
            //Assert.IsInstanceOf<List<AdminAlertSignal>> (response, "response is List<AdminAlertSignal>");
        }
        /// <summary>
        /// Test GetOwnedAdminAlertSignalsBatch
        /// </summary>
        [Test]
        public void GetOwnedAdminAlertSignalsBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedAdminAlertSignalsBatch(masterids);
            //Assert.IsInstanceOf<List<AdminAlertSignal>> (response, "response is List<AdminAlertSignal>");
        }
        /// <summary>
        /// Test GetOwnedAlertSignals
        /// </summary>
        [Test]
        public void GetOwnedAlertSignalsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedAlertSignals(masterid);
            //Assert.IsInstanceOf<List<AlertSignal>> (response, "response is List<AlertSignal>");
        }
        /// <summary>
        /// Test GetOwnedAlertSignalsBatch
        /// </summary>
        [Test]
        public void GetOwnedAlertSignalsBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedAlertSignalsBatch(masterids);
            //Assert.IsInstanceOf<List<AlertSignal>> (response, "response is List<AlertSignal>");
        }
        /// <summary>
        /// Test GetOwnedAlerts
        /// </summary>
        [Test]
        public void GetOwnedAlertsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? masterid = null;
            //var response = instance.GetOwnedAlerts(masterid);
            //Assert.IsInstanceOf<List<Alert>> (response, "response is List<Alert>");
        }
        /// <summary>
        /// Test GetOwnedAlertsBatch
        /// </summary>
        [Test]
        public void GetOwnedAlertsBatchTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<int?> masterids = null;
            //var response = instance.GetOwnedAlertsBatch(masterids);
            //Assert.IsInstanceOf<List<Alert>> (response, "response is List<Alert>");
        }
        /// <summary>
        /// Test MarkReadAlertSignal
        /// </summary>
        [Test]
        public void MarkReadAlertSignalTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //MarkReadAlertSignal body = null;
            //var response = instance.MarkReadAlertSignal(body);
            //Assert.IsInstanceOf<AlertResponse> (response, "response is AlertResponse");
        }
        /// <summary>
        /// Test ModifyAlert
        /// </summary>
        [Test]
        public void ModifyAlertTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ModifyAlert body = null;
            //var response = instance.ModifyAlert(body);
            //Assert.IsInstanceOf<AlertResponse> (response, "response is AlertResponse");
        }
        /// <summary>
        /// Test ResetAlert
        /// </summary>
        [Test]
        public void ResetAlertTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ResetAlert body = null;
            //var response = instance.ResetAlert(body);
            //Assert.IsInstanceOf<AlertResponse> (response, "response is AlertResponse");
        }
        /// <summary>
        /// Test TakeAlertSignalOwnership
        /// </summary>
        [Test]
        public void TakeAlertSignalOwnershipTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //TakeAlertSignalOwnership body = null;
            //var response = instance.TakeAlertSignalOwnership(body);
            //Assert.IsInstanceOf<AdminAlertSignalResponse> (response, "response is AdminAlertSignalResponse");
        }
    }

}
